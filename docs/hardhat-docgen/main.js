/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={268:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var a=n(81),i=n.n(a),r=n(645),s=n.n(r)()(i());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);"]),s.push([e.id,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""]);const o=s},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(s[u]=!0)}for(var p=0;p<e.length;p++){var d=[].concat(e[p]);a&&s[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},81:e=>{"use strict";e.exports=function(e){return e[1]}},267:(e,t,n)=>{"use strict";var a=Object.freeze({});function i(e){return null==e}function r(e){return null!=e}function s(e){return!0===e}function o(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function u(e){return null!==e&&"object"==typeof e}var p=Object.prototype.toString;function d(e){return"[object Object]"===p.call(e)}function l(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function y(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function c(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===p?JSON.stringify(e,null,2):String(e)}function m(e){var t=parseFloat(e);return isNaN(t)?e:t}function f(e,t){for(var n=Object.create(null),a=e.split(","),i=0;i<a.length;i++)n[a[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var h=f("slot,component",!0),b=f("key,ref,slot,slot-scope,is");function v(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var T=Object.prototype.hasOwnProperty;function w(e,t){return T.call(e,t)}function g(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _=/-(\w)/g,k=g((function(e){return e.replace(_,(function(e,t){return t?t.toUpperCase():""}))})),M=g((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),A=/\B([A-Z])/g,x=g((function(e){return e.replace(A,"-$1").toLowerCase()})),R=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function I(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function C(e,t){for(var n in t)e[n]=t[n];return e}function P(e){for(var t={},n=0;n<e.length;n++)e[n]&&C(t,e[n]);return t}function O(e,t,n){}var S=function(e,t,n){return!1},E=function(e){return e};function F(e,t){if(e===t)return!0;var n=u(e),a=u(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var i=Array.isArray(e),r=Array.isArray(t);if(i&&r)return e.length===t.length&&e.every((function(e,n){return F(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||r)return!1;var s=Object.keys(e),o=Object.keys(t);return s.length===o.length&&s.every((function(n){return F(e[n],t[n])}))}catch(e){return!1}}function N(e,t){for(var n=0;n<e.length;n++)if(F(e[n],t))return n;return-1}function D(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var L="data-server-rendered",B=["component","directive","filter"],$=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:S,isReservedAttr:S,isUnknownElement:S,getTagNamespace:O,parsePlatformTagName:E,mustUseProp:S,async:!0,_lifecycleHooks:$},j=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function q(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function H(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var z,V=new RegExp("[^"+j.source+".$_\\d]"),W="__proto__"in{},G="undefined"!=typeof window,K="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,X=K&&WXEnvironment.platform.toLowerCase(),J=G&&window.navigator.userAgent.toLowerCase(),Y=J&&/msie|trident/.test(J),Q=J&&J.indexOf("msie 9.0")>0,Z=J&&J.indexOf("edge/")>0,ee=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===X),te=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),ne={}.watch,ae=!1;if(G)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){ae=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var re=function(){return void 0===z&&(z=!G&&!K&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),z},se=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var ue,pe="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);ue="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var de=O,le=0,ye=function(){this.id=le++,this.subs=[]};ye.prototype.addSub=function(e){this.subs.push(e)},ye.prototype.removeSub=function(e){v(this.subs,e)},ye.prototype.depend=function(){ye.target&&ye.target.addDep(this)},ye.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},ye.target=null;var ce=[];function me(e){ce.push(e),ye.target=e}function fe(){ce.pop(),ye.target=ce[ce.length-1]}var he=function(e,t,n,a,i,r,s,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=i,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=s,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},be={child:{configurable:!0}};be.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,be);var ve=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function Te(e){return new he(void 0,void 0,void 0,String(e))}function we(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ge=Array.prototype,_e=Object.create(ge);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ge[e];H(_e,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var i,r=t.apply(this,n),s=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&s.observeArray(i),s.dep.notify(),r}))}));var ke=Object.getOwnPropertyNames(_e),Me=!0;function Ae(e){Me=e}var xe=function(e){this.value=e,this.dep=new ye,this.vmCount=0,H(e,"__ob__",this),Array.isArray(e)?(W?function(e,t){e.__proto__=t}(e,_e):function(e,t,n){for(var a=0,i=n.length;a<i;a++){var r=n[a];H(e,r,t[r])}}(e,_e,ke),this.observeArray(e)):this.walk(e)};function Re(e,t){var n;if(u(e)&&!(e instanceof he))return w(e,"__ob__")&&e.__ob__ instanceof xe?n=e.__ob__:Me&&!re()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new xe(e)),t&&n&&n.vmCount++,n}function Ie(e,t,n,a,i){var r=new ye,s=Object.getOwnPropertyDescriptor(e,t);if(!s||!1!==s.configurable){var o=s&&s.get,u=s&&s.set;o&&!u||2!==arguments.length||(n=e[t]);var p=!i&&Re(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=o?o.call(e):n;return ye.target&&(r.depend(),p&&(p.dep.depend(),Array.isArray(t)&&Oe(t))),t},set:function(t){var a=o?o.call(e):n;t===a||t!=t&&a!=a||o&&!u||(u?u.call(e,t):n=t,p=!i&&Re(t),r.notify())}})}}function Ce(e,t,n){if(Array.isArray(e)&&l(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(Ie(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function Pe(e,t){if(Array.isArray(e)&&l(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function Oe(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Oe(t)}xe.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Ie(e,t[n])},xe.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Re(e[t])};var Se=U.optionMergeStrategies;function Ee(e,t){if(!t)return e;for(var n,a,i,r=pe?Reflect.ownKeys(t):Object.keys(t),s=0;s<r.length;s++)"__ob__"!==(n=r[s])&&(a=e[n],i=t[n],w(e,n)?a!==i&&d(a)&&d(i)&&Ee(a,i):Ce(e,n,i));return e}function Fe(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return a?Ee(a,i):i}:t?e?function(){return Ee("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Ne(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function De(e,t,n,a){var i=Object.create(e||null);return t?C(i,t):i}Se.data=function(e,t,n){return n?Fe(e,t,n):t&&"function"!=typeof t?e:Fe(e,t)},$.forEach((function(e){Se[e]=Ne})),B.forEach((function(e){Se[e+"s"]=De})),Se.watch=function(e,t,n,a){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var r in C(i,e),t){var s=i[r],o=t[r];s&&!Array.isArray(s)&&(s=[s]),i[r]=s?s.concat(o):Array.isArray(o)?o:[o]}return i},Se.props=Se.methods=Se.inject=Se.computed=function(e,t,n,a){if(!e)return t;var i=Object.create(null);return C(i,e),t&&C(i,t),i},Se.provide=Fe;var Le=function(e,t){return void 0===t?e:t};function Be(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,i,r={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(i=n[a])&&(r[k(i)]={type:null});else if(d(n))for(var s in n)i=n[s],r[k(s)]=d(i)?i:{type:i};e.props=r}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)a[n[i]]={from:n[i]};else if(d(n))for(var r in n){var s=n[r];a[r]=d(s)?C({from:r},s):{from:s}}}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=Be(e,t.extends,n)),t.mixins))for(var a=0,i=t.mixins.length;a<i;a++)e=Be(e,t.mixins[a],n);var r,s={};for(r in e)o(r);for(r in t)w(e,r)||o(r);function o(a){var i=Se[a]||Le;s[a]=i(e[a],t[a],n,a)}return s}function $e(e,t,n,a){if("string"==typeof n){var i=e[t];if(w(i,n))return i[n];var r=k(n);if(w(i,r))return i[r];var s=M(r);return w(i,s)?i[s]:i[n]||i[r]||i[s]}}function Ue(e,t,n,a){var i=t[e],r=!w(n,e),s=n[e],o=ze(Boolean,i.type);if(o>-1)if(r&&!w(i,"default"))s=!1;else if(""===s||s===x(e)){var u=ze(String,i.type);(u<0||o<u)&&(s=!0)}if(void 0===s){s=function(e,t,n){if(w(t,"default")){var a=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:"function"==typeof a&&"Function"!==qe(t.type)?a.call(e):a}}(a,i,e);var p=Me;Ae(!0),Re(s),Ae(p)}return s}var je=/^\s*function (\w+)/;function qe(e){var t=e&&e.toString().match(je);return t?t[1]:""}function He(e,t){return qe(e)===qe(t)}function ze(e,t){if(!Array.isArray(t))return He(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(He(t[n],e))return n;return-1}function Ve(e,t,n){me();try{if(t)for(var a=t;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var r=0;r<i.length;r++)try{if(!1===i[r].call(a,e,t,n))return}catch(e){Ge(e,a,"errorCaptured hook")}}Ge(e,t,n)}finally{fe()}}function We(e,t,n,a,i){var r;try{(r=n?e.apply(t,n):e.call(t))&&!r._isVue&&y(r)&&!r._handled&&(r.catch((function(e){return Ve(e,a,i+" (Promise/async)")})),r._handled=!0)}catch(e){Ve(e,a,i)}return r}function Ge(e,t,n){if(U.errorHandler)try{return U.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ke(t)}Ke(e)}function Ke(e,t,n){if(!G&&!K||"undefined"==typeof console)throw e;console.error(e)}var Xe,Je=!1,Ye=[],Qe=!1;function Ze(){Qe=!1;var e=Ye.slice(0);Ye.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var et=Promise.resolve();Xe=function(){et.then(Ze),ee&&setTimeout(O)},Je=!0}else if(Y||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Xe="undefined"!=typeof setImmediate&&oe(setImmediate)?function(){setImmediate(Ze)}:function(){setTimeout(Ze,0)};else{var tt=1,nt=new MutationObserver(Ze),at=document.createTextNode(String(tt));nt.observe(at,{characterData:!0}),Xe=function(){tt=(tt+1)%2,at.data=String(tt)},Je=!0}function it(e,t){var n;if(Ye.push((function(){if(e)try{e.call(t)}catch(e){Ve(e,t,"nextTick")}else n&&n(t)})),Qe||(Qe=!0,Xe()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new ue;function st(e){ot(e,rt),rt.clear()}function ot(e,t){var n,a,i=Array.isArray(e);if(!(!i&&!u(e)||Object.isFrozen(e)||e instanceof he)){if(e.__ob__){var r=e.__ob__.dep.id;if(t.has(r))return;t.add(r)}if(i)for(n=e.length;n--;)ot(e[n],t);else for(n=(a=Object.keys(e)).length;n--;)ot(e[a[n]],t)}}var ut=g((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function pt(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return We(a,null,arguments,t,"v-on handler");for(var i=a.slice(),r=0;r<i.length;r++)We(i[r],null,e,t,"v-on handler")}return n.fns=e,n}function dt(e,t,n,a,r,o){var u,p,d,l;for(u in e)p=e[u],d=t[u],l=ut(u),i(p)||(i(d)?(i(p.fns)&&(p=e[u]=pt(p,o)),s(l.once)&&(p=e[u]=r(l.name,p,l.capture)),n(l.name,p,l.capture,l.passive,l.params)):p!==d&&(d.fns=p,e[u]=d));for(u in t)i(e[u])&&a((l=ut(u)).name,t[u],l.capture)}function lt(e,t,n){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function u(){n.apply(this,arguments),v(a.fns,u)}i(o)?a=pt([u]):r(o.fns)&&s(o.merged)?(a=o).fns.push(u):a=pt([o,u]),a.merged=!0,e[t]=a}function yt(e,t,n,a,i){if(r(t)){if(w(t,n))return e[n]=t[n],i||delete t[n],!0;if(w(t,a))return e[n]=t[a],i||delete t[a],!0}return!1}function ct(e){return o(e)?[Te(e)]:Array.isArray(e)?ft(e):void 0}function mt(e){return r(e)&&r(e.text)&&!1===e.isComment}function ft(e,t){var n,a,u,p,d=[];for(n=0;n<e.length;n++)i(a=e[n])||"boolean"==typeof a||(p=d[u=d.length-1],Array.isArray(a)?a.length>0&&(mt((a=ft(a,(t||"")+"_"+n))[0])&&mt(p)&&(d[u]=Te(p.text+a[0].text),a.shift()),d.push.apply(d,a)):o(a)?mt(p)?d[u]=Te(p.text+a):""!==a&&d.push(Te(a)):mt(a)&&mt(p)?d[u]=Te(p.text+a.text):(s(e._isVList)&&r(a.tag)&&i(a.key)&&r(t)&&(a.key="__vlist"+t+"_"+n+"__"),d.push(a)));return d}function ht(e,t){if(e){for(var n=Object.create(null),a=pe?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var r=a[i];if("__ob__"!==r){for(var s=e[r].from,o=t;o;){if(o._provided&&w(o._provided,s)){n[r]=o._provided[s];break}o=o.$parent}if(!o&&"default"in e[r]){var u=e[r].default;n[r]="function"==typeof u?u.call(t):u}}}return n}}function bt(e,t){if(!e||!e.length)return{};for(var n={},a=0,i=e.length;a<i;a++){var r=e[a],s=r.data;if(s&&s.attrs&&s.attrs.slot&&delete s.attrs.slot,r.context!==t&&r.fnContext!==t||!s||null==s.slot)(n.default||(n.default=[])).push(r);else{var o=s.slot,u=n[o]||(n[o]=[]);"template"===r.tag?u.push.apply(u,r.children||[]):u.push(r)}}for(var p in n)n[p].every(vt)&&delete n[p];return n}function vt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function Tt(e){return e.isComment&&e.asyncFactory}function wt(e,t,n){var i,r=Object.keys(t).length>0,s=e?!!e.$stable:!r,o=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&n&&n!==a&&o===n.$key&&!r&&!n.$hasNormal)return n;for(var u in i={},e)e[u]&&"$"!==u[0]&&(i[u]=gt(t,u,e[u]))}else i={};for(var p in t)p in i||(i[p]=_t(t,p));return e&&Object.isExtensible(e)&&(e._normalized=i),H(i,"$stable",s),H(i,"$key",o),H(i,"$hasNormal",r),i}function gt(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ct(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!Tt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function _t(e,t){return function(){return e[t]}}function kt(e,t){var n,a,i,s,o;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),a=0,i=e.length;a<i;a++)n[a]=t(e[a],a);else if("number"==typeof e)for(n=new Array(e),a=0;a<e;a++)n[a]=t(a+1,a);else if(u(e))if(pe&&e[Symbol.iterator]){n=[];for(var p=e[Symbol.iterator](),d=p.next();!d.done;)n.push(t(d.value,n.length)),d=p.next()}else for(s=Object.keys(e),n=new Array(s.length),a=0,i=s.length;a<i;a++)o=s[a],n[a]=t(e[o],o,a);return r(n)||(n=[]),n._isVList=!0,n}function Mt(e,t,n,a){var i,r=this.$scopedSlots[e];r?(n=n||{},a&&(n=C(C({},a),n)),i=r(n)||("function"==typeof t?t():t)):i=this.$slots[e]||("function"==typeof t?t():t);var s=n&&n.slot;return s?this.$createElement("template",{slot:s},i):i}function At(e){return $e(this.$options,"filters",e)||E}function xt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function Rt(e,t,n,a,i){var r=U.keyCodes[t]||n;return i&&a&&!U.keyCodes[t]?xt(i,a):r?xt(r,e):a?x(a)!==t:void 0===e}function It(e,t,n,a,i){if(n&&u(n)){var r;Array.isArray(n)&&(n=P(n));var s=function(s){if("class"===s||"style"===s||b(s))r=e;else{var o=e.attrs&&e.attrs.type;r=a||U.mustUseProp(t,o,s)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=k(s),p=x(s);u in r||p in r||(r[s]=n[s],i&&((e.on||(e.on={}))["update:"+s]=function(e){n[s]=e}))};for(var o in n)s(o)}return e}function Ct(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||Ot(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function Pt(e,t,n){return Ot(e,"__once__"+t+(n?"_"+n:""),!0),e}function Ot(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&St(e[a],t+"_"+a,n);else St(e,t,n)}function St(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Et(e,t){if(t&&d(t)){var n=e.on=e.on?C({},e.on):{};for(var a in t){var i=n[a],r=t[a];n[a]=i?[].concat(i,r):r}}return e}function Ft(e,t,n,a){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var r=e[i];Array.isArray(r)?Ft(r,t,n):r&&(r.proxy&&(r.fn.proxy=!0),t[r.key]=r.fn)}return a&&(t.$key=a),t}function Nt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function Dt(e,t){return"string"==typeof e?t+e:e}function Lt(e){e._o=Pt,e._n=m,e._s=c,e._l=kt,e._t=Mt,e._q=F,e._i=N,e._m=Ct,e._f=At,e._k=Rt,e._b=It,e._v=Te,e._e=ve,e._u=Ft,e._g=Et,e._d=Nt,e._p=Dt}function Bt(e,t,n,i,r){var o,u=this,p=r.options;w(i,"_uid")?(o=Object.create(i))._original=i:(o=i,i=i._original);var d=s(p._compiled),l=!d;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||a,this.injections=ht(p.inject,i),this.slots=function(){return u.$slots||wt(e.scopedSlots,u.$slots=bt(n,i)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return wt(e.scopedSlots,this.slots())}}),d&&(this.$options=p,this.$slots=this.slots(),this.$scopedSlots=wt(e.scopedSlots,this.$slots)),p._scopeId?this._c=function(e,t,n,a){var r=Vt(o,e,t,n,a,l);return r&&!Array.isArray(r)&&(r.fnScopeId=p._scopeId,r.fnContext=i),r}:this._c=function(e,t,n,a){return Vt(o,e,t,n,a,l)}}function $t(e,t,n,a,i){var r=we(e);return r.fnContext=n,r.fnOptions=a,t.slot&&((r.data||(r.data={})).slot=t.slot),r}function Ut(e,t){for(var n in t)e[k(n)]=t[n]}Lt(Bt.prototype);var jt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;jt.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;return r(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns),new e.componentOptions.Ctor(n)}(e,tn)).$mount(t?e.elm:void 0,t)},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,r){var s=i.data.scopedSlots,o=e.$scopedSlots,u=!!(s&&!s.$stable||o!==a&&!o.$stable||s&&e.$scopedSlots.$key!==s.$key||!s&&e.$scopedSlots.$key),p=!!(r||e.$options._renderChildren||u);if(e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=r,e.$attrs=i.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){Ae(!1);for(var d=e._props,l=e.$options._propKeys||[],y=0;y<l.length;y++){var c=l[y],m=e.$options.props;d[c]=Ue(c,m,t,e)}Ae(!0),e.$options.propsData=t}n=n||a;var f=e.$options._parentListeners;e.$options._parentListeners=n,en(e,n,f),p&&(e.$slots=bt(r,i.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,on(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,pn.push(t)):rn(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?sn(t,!0):t.$destroy())}},qt=Object.keys(jt);function Ht(e,t,n,o,p){if(!i(e)){var d=n.$options._base;if(u(e)&&(e=d.extend(e)),"function"==typeof e){var l;if(i(e.cid)&&(e=function(e,t){if(s(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var n=Kt;if(n&&r(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&r(e.loadingComp))return e.loadingComp;if(n&&!r(e.owners)){var a=e.owners=[n],o=!0,p=null,d=null;n.$on("hook:destroyed",(function(){return v(a,n)}));var l=function(e){for(var t=0,n=a.length;t<n;t++)a[t].$forceUpdate();e&&(a.length=0,null!==p&&(clearTimeout(p),p=null),null!==d&&(clearTimeout(d),d=null))},c=D((function(n){e.resolved=Xt(n,t),o?a.length=0:l(!0)})),m=D((function(t){r(e.errorComp)&&(e.error=!0,l(!0))})),f=e(c,m);return u(f)&&(y(f)?i(e.resolved)&&f.then(c,m):y(f.component)&&(f.component.then(c,m),r(f.error)&&(e.errorComp=Xt(f.error,t)),r(f.loading)&&(e.loadingComp=Xt(f.loading,t),0===f.delay?e.loading=!0:p=setTimeout((function(){p=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,l(!1))}),f.delay||200)),r(f.timeout)&&(d=setTimeout((function(){d=null,i(e.resolved)&&m(null)}),f.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(l=e,d),void 0===e))return function(e,t,n,a,i){var r=ve();return r.asyncFactory=e,r.asyncMeta={data:t,context:n,children:a,tag:i},r}(l,t,n,o,p);t=t||{},In(e),r(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),s=i[a],o=t.model.callback;r(s)?(Array.isArray(s)?-1===s.indexOf(o):s!==o)&&(i[a]=[o].concat(s)):i[a]=o}(e.options,t);var c=function(e,t,n){var a=t.options.props;if(!i(a)){var s={},o=e.attrs,u=e.props;if(r(o)||r(u))for(var p in a){var d=x(p);yt(s,u,p,d,!0)||yt(s,o,p,d,!1)}return s}}(t,e);if(s(e.options.functional))return function(e,t,n,i,s){var o=e.options,u={},p=o.props;if(r(p))for(var d in p)u[d]=Ue(d,p,t||a);else r(n.attrs)&&Ut(u,n.attrs),r(n.props)&&Ut(u,n.props);var l=new Bt(n,u,s,i,e),y=o.render.call(null,l._c,l);if(y instanceof he)return $t(y,n,l.parent,o);if(Array.isArray(y)){for(var c=ct(y)||[],m=new Array(c.length),f=0;f<c.length;f++)m[f]=$t(c[f],n,l.parent,o);return m}}(e,c,t,n,o);var m=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<qt.length;n++){var a=qt[n],i=t[a],r=jt[a];i===r||i&&i._merged||(t[a]=i?zt(r,i):r)}}(t);var h=e.options.name||p;return new he("vue-component-"+e.cid+(h?"-"+h:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:c,listeners:m,tag:p,children:o},l)}}}function zt(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function Vt(e,t,n,a,i,p){return(Array.isArray(n)||o(n))&&(i=a,a=n,n=void 0),s(p)&&(i=2),function(e,t,n,a,i){if(r(n)&&r(n.__ob__))return ve();if(r(n)&&r(n.is)&&(t=n.is),!t)return ve();var s,o,p;(Array.isArray(a)&&"function"==typeof a[0]&&((n=n||{}).scopedSlots={default:a[0]},a.length=0),2===i?a=ct(a):1===i&&(a=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(a)),"string"==typeof t)?(o=e.$vnode&&e.$vnode.ns||U.getTagNamespace(t),s=U.isReservedTag(t)?new he(U.parsePlatformTagName(t),n,a,void 0,void 0,e):n&&n.pre||!r(p=$e(e.$options,"components",t))?new he(t,n,a,void 0,void 0,e):Ht(p,n,e,a,t)):s=Ht(t,n,e,a);return Array.isArray(s)?s:r(s)?(r(o)&&Wt(s,o),r(n)&&function(e){u(e.style)&&st(e.style),u(e.class)&&st(e.class)}(n),s):ve()}(e,t,n,a,i)}function Wt(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),r(e.children))for(var a=0,o=e.children.length;a<o;a++){var u=e.children[a];r(u.tag)&&(i(u.ns)||s(n)&&"svg"!==u.tag)&&Wt(u,t,n)}}var Gt,Kt=null;function Xt(e,t){return(e.__esModule||pe&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Jt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(r(n)&&(r(n.componentOptions)||Tt(n)))return n}}function Yt(e,t){Gt.$on(e,t)}function Qt(e,t){Gt.$off(e,t)}function Zt(e,t){var n=Gt;return function a(){var i=t.apply(null,arguments);null!==i&&n.$off(e,a)}}function en(e,t,n){Gt=e,dt(t,n||{},Yt,Qt,Zt,e),Gt=void 0}var tn=null;function nn(e){var t=tn;return tn=e,function(){tn=t}}function an(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function rn(e,t){if(t){if(e._directInactive=!1,an(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)rn(e.$children[n]);on(e,"activated")}}function sn(e,t){if(!(t&&(e._directInactive=!0,an(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)sn(e.$children[n]);on(e,"deactivated")}}function on(e,t){me();var n=e.$options[t],a=t+" hook";if(n)for(var i=0,r=n.length;i<r;i++)We(n[i],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),fe()}var un=[],pn=[],dn={},ln=!1,yn=!1,cn=0,mn=0,fn=Date.now;if(G&&!Y){var hn=window.performance;hn&&"function"==typeof hn.now&&fn()>document.createEvent("Event").timeStamp&&(fn=function(){return hn.now()})}function bn(){var e,t;for(mn=fn(),yn=!0,un.sort((function(e,t){return e.id-t.id})),cn=0;cn<un.length;cn++)(e=un[cn]).before&&e.before(),t=e.id,dn[t]=null,e.run();var n=pn.slice(),a=un.slice();cn=un.length=pn.length=0,dn={},ln=yn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,rn(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&on(a,"updated")}}(a),se&&U.devtools&&se.emit("flush")}var vn=0,Tn=function(e,t,n,a,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++vn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ue,this.newDepIds=new ue,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!V.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};Tn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Ve(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&st(e),fe(),this.cleanupDeps()}return e},Tn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},Tn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},Tn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==dn[t]){if(dn[t]=!0,yn){for(var n=un.length-1;n>cn&&un[n].id>e.id;)n--;un.splice(n+1,0,e)}else un.push(e);ln||(ln=!0,it(bn))}}(this)},Tn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';We(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},Tn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},Tn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},Tn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||v(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var wn={enumerable:!0,configurable:!0,get:O,set:O};function gn(e,t,n){wn.get=function(){return this[t][n]},wn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,wn)}var _n={lazy:!0};function kn(e,t,n){var a=!re();"function"==typeof n?(wn.get=a?Mn(t):An(n),wn.set=O):(wn.get=n.get?a&&!1!==n.cache?Mn(t):An(n.get):O,wn.set=n.set||O),Object.defineProperty(e,t,wn)}function Mn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ye.target&&t.depend(),t.value}}function An(e){return function(){return e.call(this,this)}}function xn(e,t,n,a){return d(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var Rn=0;function In(e){var t=e.options;if(e.super){var n=In(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var i in n)n[i]!==a[i]&&(t||(t={}),t[i]=n[i]);return t}(e);a&&C(e.extendOptions,a),(t=e.options=Be(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Cn(e){this._init(e)}function Pn(e){return e&&(e.Ctor.options.name||e.tag)}function On(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:(n=e,!("[object RegExp]"!==p.call(n))&&e.test(t));var n}function Sn(e,t){var n=e.cache,a=e.keys,i=e._vnode;for(var r in n){var s=n[r];if(s){var o=s.name;o&&!t(o)&&En(n,r,a,i)}}}function En(e,t,n,a){var i=e[t];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[t]=null,v(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Rn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var i=a.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Be(In(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&en(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=bt(t._renderChildren,i),e.$scopedSlots=a,e._c=function(t,n,a,i){return Vt(e,t,n,a,i,!1)},e.$createElement=function(t,n,a,i){return Vt(e,t,n,a,i,!0)};var r=n&&n.data;Ie(e,"$attrs",r&&r.attrs||a,null,!0),Ie(e,"$listeners",t._parentListeners||a,null,!0)}(t),on(t,"beforeCreate"),function(e){var t=ht(e.$options.inject,e);t&&(Ae(!1),Object.keys(t).forEach((function(n){Ie(e,n,t[n])})),Ae(!0))}(t),function(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},i=e.$options._propKeys=[];e.$parent&&Ae(!1);var r=function(r){i.push(r);var s=Ue(r,t,n,e);Ie(a,r,s),r in e||gn(e,"_props",r)};for(var s in t)r(s);Ae(!0)}(e,t.props),t.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?O:R(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return Ve(e,t,"data()"),{}}finally{fe()}}(t,e):t||{})||(t={});for(var n=Object.keys(t),a=e.$options.props,i=(e.$options.methods,n.length);i--;){var r=n[i];a&&w(a,r)||q(r)||gn(e,"_data",r)}Re(t,!0)}(e):Re(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=re();for(var i in t){var r=t[i],s="function"==typeof r?r:r.get;a||(n[i]=new Tn(e,s||O,O,_n)),i in e||kn(e,i,r)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var i=0;i<a.length;i++)xn(e,n,a[i]);else xn(e,n,a)}}(e,t.watch)}(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),on(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Cn),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=Ce,e.prototype.$delete=Pe,e.prototype.$watch=function(e,t,n){var a=this;if(d(t))return xn(a,e,t,n);(n=n||{}).user=!0;var i=new Tn(a,e,t,n);if(n.immediate){var r='callback for immediate watcher "'+i.expression+'"';me(),We(t,a,[i.value],a,r),fe()}return function(){i.teardown()}}}(Cn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var i=0,r=e.length;i<r;i++)a.$on(e[i],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,i=e.length;a<i;a++)n.$off(e[a],t);return n}var r,s=n._events[e];if(!s)return n;if(!t)return n._events[e]=null,n;for(var o=s.length;o--;)if((r=s[o])===t||r.fn===t){s.splice(o,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?I(n):n;for(var a=I(arguments,1),i='event handler for "'+e+'"',r=0,s=n.length;r<s;r++)We(n[r],t,a,t,i)}return t}}(Cn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,i=n._vnode,r=nn(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),r(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){on(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||v(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),on(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Cn),function(e){Lt(e.prototype),e.prototype.$nextTick=function(e){return it(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,i=n._parentVnode;i&&(t.$scopedSlots=wt(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{Kt=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){Ve(n,t,"render"),e=t._vnode}finally{Kt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=ve()),e.parent=i,e}}(Cn);var Fn=[String,RegExp,Array],Nn={name:"keep-alive",abstract:!0,props:{include:Fn,exclude:Fn,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,a=e.vnodeToCache,i=e.keyToCache;if(a){var r=a.tag,s=a.componentInstance,o=a.componentOptions;t[i]={name:Pn(o),tag:r,componentInstance:s},n.push(i),this.max&&n.length>parseInt(this.max)&&En(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)En(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Sn(e,(function(e){return On(t,e)}))})),this.$watch("exclude",(function(t){Sn(e,(function(e){return!On(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Jt(e),n=t&&t.componentOptions;if(n){var a=Pn(n),i=this.include,r=this.exclude;if(i&&(!a||!On(i,a))||r&&a&&On(r,a))return t;var s=this.cache,o=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;s[u]?(t.componentInstance=s[u].componentInstance,v(o,u),o.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}},Dn={KeepAlive:Nn};!function(e){var t={get:function(){return U}};Object.defineProperty(e,"config",t),e.util={warn:de,extend:C,mergeOptions:Be,defineReactive:Ie},e.set=Ce,e.delete=Pe,e.nextTick=it,e.observable=function(e){return Re(e),e},e.options=Object.create(null),B.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,C(e.options.components,Dn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=I(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Be(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var r=e.name||n.options.name,s=function(e){this._init(e)};return(s.prototype=Object.create(n.prototype)).constructor=s,s.cid=t++,s.options=Be(n.options,e),s.super=n,s.options.props&&function(e){var t=e.options.props;for(var n in t)gn(e.prototype,"_props",n)}(s),s.options.computed&&function(e){var t=e.options.computed;for(var n in t)kn(e.prototype,n,t[n])}(s),s.extend=n.extend,s.mixin=n.mixin,s.use=n.use,B.forEach((function(e){s[e]=n[e]})),r&&(s.options.components[r]=s),s.superOptions=n.options,s.extendOptions=e,s.sealedOptions=C({},s.options),i[a]=s,s}}(e),function(e){B.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Cn),Object.defineProperty(Cn.prototype,"$isServer",{get:re}),Object.defineProperty(Cn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Cn,"FunctionalRenderContext",{value:Bt}),Cn.version="2.6.14";var Ln=f("style,class"),Bn=f("input,textarea,option,select,progress"),$n=function(e,t,n){return"value"===n&&Bn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Un=f("contenteditable,draggable,spellcheck"),jn=f("events,caret,typing,plaintext-only"),qn=f("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Hn="http://www.w3.org/1999/xlink",zn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Vn=function(e){return zn(e)?e.slice(6,e.length):""},Wn=function(e){return null==e||!1===e};function Gn(e,t){return{staticClass:Kn(e.staticClass,t.staticClass),class:r(e.class)?[e.class,t.class]:t.class}}function Kn(e,t){return e?t?e+" "+t:e:t||""}function Xn(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,i=e.length;a<i;a++)r(t=Xn(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Jn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Yn=f("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Qn=f("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Zn=function(e){return Yn(e)||Qn(e)};function ea(e){return Qn(e)?"svg":"math"===e?"math":void 0}var ta=Object.create(null),na=f("text,number,password,search,email,tel,url");function aa(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var ia=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Jn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),ra={create:function(e,t){sa(t)},update:function(e,t){e.data.ref!==t.data.ref&&(sa(e,!0),sa(t))},destroy:function(e){sa(e,!0)}};function sa(e,t){var n=e.data.ref;if(r(n)){var a=e.context,i=e.componentInstance||e.elm,s=a.$refs;t?Array.isArray(s[n])?v(s[n],i):s[n]===i&&(s[n]=void 0):e.data.refInFor?Array.isArray(s[n])?s[n].indexOf(i)<0&&s[n].push(i):s[n]=[i]:s[n]=i}}var oa=new he("",{},[]),ua=["create","activate","update","remove","destroy"];function pa(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&r(e.data)===r(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=r(n=e.data)&&r(n=n.attrs)&&n.type,i=r(n=t.data)&&r(n=n.attrs)&&n.type;return a===i||na(a)&&na(i)}(e,t)||s(e.isAsyncPlaceholder)&&i(t.asyncFactory.error))}function da(e,t,n){var a,i,s={};for(a=t;a<=n;++a)r(i=e[a].key)&&(s[i]=a);return s}var la={create:ya,update:ya,destroy:function(e){ya(e,oa)}};function ya(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,i,r=e===oa,s=t===oa,o=ma(e.data.directives,e.context),u=ma(t.data.directives,t.context),p=[],d=[];for(n in u)a=o[n],i=u[n],a?(i.oldValue=a.value,i.oldArg=a.arg,ha(i,"update",t,e),i.def&&i.def.componentUpdated&&d.push(i)):(ha(i,"bind",t,e),i.def&&i.def.inserted&&p.push(i));if(p.length){var l=function(){for(var n=0;n<p.length;n++)ha(p[n],"inserted",t,e)};r?lt(t,"insert",l):l()}if(d.length&&lt(t,"postpatch",(function(){for(var n=0;n<d.length;n++)ha(d[n],"componentUpdated",t,e)})),!r)for(n in o)u[n]||ha(o[n],"unbind",e,e,s)}(e,t)}var ca=Object.create(null);function ma(e,t){var n,a,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=ca),i[fa(a)]=a,a.def=$e(t.$options,"directives",a.name);return i}function fa(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ha(e,t,n,a,i){var r=e.def&&e.def[t];if(r)try{r(n.elm,e,n,a,i)}catch(a){Ve(a,n.context,"directive "+e.name+" "+t+" hook")}}var ba=[ra,la];function va(e,t){var n=t.componentOptions;if(!(r(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var a,s,o=t.elm,u=e.data.attrs||{},p=t.data.attrs||{};for(a in r(p.__ob__)&&(p=t.data.attrs=C({},p)),p)s=p[a],u[a]!==s&&Ta(o,a,s,t.data.pre);for(a in(Y||Z)&&p.value!==u.value&&Ta(o,"value",p.value),u)i(p[a])&&(zn(a)?o.removeAttributeNS(Hn,Vn(a)):Un(a)||o.removeAttribute(a))}}function Ta(e,t,n,a){a||e.tagName.indexOf("-")>-1?wa(e,t,n):qn(t)?Wn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Un(t)?e.setAttribute(t,function(e,t){return Wn(t)||"false"===t?"false":"contenteditable"===e&&jn(t)?t:"true"}(t,n)):zn(t)?Wn(n)?e.removeAttributeNS(Hn,Vn(t)):e.setAttributeNS(Hn,t,n):wa(e,t,n)}function wa(e,t,n){if(Wn(n))e.removeAttribute(t);else{if(Y&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var ga={create:va,update:va};function _a(e,t){var n=t.elm,a=t.data,s=e.data;if(!(i(a.staticClass)&&i(a.class)&&(i(s)||i(s.staticClass)&&i(s.class)))){var o=function(e){for(var t=e.data,n=e,a=e;r(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=Gn(a.data,t));for(;r(n=n.parent);)n&&n.data&&(t=Gn(t,n.data));return i=t.staticClass,s=t.class,r(i)||r(s)?Kn(i,Xn(s)):"";var i,s}(t),u=n._transitionClasses;r(u)&&(o=Kn(o,Xn(u))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var ka,Ma,Aa,xa,Ra,Ia,Ca={create:_a,update:_a},Pa=/[\w).+\-_$\]]/;function Oa(e){var t,n,a,i,r,s=!1,o=!1,u=!1,p=!1,d=0,l=0,y=0,c=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),s)39===t&&92!==n&&(s=!1);else if(o)34===t&&92!==n&&(o=!1);else if(u)96===t&&92!==n&&(u=!1);else if(p)47===t&&92!==n&&(p=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||d||l||y){switch(t){case 34:o=!0;break;case 39:s=!0;break;case 96:u=!0;break;case 40:y++;break;case 41:y--;break;case 91:l++;break;case 93:l--;break;case 123:d++;break;case 125:d--}if(47===t){for(var m=a-1,f=void 0;m>=0&&" "===(f=e.charAt(m));m--);f&&Pa.test(f)||(p=!0)}}else void 0===i?(c=a+1,i=e.slice(0,a).trim()):h();function h(){(r||(r=[])).push(e.slice(c,a).trim()),c=a+1}if(void 0===i?i=e.slice(0,a).trim():0!==c&&h(),r)for(a=0;a<r.length;a++)i=Sa(i,r[a]);return i}function Sa(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var a=t.slice(0,n),i=t.slice(n+1);return'_f("'+a+'")('+e+(")"!==i?","+i:i)}function Ea(e,t){console.error("[Vue compiler]: "+e)}function Fa(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Na(e,t,n,a,i){(e.props||(e.props=[])).push(za({name:t,value:n,dynamic:i},a)),e.plain=!1}function Da(e,t,n,a,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(za({name:t,value:n,dynamic:i},a)),e.plain=!1}function La(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(za({name:t,value:n},a))}function Ba(e,t,n,a,i,r,s,o){(e.directives||(e.directives=[])).push(za({name:t,rawName:n,value:a,arg:i,isDynamicArg:r,modifiers:s},o)),e.plain=!1}function $a(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function Ua(e,t,n,i,r,s,o,u){var p;(i=i||a).right?u?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete i.right):i.middle&&(u?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),i.capture&&(delete i.capture,t=$a("!",t,u)),i.once&&(delete i.once,t=$a("~",t,u)),i.passive&&(delete i.passive,t=$a("&",t,u)),i.native?(delete i.native,p=e.nativeEvents||(e.nativeEvents={})):p=e.events||(e.events={});var d=za({value:n.trim(),dynamic:u},o);i!==a&&(d.modifiers=i);var l=p[t];Array.isArray(l)?r?l.unshift(d):l.push(d):p[t]=l?r?[d,l]:[l,d]:d,e.plain=!1}function ja(e,t,n){var a=qa(e,":"+t)||qa(e,"v-bind:"+t);if(null!=a)return Oa(a);if(!1!==n){var i=qa(e,t);if(null!=i)return JSON.stringify(i)}}function qa(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var i=e.attrsList,r=0,s=i.length;r<s;r++)if(i[r].name===t){i.splice(r,1);break}return n&&delete e.attrsMap[t],a}function Ha(e,t){for(var n=e.attrsList,a=0,i=n.length;a<i;a++){var r=n[a];if(t.test(r.name))return n.splice(a,1),r}}function za(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function Va(e,t,n){var a=n||{},i=a.number,r="$$v";a.trim&&(r="(typeof $$v === 'string'? $$v.trim(): $$v)"),i&&(r="_n("+r+")");var s=Wa(t,r);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+s+"}"}}function Wa(e,t){var n=function(e){if(e=e.trim(),ka=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<ka-1)return(xa=e.lastIndexOf("."))>-1?{exp:e.slice(0,xa),key:'"'+e.slice(xa+1)+'"'}:{exp:e,key:null};for(Ma=e,xa=Ra=Ia=0;!Ka();)Xa(Aa=Ga())?Ya(Aa):91===Aa&&Ja(Aa);return{exp:e.slice(0,Ra),key:e.slice(Ra+1,Ia)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function Ga(){return Ma.charCodeAt(++xa)}function Ka(){return xa>=ka}function Xa(e){return 34===e||39===e}function Ja(e){var t=1;for(Ra=xa;!Ka();)if(Xa(e=Ga()))Ya(e);else if(91===e&&t++,93===e&&t--,0===t){Ia=xa;break}}function Ya(e){for(var t=e;!Ka()&&(e=Ga())!==t;);}var Qa;function Za(e,t,n){var a=Qa;return function i(){var r=t.apply(null,arguments);null!==r&&ni(e,i,n,a)}}var ei=Je&&!(te&&Number(te[1])<=53);function ti(e,t,n,a){if(ei){var i=mn,r=t;t=r._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return r.apply(this,arguments)}}Qa.addEventListener(e,t,ae?{capture:n,passive:a}:n)}function ni(e,t,n,a){(a||Qa).removeEventListener(e,t._wrapper||t,n)}function ai(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},a=e.data.on||{};Qa=t.elm,function(e){if(r(e.__r)){var t=Y?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),dt(n,a,ti,ni,Za,t.context),Qa=void 0}}var ii,ri={create:ai,update:ai};function si(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,a,s=t.elm,o=e.data.domProps||{},u=t.data.domProps||{};for(n in r(u.__ob__)&&(u=t.data.domProps=C({},u)),o)n in u||(s[n]="");for(n in u){if(a=u[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),a===o[n])continue;1===s.childNodes.length&&s.removeChild(s.childNodes[0])}if("value"===n&&"PROGRESS"!==s.tagName){s._value=a;var p=i(a)?"":String(a);oi(s,p)&&(s.value=p)}else if("innerHTML"===n&&Qn(s.tagName)&&i(s.innerHTML)){(ii=ii||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var d=ii.firstChild;s.firstChild;)s.removeChild(s.firstChild);for(;d.firstChild;)s.appendChild(d.firstChild)}else if(a!==o[n])try{s[n]=a}catch(e){}}}}function oi(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(r(a)){if(a.number)return m(n)!==m(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var ui={create:si,update:si},pi=g((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function di(e){var t=li(e.style);return e.staticStyle?C(e.staticStyle,t):t}function li(e){return Array.isArray(e)?P(e):"string"==typeof e?pi(e):e}var yi,ci=/^--/,mi=/\s*!important$/,fi=function(e,t,n){if(ci.test(t))e.style.setProperty(t,n);else if(mi.test(n))e.style.setProperty(x(t),n.replace(mi,""),"important");else{var a=bi(t);if(Array.isArray(n))for(var i=0,r=n.length;i<r;i++)e.style[a]=n[i];else e.style[a]=n}},hi=["Webkit","Moz","ms"],bi=g((function(e){if(yi=yi||document.createElement("div").style,"filter"!==(e=k(e))&&e in yi)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<hi.length;n++){var a=hi[n]+t;if(a in yi)return a}}));function vi(e,t){var n=t.data,a=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(a.staticStyle)&&i(a.style))){var s,o,u=t.elm,p=a.staticStyle,d=a.normalizedStyle||a.style||{},l=p||d,y=li(t.data.style)||{};t.data.normalizedStyle=r(y.__ob__)?C({},y):y;var c=function(e,t){for(var n,a={},i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=di(i.data))&&C(a,n);(n=di(e.data))&&C(a,n);for(var r=e;r=r.parent;)r.data&&(n=di(r.data))&&C(a,n);return a}(t);for(o in l)i(c[o])&&fi(u,o,"");for(o in c)(s=c[o])!==l[o]&&fi(u,o,null==s?"":s)}}var Ti={create:vi,update:vi},wi=/\s+/;function gi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(wi).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function _i(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(wi).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function ki(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&C(t,Mi(e.name||"v")),C(t,e),t}return"string"==typeof e?Mi(e):void 0}}var Mi=g((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Ai=G&&!Q,xi="transition",Ri="animation",Ii="transition",Ci="transitionend",Pi="animation",Oi="animationend";Ai&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ii="WebkitTransition",Ci="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Pi="WebkitAnimation",Oi="webkitAnimationEnd"));var Si=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ei(e){Si((function(){Si(e)}))}function Fi(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),gi(e,t))}function Ni(e,t){e._transitionClasses&&v(e._transitionClasses,t),_i(e,t)}function Di(e,t,n){var a=Bi(e,t),i=a.type,r=a.timeout,s=a.propCount;if(!i)return n();var o=i===xi?Ci:Oi,u=0,p=function(){e.removeEventListener(o,d),n()},d=function(t){t.target===e&&++u>=s&&p()};setTimeout((function(){u<s&&p()}),r+1),e.addEventListener(o,d)}var Li=/\b(transform|all)(,|$)/;function Bi(e,t){var n,a=window.getComputedStyle(e),i=(a[Ii+"Delay"]||"").split(", "),r=(a[Ii+"Duration"]||"").split(", "),s=$i(i,r),o=(a[Pi+"Delay"]||"").split(", "),u=(a[Pi+"Duration"]||"").split(", "),p=$i(o,u),d=0,l=0;return t===xi?s>0&&(n=xi,d=s,l=r.length):t===Ri?p>0&&(n=Ri,d=p,l=u.length):l=(n=(d=Math.max(s,p))>0?s>p?xi:Ri:null)?n===xi?r.length:u.length:0,{type:n,timeout:d,propCount:l,hasTransform:n===xi&&Li.test(a[Ii+"Property"])}}function $i(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Ui(t)+Ui(e[n])})))}function Ui(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function ji(e,t){var n=e.elm;r(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var a=ki(e.data.transition);if(!i(a)&&!r(n._enterCb)&&1===n.nodeType){for(var s=a.css,o=a.type,p=a.enterClass,d=a.enterToClass,l=a.enterActiveClass,y=a.appearClass,c=a.appearToClass,f=a.appearActiveClass,h=a.beforeEnter,b=a.enter,v=a.afterEnter,T=a.enterCancelled,w=a.beforeAppear,g=a.appear,_=a.afterAppear,k=a.appearCancelled,M=a.duration,A=tn,x=tn.$vnode;x&&x.parent;)A=x.context,x=x.parent;var R=!A._isMounted||!e.isRootInsert;if(!R||g||""===g){var I=R&&y?y:p,C=R&&f?f:l,P=R&&c?c:d,O=R&&w||h,S=R&&"function"==typeof g?g:b,E=R&&_||v,F=R&&k||T,N=m(u(M)?M.enter:M),L=!1!==s&&!Q,B=zi(S),$=n._enterCb=D((function(){L&&(Ni(n,P),Ni(n,C)),$.cancelled?(L&&Ni(n,I),F&&F(n)):E&&E(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),S&&S(n,$)})),O&&O(n),L&&(Fi(n,I),Fi(n,C),Ei((function(){Ni(n,I),$.cancelled||(Fi(n,P),B||(Hi(N)?setTimeout($,N):Di(n,o,$)))}))),e.data.show&&(t&&t(),S&&S(n,$)),L||B||$()}}}function qi(e,t){var n=e.elm;r(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var a=ki(e.data.transition);if(i(a)||1!==n.nodeType)return t();if(!r(n._leaveCb)){var s=a.css,o=a.type,p=a.leaveClass,d=a.leaveToClass,l=a.leaveActiveClass,y=a.beforeLeave,c=a.leave,f=a.afterLeave,h=a.leaveCancelled,b=a.delayLeave,v=a.duration,T=!1!==s&&!Q,w=zi(c),g=m(u(v)?v.leave:v),_=n._leaveCb=D((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),T&&(Ni(n,d),Ni(n,l)),_.cancelled?(T&&Ni(n,p),h&&h(n)):(t(),f&&f(n)),n._leaveCb=null}));b?b(k):k()}function k(){_.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),y&&y(n),T&&(Fi(n,p),Fi(n,l),Ei((function(){Ni(n,p),_.cancelled||(Fi(n,d),w||(Hi(g)?setTimeout(_,g):Di(n,o,_)))}))),c&&c(n,_),T||w||_())}}function Hi(e){return"number"==typeof e&&!isNaN(e)}function zi(e){if(i(e))return!1;var t=e.fns;return r(t)?zi(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Vi(e,t){!0!==t.data.show&&ji(t)}var Wi=function(e){var t,n,a={},u=e.modules,p=e.nodeOps;for(t=0;t<ua.length;++t)for(a[ua[t]]=[],n=0;n<u.length;++n)r(u[n][ua[t]])&&a[ua[t]].push(u[n][ua[t]]);function d(e){var t=p.parentNode(e);r(t)&&p.removeChild(t,e)}function l(e,t,n,i,o,u,d){if(r(e.elm)&&r(u)&&(e=u[d]=we(e)),e.isRootInsert=!o,!function(e,t,n,i){var o=e.data;if(r(o)){var u=r(e.componentInstance)&&o.keepAlive;if(r(o=o.hook)&&r(o=o.init)&&o(e,!1),r(e.componentInstance))return y(e,t),c(n,e.elm,i),s(u)&&function(e,t,n,i){for(var s,o=e;o.componentInstance;)if(r(s=(o=o.componentInstance._vnode).data)&&r(s=s.transition)){for(s=0;s<a.activate.length;++s)a.activate[s](oa,o);t.push(o);break}c(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var l=e.data,f=e.children,h=e.tag;r(h)?(e.elm=e.ns?p.createElementNS(e.ns,h):p.createElement(h,e),v(e),m(e,f,t),r(l)&&b(e,t),c(n,e.elm,i)):s(e.isComment)?(e.elm=p.createComment(e.text),c(n,e.elm,i)):(e.elm=p.createTextNode(e.text),c(n,e.elm,i))}}function y(e,t){r(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(b(e,t),v(e)):(sa(e),t.push(e))}function c(e,t,n){r(e)&&(r(n)?p.parentNode(n)===e&&p.insertBefore(e,t,n):p.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t))for(var a=0;a<t.length;++a)l(t[a],n,e.elm,null,!0,t,a);else o(e.text)&&p.appendChild(e.elm,p.createTextNode(String(e.text)))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function b(e,n){for(var i=0;i<a.create.length;++i)a.create[i](oa,e);r(t=e.data.hook)&&(r(t.create)&&t.create(oa,e),r(t.insert)&&n.push(e))}function v(e){var t;if(r(t=e.fnScopeId))p.setStyleScope(e.elm,t);else for(var n=e;n;)r(t=n.context)&&r(t=t.$options._scopeId)&&p.setStyleScope(e.elm,t),n=n.parent;r(t=tn)&&t!==e.context&&t!==e.fnContext&&r(t=t.$options._scopeId)&&p.setStyleScope(e.elm,t)}function T(e,t,n,a,i,r){for(;a<=i;++a)l(n[a],r,e,t,!1,n,a)}function w(e){var t,n,i=e.data;if(r(i))for(r(t=i.hook)&&r(t=t.destroy)&&t(e),t=0;t<a.destroy.length;++t)a.destroy[t](e);if(r(t=e.children))for(n=0;n<e.children.length;++n)w(e.children[n])}function g(e,t,n){for(;t<=n;++t){var a=e[t];r(a)&&(r(a.tag)?(_(a),w(a)):d(a.elm))}}function _(e,t){if(r(t)||r(e.data)){var n,i=a.remove.length+1;for(r(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&d(e)}return n.listeners=t,n}(e.elm,i),r(n=e.componentInstance)&&r(n=n._vnode)&&r(n.data)&&_(n,t),n=0;n<a.remove.length;++n)a.remove[n](e,t);r(n=e.data.hook)&&r(n=n.remove)?n(e,t):t()}else d(e.elm)}function k(e,t,n,a){for(var i=n;i<a;i++){var s=t[i];if(r(s)&&pa(e,s))return i}}function M(e,t,n,o,u,d){if(e!==t){r(t.elm)&&r(o)&&(t=o[u]=we(t));var y=t.elm=e.elm;if(s(e.isAsyncPlaceholder))r(t.asyncFactory.resolved)?R(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,m=t.data;r(m)&&r(c=m.hook)&&r(c=c.prepatch)&&c(e,t);var f=e.children,b=t.children;if(r(m)&&h(t)){for(c=0;c<a.update.length;++c)a.update[c](e,t);r(c=m.hook)&&r(c=c.update)&&c(e,t)}i(t.text)?r(f)&&r(b)?f!==b&&function(e,t,n,a,s){for(var o,u,d,y=0,c=0,m=t.length-1,f=t[0],h=t[m],b=n.length-1,v=n[0],w=n[b],_=!s;y<=m&&c<=b;)i(f)?f=t[++y]:i(h)?h=t[--m]:pa(f,v)?(M(f,v,a,n,c),f=t[++y],v=n[++c]):pa(h,w)?(M(h,w,a,n,b),h=t[--m],w=n[--b]):pa(f,w)?(M(f,w,a,n,b),_&&p.insertBefore(e,f.elm,p.nextSibling(h.elm)),f=t[++y],w=n[--b]):pa(h,v)?(M(h,v,a,n,c),_&&p.insertBefore(e,h.elm,f.elm),h=t[--m],v=n[++c]):(i(o)&&(o=da(t,y,m)),i(u=r(v.key)?o[v.key]:k(v,t,y,m))?l(v,a,e,f.elm,!1,n,c):pa(d=t[u],v)?(M(d,v,a,n,c),t[u]=void 0,_&&p.insertBefore(e,d.elm,f.elm)):l(v,a,e,f.elm,!1,n,c),v=n[++c]);y>m?T(e,i(n[b+1])?null:n[b+1].elm,n,c,b,a):c>b&&g(t,y,m)}(y,f,b,n,d):r(b)?(r(e.text)&&p.setTextContent(y,""),T(y,null,b,0,b.length-1,n)):r(f)?g(f,0,f.length-1):r(e.text)&&p.setTextContent(y,""):e.text!==t.text&&p.setTextContent(y,t.text),r(m)&&r(c=m.hook)&&r(c=c.postpatch)&&c(e,t)}}}function A(e,t,n){if(s(n)&&r(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var x=f("attrs,class,staticClass,staticStyle,key");function R(e,t,n,a){var i,o=t.tag,u=t.data,p=t.children;if(a=a||u&&u.pre,t.elm=e,s(t.isComment)&&r(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(r(u)&&(r(i=u.hook)&&r(i=i.init)&&i(t,!0),r(i=t.componentInstance)))return y(t,n),!0;if(r(o)){if(r(p))if(e.hasChildNodes())if(r(i=u)&&r(i=i.domProps)&&r(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var d=!0,l=e.firstChild,c=0;c<p.length;c++){if(!l||!R(l,p[c],n,a)){d=!1;break}l=l.nextSibling}if(!d||l)return!1}else m(t,p,n);if(r(u)){var f=!1;for(var h in u)if(!x(h)){f=!0,b(t,n);break}!f&&u.class&&st(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!i(t)){var u,d=!1,y=[];if(i(e))d=!0,l(t,y);else{var c=r(e.nodeType);if(!c&&pa(e,t))M(e,t,y,null,null,o);else{if(c){if(1===e.nodeType&&e.hasAttribute(L)&&(e.removeAttribute(L),n=!0),s(n)&&R(e,t,y))return A(t,y,!0),e;u=e,e=new he(p.tagName(u).toLowerCase(),{},[],void 0,u)}var m=e.elm,f=p.parentNode(m);if(l(t,y,m._leaveCb?null:f,p.nextSibling(m)),r(t.parent))for(var b=t.parent,v=h(t);b;){for(var T=0;T<a.destroy.length;++T)a.destroy[T](b);if(b.elm=t.elm,v){for(var _=0;_<a.create.length;++_)a.create[_](oa,b);var k=b.data.hook.insert;if(k.merged)for(var x=1;x<k.fns.length;x++)k.fns[x]()}else sa(b);b=b.parent}r(f)?g([e],0,0):r(e.tag)&&w(e)}}return A(t,y,d),t.elm}r(e)&&w(e)}}({nodeOps:ia,modules:[ga,Ca,ri,ui,Ti,G?{create:Vi,activate:Vi,remove:function(e,t){!0!==e.data.show?qi(e,t):t()}}:{}].concat(ba)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&er(e,"input")}));var Gi={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?lt(n,"postpatch",(function(){Gi.componentUpdated(e,t,n)})):Ki(e,t,n.context),e._vOptions=[].map.call(e.options,Yi)):("textarea"===n.tag||na(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Qi),e.addEventListener("compositionend",Zi),e.addEventListener("change",Zi),Q&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Ki(e,t,n.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,Yi);i.some((function(e,t){return!F(e,a[t])}))&&(e.multiple?t.value.some((function(e){return Ji(e,i)})):t.value!==t.oldValue&&Ji(t.value,i))&&er(e,"change")}}};function Ki(e,t,n){Xi(e,t),(Y||Z)&&setTimeout((function(){Xi(e,t)}),0)}function Xi(e,t,n){var a=t.value,i=e.multiple;if(!i||Array.isArray(a)){for(var r,s,o=0,u=e.options.length;o<u;o++)if(s=e.options[o],i)r=N(a,Yi(s))>-1,s.selected!==r&&(s.selected=r);else if(F(Yi(s),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));i||(e.selectedIndex=-1)}}function Ji(e,t){return t.every((function(t){return!F(t,e)}))}function Yi(e){return"_value"in e?e._value:e.value}function Qi(e){e.target.composing=!0}function Zi(e){e.target.composing&&(e.target.composing=!1,er(e.target,"input"))}function er(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function tr(e){return!e.componentInstance||e.data&&e.data.transition?e:tr(e.componentInstance._vnode)}var nr={bind:function(e,t,n){var a=t.value,i=(n=tr(n)).data&&n.data.transition,r=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(n.data.show=!0,ji(n,(function(){e.style.display=r}))):e.style.display=a?r:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=tr(n)).data&&n.data.transition?(n.data.show=!0,a?ji(n,(function(){e.style.display=e.__vOriginalDisplay})):qi(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,i){i||(e.style.display=e.__vOriginalDisplay)}},ar={model:Gi,show:nr},ir={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function rr(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?rr(Jt(t.children)):e}function sr(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var i=n._parentListeners;for(var r in i)t[k(r)]=i[r];return t}function or(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ur=function(e){return e.tag||Tt(e)},pr=function(e){return"show"===e.name},dr={name:"transition",props:ir,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ur)).length){var a=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var r=rr(i);if(!r)return i;if(this._leaving)return or(e,i);var s="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?s+"comment":s+r.tag:o(r.key)?0===String(r.key).indexOf(s)?r.key:s+r.key:r.key;var u=(r.data||(r.data={})).transition=sr(this),p=this._vnode,d=rr(p);if(r.data.directives&&r.data.directives.some(pr)&&(r.data.show=!0),d&&d.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(r,d)&&!Tt(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var l=d.data.transition=C({},u);if("out-in"===a)return this._leaving=!0,lt(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),or(e,i);if("in-out"===a){if(Tt(r))return p;var y,c=function(){y()};lt(u,"afterEnter",c),lt(u,"enterCancelled",c),lt(l,"delayLeave",(function(e){y=e}))}}return i}}},lr=C({tag:String,moveClass:String},ir);delete lr.mode;var yr={props:lr,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var i=nn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],r=this.children=[],s=sr(this),o=0;o<i.length;o++){var u=i[o];u.tag&&null!=u.key&&0!==String(u.key).indexOf("__vlist")&&(r.push(u),n[u.key]=u,(u.data||(u.data={})).transition=s)}if(a){for(var p=[],d=[],l=0;l<a.length;l++){var y=a[l];y.data.transition=s,y.data.pos=y.elm.getBoundingClientRect(),n[y.key]?p.push(y):d.push(y)}this.kept=e(t,null,p),this.removed=d}return e(t,null,r)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(cr),e.forEach(mr),e.forEach(fr),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Fi(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Ci,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Ci,e),n._moveCb=null,Ni(n,t))})}})))},methods:{hasMove:function(e,t){if(!Ai)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){_i(n,e)})),gi(n,t),n.style.display="none",this.$el.appendChild(n);var a=Bi(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}};function cr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function mr(e){e.data.newPos=e.elm.getBoundingClientRect()}function fr(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,i=t.top-n.top;if(a||i){e.data.moved=!0;var r=e.elm.style;r.transform=r.WebkitTransform="translate("+a+"px,"+i+"px)",r.transitionDuration="0s"}}var hr={Transition:dr,TransitionGroup:yr};Cn.config.mustUseProp=$n,Cn.config.isReservedTag=Zn,Cn.config.isReservedAttr=Ln,Cn.config.getTagNamespace=ea,Cn.config.isUnknownElement=function(e){if(!G)return!0;if(Zn(e))return!1;if(e=e.toLowerCase(),null!=ta[e])return ta[e];var t=document.createElement(e);return e.indexOf("-")>-1?ta[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:ta[e]=/HTMLUnknownElement/.test(t.toString())},C(Cn.options.directives,ar),C(Cn.options.components,hr),Cn.prototype.__patch__=G?Wi:O,Cn.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=ve),on(e,"beforeMount"),a=function(){e._update(e._render(),n)},new Tn(e,a,O,{before:function(){e._isMounted&&!e._isDestroyed&&on(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,on(e,"mounted")),e}(this,e=e&&G?aa(e):void 0,t)},G&&setTimeout((function(){U.devtools&&se&&se.emit("init",Cn)}),0);var br,vr=/\{\{((?:.|\r?\n)+?)\}\}/g,Tr=/[-.*+?^${}()|[\]\/\\]/g,wr=g((function(e){var t=e[0].replace(Tr,"\\$&"),n=e[1].replace(Tr,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),gr={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=qa(e,"class");n&&(e.staticClass=JSON.stringify(n));var a=ja(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}},_r={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=qa(e,"style");n&&(e.staticStyle=JSON.stringify(pi(n)));var a=ja(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},kr=f("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),Mr=f("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),Ar=f("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),xr=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Rr=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Ir="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+j.source+"]*",Cr="((?:"+Ir+"\\:)?"+Ir+")",Pr=new RegExp("^<"+Cr),Or=/^\s*(\/?)>/,Sr=new RegExp("^<\\/"+Cr+"[^>]*>"),Er=/^<!DOCTYPE [^>]+>/i,Fr=/^<!\--/,Nr=/^<!\[/,Dr=f("script,style,textarea",!0),Lr={},Br={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},$r=/&(?:lt|gt|quot|amp|#39);/g,Ur=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,jr=f("pre,textarea",!0),qr=function(e,t){return e&&jr(e)&&"\n"===t[0]};function Hr(e,t){var n=t?Ur:$r;return e.replace(n,(function(e){return Br[e]}))}var zr,Vr,Wr,Gr,Kr,Xr,Jr,Yr,Qr=/^@|^v-on:/,Zr=/^v-|^@|^:|^#/,es=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,ts=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,ns=/^\(|\)$/g,as=/^\[.*\]$/,is=/:(.*)$/,rs=/^:|^\.|^v-bind:/,ss=/\.[^.\]]+(?=[^\]]*$)/g,os=/^v-slot(:|$)|^#/,us=/[\r\n]/,ps=/[ \f\t\r\n]+/g,ds=g((function(e){return(br=br||document.createElement("div")).innerHTML=e,br.textContent})),ls="_empty_";function ys(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:vs(t),rawAttrsMap:{},parent:n,children:[]}}function cs(e,t){var n;!function(e){var t=ja(e,"key");t&&(e.key=t)}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=ja(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=qa(e,"scope"),e.slotScope=t||qa(e,"slot-scope")):(t=qa(e,"slot-scope"))&&(e.slotScope=t);var n=ja(e,"slot");if(n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Da(e,"slot",n,function(e,t){return e.rawAttrsMap[":slot"]||e.rawAttrsMap["v-bind:slot"]||e.rawAttrsMap.slot}(e))),"template"===e.tag){var a=Ha(e,os);if(a){var i=hs(a),r=i.name,s=i.dynamic;e.slotTarget=r,e.slotTargetDynamic=s,e.slotScope=a.value||ls}}else{var o=Ha(e,os);if(o){var u=e.scopedSlots||(e.scopedSlots={}),p=hs(o),d=p.name,l=p.dynamic,y=u[d]=ys("template",[],e);y.slotTarget=d,y.slotTargetDynamic=l,y.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=y,!0})),y.slotScope=o.value||ls,e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=ja(n,"name")),function(e){var t;(t=ja(e,"is"))&&(e.component=t),null!=qa(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<Wr.length;a++)e=Wr[a](e,t)||e;return function(e){var t,n,a,i,r,s,o,u,p=e.attrsList;for(t=0,n=p.length;t<n;t++)if(a=i=p[t].name,r=p[t].value,Zr.test(a))if(e.hasBindings=!0,(s=bs(a.replace(Zr,"")))&&(a=a.replace(ss,"")),rs.test(a))a=a.replace(rs,""),r=Oa(r),(u=as.test(a))&&(a=a.slice(1,-1)),s&&(s.prop&&!u&&"innerHtml"===(a=k(a))&&(a="innerHTML"),s.camel&&!u&&(a=k(a)),s.sync&&(o=Wa(r,"$event"),u?Ua(e,'"update:"+('+a+")",o,null,!1,0,p[t],!0):(Ua(e,"update:"+k(a),o,null,!1,0,p[t]),x(a)!==k(a)&&Ua(e,"update:"+x(a),o,null,!1,0,p[t])))),s&&s.prop||!e.component&&Jr(e.tag,e.attrsMap.type,a)?Na(e,a,r,p[t],u):Da(e,a,r,p[t],u);else if(Qr.test(a))a=a.replace(Qr,""),(u=as.test(a))&&(a=a.slice(1,-1)),Ua(e,a,r,s,!1,0,p[t],u);else{var d=(a=a.replace(Zr,"")).match(is),l=d&&d[1];u=!1,l&&(a=a.slice(0,-(l.length+1)),as.test(l)&&(l=l.slice(1,-1),u=!0)),Ba(e,a,i,r,l,u,s,p[t])}else Da(e,a,JSON.stringify(r),p[t]),!e.component&&"muted"===a&&Jr(e.tag,e.attrsMap.type,a)&&Na(e,a,"true",p[t])}(e),e}function ms(e){var t;if(t=qa(e,"v-for")){var n=function(e){var t=e.match(es);if(t){var n={};n.for=t[2].trim();var a=t[1].trim().replace(ns,""),i=a.match(ts);return i?(n.alias=a.replace(ts,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=a,n}}(t);n&&C(e,n)}}function fs(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function hs(e){var t=e.name.replace(os,"");return t||"#"!==e.name[0]&&(t="default"),as.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function bs(e){var t=e.match(ss);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function vs(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var Ts=/^xmlns:NS\d+/,ws=/^NS\d+:/;function gs(e){return ys(e.tag,e.attrsList.slice(),e.parent)}var _s,ks,Ms,As=[gr,_r,{preTransformNode:function(e,t){if("input"===e.tag){var n,a=e.attrsMap;if(!a["v-model"])return;if((a[":type"]||a["v-bind:type"])&&(n=ja(e,"type")),a.type||n||!a["v-bind"]||(n="("+a["v-bind"]+").type"),n){var i=qa(e,"v-if",!0),r=i?"&&("+i+")":"",s=null!=qa(e,"v-else",!0),o=qa(e,"v-else-if",!0),u=gs(e);ms(u),La(u,"type","checkbox"),cs(u,t),u.processed=!0,u.if="("+n+")==='checkbox'"+r,fs(u,{exp:u.if,block:u});var p=gs(e);qa(p,"v-for",!0),La(p,"type","radio"),cs(p,t),fs(u,{exp:"("+n+")==='radio'"+r,block:p});var d=gs(e);return qa(d,"v-for",!0),La(d,":type",n),cs(d,t),fs(u,{exp:i,block:d}),s?u.else=!0:o&&(u.elseif=o),u}}}}],xs={model:function(e,t,n){var a=t.value,i=t.modifiers,r=e.tag,s=e.attrsMap.type;if(e.component)return Va(e,a,i),!1;if("select"===r)!function(e,t,n){var a='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";Ua(e,"change",a=a+" "+Wa(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),null,!0)}(e,a,i);else if("input"===r&&"checkbox"===s)!function(e,t,n){var a=n&&n.number,i=ja(e,"value")||"null",r=ja(e,"true-value")||"true",s=ja(e,"false-value")||"false";Na(e,"checked","Array.isArray("+t+")?_i("+t+","+i+")>-1"+("true"===r?":("+t+")":":_q("+t+","+r+")")),Ua(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+r+"):("+s+");if(Array.isArray($$a)){var $$v="+(a?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Wa(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Wa(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Wa(t,"$$c")+"}",null,!0)}(e,a,i);else if("input"===r&&"radio"===s)!function(e,t,n){var a=n&&n.number,i=ja(e,"value")||"null";Na(e,"checked","_q("+t+","+(i=a?"_n("+i+")":i)+")"),Ua(e,"change",Wa(t,i),null,!0)}(e,a,i);else if("input"===r||"textarea"===r)!function(e,t,n){var a=e.attrsMap.type,i=n||{},r=i.lazy,s=i.number,o=i.trim,u=!r&&"range"!==a,p=r?"change":"range"===a?"__r":"input",d="$event.target.value";o&&(d="$event.target.value.trim()"),s&&(d="_n("+d+")");var l=Wa(t,d);u&&(l="if($event.target.composing)return;"+l),Na(e,"value","("+t+")"),Ua(e,p,l,null,!0),(o||s)&&Ua(e,"blur","$forceUpdate()")}(e,a,i);else if(!U.isReservedTag(r))return Va(e,a,i),!1;return!0},text:function(e,t){t.value&&Na(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Na(e,"innerHTML","_s("+t.value+")",t)}},Rs={expectHTML:!0,modules:As,directives:xs,isPreTag:function(e){return"pre"===e},isUnaryTag:kr,mustUseProp:$n,canBeLeftOpenTag:Mr,isReservedTag:Zn,getTagNamespace:ea,staticKeys:(Ms=As,Ms.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(","))},Is=g((function(e){return f("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function Cs(e,t){e&&(_s=Is(t.staticKeys||""),ks=t.isReservedTag||S,Ps(e),Os(e,!1))}function Ps(e){if(e.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||h(e.tag)||!ks(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(_s))))}(e),1===e.type){if(!ks(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var a=e.children[t];Ps(a),a.static||(e.static=!1)}if(e.ifConditions)for(var i=1,r=e.ifConditions.length;i<r;i++){var s=e.ifConditions[i].block;Ps(s),s.static||(e.static=!1)}}}function Os(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,a=e.children.length;n<a;n++)Os(e.children[n],t||!!e.for);if(e.ifConditions)for(var i=1,r=e.ifConditions.length;i<r;i++)Os(e.ifConditions[i].block,t)}}var Ss=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Es=/\([^)]*?\);*$/,Fs=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Ns={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Ds={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Ls=function(e){return"if("+e+")return null;"},Bs={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Ls("$event.target !== $event.currentTarget"),ctrl:Ls("!$event.ctrlKey"),shift:Ls("!$event.shiftKey"),alt:Ls("!$event.altKey"),meta:Ls("!$event.metaKey"),left:Ls("'button' in $event && $event.button !== 0"),middle:Ls("'button' in $event && $event.button !== 1"),right:Ls("'button' in $event && $event.button !== 2")};function $s(e,t){var n=t?"nativeOn:":"on:",a="",i="";for(var r in e){var s=Us(e[r]);e[r]&&e[r].dynamic?i+=r+","+s+",":a+='"'+r+'":'+s+","}return a="{"+a.slice(0,-1)+"}",i?n+"_d("+a+",["+i.slice(0,-1)+"])":n+a}function Us(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return Us(e)})).join(",")+"]";var t=Fs.test(e.value),n=Ss.test(e.value),a=Fs.test(e.value.replace(Es,""));if(e.modifiers){var i="",r="",s=[];for(var o in e.modifiers)if(Bs[o])r+=Bs[o],Ns[o]&&s.push(o);else if("exact"===o){var u=e.modifiers;r+=Ls(["ctrl","shift","alt","meta"].filter((function(e){return!u[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else s.push(o);return s.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(js).join("&&")+")return null;"}(s)),r&&(i+=r),"function($event){"+i+(t?"return "+e.value+".apply(null, arguments)":n?"return ("+e.value+").apply(null, arguments)":a?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(a?"return "+e.value:e.value)+"}"}function js(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=Ns[e],a=Ds[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(a)+")"}var qs={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:O},Hs=function(e){this.options=e,this.warn=e.warn||Ea,this.transforms=Fa(e.modules,"transformCode"),this.dataGenFns=Fa(e.modules,"genData"),this.directives=C(C({},qs),e.directives);var t=e.isReservedTag||S;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function zs(e,t){var n=new Hs(t);return{render:"with(this){return "+(e?"script"===e.tag?"null":Vs(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function Vs(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Ws(e,t);if(e.once&&!e.onceProcessed)return Gs(e,t);if(e.for&&!e.forProcessed)return Js(e,t);if(e.if&&!e.ifProcessed)return Ks(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=eo(e,t),i="_t("+n+(a?",function(){return "+a+"}":""),r=e.attrs||e.dynamicAttrs?ao((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:k(e.name),value:e.value,dynamic:e.dynamic}}))):null,s=e.attrsMap["v-bind"];return!r&&!s||a||(i+=",null"),r&&(i+=","+r),s&&(i+=(r?"":",null")+","+s),i+")"}(e,t);var n;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:eo(t,n,!0);return"_c("+e+","+Ys(t,n)+(a?","+a:"")+")"}(e.component,e,t);else{var a;(!e.plain||e.pre&&t.maybeComponent(e))&&(a=Ys(e,t));var i=e.inlineTemplate?null:eo(e,t,!0);n="_c('"+e.tag+"'"+(a?","+a:"")+(i?","+i:"")+")"}for(var r=0;r<t.transforms.length;r++)n=t.transforms[r](e,n);return n}return eo(e,t)||"void 0"}function Ws(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+Vs(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function Gs(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Ks(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o("+Vs(e,t)+","+t.onceId+++","+n+")":Vs(e,t)}return Ws(e,t)}function Ks(e,t,n,a){return e.ifProcessed=!0,Xs(e.ifConditions.slice(),t,n,a)}function Xs(e,t,n,a){if(!e.length)return a||"_e()";var i=e.shift();return i.exp?"("+i.exp+")?"+r(i.block)+":"+Xs(e,t,n,a):""+r(i.block);function r(e){return n?n(e,t):e.once?Gs(e,t):Vs(e,t)}}function Js(e,t,n,a){var i=e.for,r=e.alias,s=e.iterator1?","+e.iterator1:"",o=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(a||"_l")+"(("+i+"),function("+r+s+o+"){return "+(n||Vs)(e,t)+"})"}function Ys(e,t){var n="{",a=function(e,t){var n=e.directives;if(n){var a,i,r,s,o="directives:[",u=!1;for(a=0,i=n.length;a<i;a++){r=n[a],s=!0;var p=t.directives[r.name];p&&(s=!!p(e,r,t.warn)),s&&(u=!0,o+='{name:"'+r.name+'",rawName:"'+r.rawName+'"'+(r.value?",value:("+r.value+"),expression:"+JSON.stringify(r.value):"")+(r.arg?",arg:"+(r.isDynamicArg?r.arg:'"'+r.arg+'"'):"")+(r.modifiers?",modifiers:"+JSON.stringify(r.modifiers):"")+"},")}return u?o.slice(0,-1)+"]":void 0}}(e,t);a&&(n+=a+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:"+ao(e.attrs)+","),e.props&&(n+="domProps:"+ao(e.props)+","),e.events&&(n+=$s(e.events,!1)+","),e.nativeEvents&&(n+=$s(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Qs(n)})),i=!!e.if;if(!a)for(var r=e.parent;r;){if(r.slotScope&&r.slotScope!==ls||r.for){a=!0;break}r.if&&(i=!0),r=r.parent}var s=Object.keys(t).map((function(e){return Zs(t[e],n)})).join(",");return"scopedSlots:_u(["+s+"]"+(a?",null,true":"")+(!a&&i?",null,false,"+function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(s):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var r=function(e,t){var n=e.children[0];if(n&&1===n.type){var a=zs(n,t.options);return"inlineTemplate:{render:function(){"+a.render+"},staticRenderFns:["+a.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);r&&(n+=r+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+ao(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Qs(e){return 1===e.type&&("slot"===e.tag||e.children.some(Qs))}function Zs(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return Ks(e,t,Zs,"null");if(e.for&&!e.forProcessed)return Js(e,t,Zs);var a=e.slotScope===ls?"":String(e.slotScope),i="function("+a+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(eo(e,t)||"undefined")+":undefined":eo(e,t)||"undefined":Vs(e,t))+"}",r=a?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+i+r+"}"}function eo(e,t,n,a,i){var r=e.children;if(r.length){var s=r[0];if(1===r.length&&s.for&&"template"!==s.tag&&"slot"!==s.tag){var o=n?t.maybeComponent(s)?",1":",0":"";return""+(a||Vs)(s,t)+o}var u=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var i=e[a];if(1===i.type){if(to(i)||i.ifConditions&&i.ifConditions.some((function(e){return to(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(r,t.maybeComponent):0,p=i||no;return"["+r.map((function(e){return p(e,t)})).join(",")+"]"+(u?","+u:"")}}function to(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function no(e,t){return 1===e.type?Vs(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):"_v("+(2===(n=e).type?n.expression:io(JSON.stringify(n.text)))+")";var n}function ao(e){for(var t="",n="",a=0;a<e.length;a++){var i=e[a],r=io(i.value);i.dynamic?n+=i.name+","+r+",":t+='"'+i.name+'":'+r+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function io(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function ro(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),O}}function so(e){var t=Object.create(null);return function(n,a,i){(a=C({},a)).warn,delete a.warn;var r=a.delimiters?String(a.delimiters)+n:n;if(t[r])return t[r];var s=e(n,a),o={},u=[];return o.render=ro(s.render,u),o.staticRenderFns=s.staticRenderFns.map((function(e){return ro(e,u)})),t[r]=o}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");var oo,uo,po=(oo=function(e,t){var n=function(e,t){zr=t.warn||Ea,Xr=t.isPreTag||S,Jr=t.mustUseProp||S,Yr=t.getTagNamespace||S,t.isReservedTag,Wr=Fa(t.modules,"transformNode"),Gr=Fa(t.modules,"preTransformNode"),Kr=Fa(t.modules,"postTransformNode"),Vr=t.delimiters;var n,a,i=[],r=!1!==t.preserveWhitespace,s=t.whitespace,o=!1,u=!1;function p(e){if(d(e),o||e.processed||(e=cs(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&fs(n,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)s=e,p=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children),p&&p.if&&fs(p,{exp:s.elseif,block:s});else{if(e.slotScope){var r=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[r]=e}a.children.push(e),e.parent=a}var s,p;e.children=e.children.filter((function(e){return!e.slotScope})),d(e),e.pre&&(o=!1),Xr(e.tag)&&(u=!1);for(var l=0;l<Kr.length;l++)Kr[l](e,t)}function d(e){if(!u)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,i=[],r=t.expectHTML,s=t.isUnaryTag||S,o=t.canBeLeftOpenTag||S,u=0;e;){if(n=e,a&&Dr(a)){var p=0,d=a.toLowerCase(),l=Lr[d]||(Lr[d]=new RegExp("([\\s\\S]*?)(</"+d+"[^>]*>)","i")),y=e.replace(l,(function(e,n,a){return p=a.length,Dr(d)||"noscript"===d||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),qr(d,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));u+=e.length-y.length,e=y,x(d,u-p,u)}else{var c=e.indexOf("<");if(0===c){if(Fr.test(e)){var m=e.indexOf("--\x3e");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m),u,u+m+3),k(m+3);continue}}if(Nr.test(e)){var f=e.indexOf("]>");if(f>=0){k(f+2);continue}}var h=e.match(Er);if(h){k(h[0].length);continue}var b=e.match(Sr);if(b){var v=u;k(b[0].length),x(b[1],v,u);continue}var T=M();if(T){A(T),qr(T.tagName,e)&&k(1);continue}}var w=void 0,g=void 0,_=void 0;if(c>=0){for(g=e.slice(c);!(Sr.test(g)||Pr.test(g)||Fr.test(g)||Nr.test(g)||(_=g.indexOf("<",1))<0);)c+=_,g=e.slice(c);w=e.substring(0,c)}c<0&&(w=e),w&&k(w.length),t.chars&&w&&t.chars(w,u-w.length,u)}if(e===n){t.chars&&t.chars(e);break}}function k(t){u+=t,e=e.substring(t)}function M(){var t=e.match(Pr);if(t){var n,a,i={tagName:t[1],attrs:[],start:u};for(k(t[0].length);!(n=e.match(Or))&&(a=e.match(Rr)||e.match(xr));)a.start=u,k(a[0].length),a.end=u,i.attrs.push(a);if(n)return i.unarySlash=n[1],k(n[0].length),i.end=u,i}}function A(e){var n=e.tagName,u=e.unarySlash;r&&("p"===a&&Ar(n)&&x(a),o(n)&&a===n&&x(n));for(var p=s(n)||!!u,d=e.attrs.length,l=new Array(d),y=0;y<d;y++){var c=e.attrs[y],m=c[3]||c[4]||c[5]||"",f="a"===n&&"href"===c[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;l[y]={name:c[1],value:Hr(m,f)}}p||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:l,start:e.start,end:e.end}),a=n),t.start&&t.start(n,l,p,e.start,e.end)}function x(e,n,r){var s,o;if(null==n&&(n=u),null==r&&(r=u),e)for(o=e.toLowerCase(),s=i.length-1;s>=0&&i[s].lowerCasedTag!==o;s--);else s=0;if(s>=0){for(var p=i.length-1;p>=s;p--)t.end&&t.end(i[p].tag,n,r);i.length=s,a=s&&i[s-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,r):"p"===o&&(t.start&&t.start(e,[],!1,n,r),t.end&&t.end(e,n,r))}x()}(e,{warn:zr,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,r,s,d,l){var y=a&&a.ns||Yr(e);Y&&"svg"===y&&(r=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];Ts.test(a.name)||(a.name=a.name.replace(ws,""),t.push(a))}return t}(r));var c,m=ys(e,r,a);y&&(m.ns=y),"style"!==(c=m).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||re()||(m.forbidden=!0);for(var f=0;f<Gr.length;f++)m=Gr[f](m,t)||m;o||(function(e){null!=qa(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(o=!0)),Xr(m.tag)&&(u=!0),o?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),i=0;i<n;i++)a[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(a[i].start=t[i].start,a[i].end=t[i].end);else e.pre||(e.plain=!0)}(m):m.processed||(ms(m),function(e){var t=qa(e,"v-if");if(t)e.if=t,fs(e,{exp:t,block:e});else{null!=qa(e,"v-else")&&(e.else=!0);var n=qa(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=qa(e,"v-once")&&(e.once=!0)}(m)),n||(n=m),s?p(m):(a=m,i.push(m))},end:function(e,t,n){var r=i[i.length-1];i.length-=1,a=i[i.length-1],p(r)},chars:function(e,t,n){if(a&&(!Y||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var i,p,d,l=a.children;(e=u||e.trim()?"script"===(i=a).tag||"style"===i.tag?e:ds(e):l.length?s?"condense"===s&&us.test(e)?"":" ":r?" ":"":"")&&(u||"condense"!==s||(e=e.replace(ps," ")),!o&&" "!==e&&(p=function(e,t){var n=t?wr(t):vr;if(n.test(e)){for(var a,i,r,s=[],o=[],u=n.lastIndex=0;a=n.exec(e);){(i=a.index)>u&&(o.push(r=e.slice(u,i)),s.push(JSON.stringify(r)));var p=Oa(a[1].trim());s.push("_s("+p+")"),o.push({"@binding":p}),u=i+a[0].length}return u<e.length&&(o.push(r=e.slice(u)),s.push(JSON.stringify(r))),{expression:s.join("+"),tokens:o}}}(e,Vr))?d={type:2,expression:p.expression,tokens:p.tokens,text:e}:" "===e&&l.length&&" "===l[l.length-1].text||(d={type:3,text:e}),d&&l.push(d))}},comment:function(e,t,n){if(a){var i={type:3,text:e,isComment:!0};a.children.push(i)}}}),n}(e.trim(),t);!1!==t.optimize&&Cs(n,t);var a=zs(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),i=[],r=[];if(n)for(var s in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=C(Object.create(e.directives||null),n.directives)),n)"modules"!==s&&"directives"!==s&&(a[s]=n[s]);a.warn=function(e,t,n){(n?r:i).push(e)};var o=oo(t.trim(),a);return o.errors=i,o.tips=r,o}return{compile:t,compileToFunctions:so(t)}}),lo=po(Rs),yo=(lo.compile,lo.compileToFunctions);function co(e){return(uo=uo||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',uo.innerHTML.indexOf("&#10;")>0}var mo=!!G&&co(!1),fo=!!G&&co(!0),ho=g((function(e){var t=aa(e);return t&&t.innerHTML})),bo=Cn.prototype.$mount;Cn.prototype.$mount=function(e,t){if((e=e&&aa(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=ho(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){var i=yo(a,{outputSourceRange:!1,shouldDecodeNewlines:mo,shouldDecodeNewlinesForHref:fo,delimiters:n.delimiters,comments:n.comments},this),r=i.render,s=i.staticRenderFns;n.render=r,n.staticRenderFns=s}}return bo.call(this,e,t)},Cn.compile=yo;const vo=Cn;function To(e,t){for(var n in t)e[n]=t[n];return e}var wo=/[!'()*]/g,go=function(e){return"%"+e.charCodeAt(0).toString(16)},_o=/%2C/g,ko=function(e){return encodeURIComponent(e).replace(wo,go).replace(_o,",")};function Mo(e){try{return decodeURIComponent(e)}catch(e){}return e}var Ao=function(e){return null==e||"object"==typeof e?e:String(e)};function xo(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=Mo(n.shift()),i=n.length>0?Mo(n.join("=")):null;void 0===t[a]?t[a]=i:Array.isArray(t[a])?t[a].push(i):t[a]=[t[a],i]})),t):t}function Ro(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return ko(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(ko(t)):a.push(ko(t)+"="+ko(e)))})),a.join("&")}return ko(t)+"="+ko(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Io=/\/?$/;function Co(e,t,n,a){var i=a&&a.options.stringifyQuery,r=t.query||{};try{r=Po(r)}catch(e){}var s={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:r,params:t.params||{},fullPath:Eo(t,i),matched:e?So(e):[]};return n&&(s.redirectedFrom=Eo(n,i)),Object.freeze(s)}function Po(e){if(Array.isArray(e))return e.map(Po);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Po(e[n]);return t}return e}var Oo=Co(null,{path:"/"});function So(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Eo(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||Ro)(a)+i}function Fo(e,t,n){return t===Oo?e===t:!!t&&(e.path&&t.path?e.path.replace(Io,"")===t.path.replace(Io,"")&&(n||e.hash===t.hash&&No(e.query,t.query)):!(!e.name||!t.name)&&e.name===t.name&&(n||e.hash===t.hash&&No(e.query,t.query)&&No(e.params,t.params)))}function No(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,i){var r=e[n];if(a[i]!==n)return!1;var s=t[n];return null==r||null==s?r===s:"object"==typeof r&&"object"==typeof s?No(r,s):String(r)===String(s)}))}function Do(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var i=n.instances[a],r=n.enteredCbs[a];if(i&&r){delete n.enteredCbs[a];for(var s=0;s<r.length;s++)i._isBeingDestroyed||r[s](i)}}}}var Lo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,r=t.data;r.routerView=!0;for(var s=i.$createElement,o=n.name,u=i.$route,p=i._routerViewCache||(i._routerViewCache={}),d=0,l=!1;i&&i._routerRoot!==i;){var y=i.$vnode?i.$vnode.data:{};y.routerView&&d++,y.keepAlive&&i._directInactive&&i._inactive&&(l=!0),i=i.$parent}if(r.routerViewDepth=d,l){var c=p[o],m=c&&c.component;return m?(c.configProps&&Bo(m,r,c.route,c.configProps),s(m,r,a)):s()}var f=u.matched[d],h=f&&f.components[o];if(!f||!h)return p[o]=null,s();p[o]={component:h},r.registerRouteInstance=function(e,t){var n=f.instances[o];(t&&n!==e||!t&&n===e)&&(f.instances[o]=t)},(r.hook||(r.hook={})).prepatch=function(e,t){f.instances[o]=t.componentInstance},r.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[o]&&(f.instances[o]=e.componentInstance),Do(u)};var b=f.props&&f.props[o];return b&&(To(p[o],{route:u,configProps:b}),Bo(h,r,u,b)),s(h,r,a)}};function Bo(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0}}(n,a);if(i){i=t.props=To({},i);var r=t.attrs=t.attrs||{};for(var s in i)e.props&&s in e.props||(r[s]=i[s],delete i[s])}}function $o(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var r=e.replace(/^\//,"").split("/"),s=0;s<r.length;s++){var o=r[s];".."===o?i.pop():"."!==o&&i.push(o)}return""!==i[0]&&i.unshift(""),i.join("/")}function Uo(e){return e.replace(/\/+/g,"/")}var jo=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},qo=function e(t,n,a){return jo(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Zo(e,t)}(t,n):jo(t)?function(t,n,a){for(var i=[],r=0;r<t.length;r++)i.push(e(t[r],n,a).source);return Zo(new RegExp("(?:"+i.join("|")+")",eu(a)),n)}(t,n,a):function(e,t,n){return tu(Go(e,n),t,n)}(t,n,a)},Ho=Go,zo=Jo,Vo=tu,Wo=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Go(e,t){for(var n,a=[],i=0,r=0,s="",o=t&&t.delimiter||"/";null!=(n=Wo.exec(e));){var u=n[0],p=n[1],d=n.index;if(s+=e.slice(r,d),r=d+u.length,p)s+=p[1];else{var l=e[r],y=n[2],c=n[3],m=n[4],f=n[5],h=n[6],b=n[7];s&&(a.push(s),s="");var v=null!=y&&null!=l&&l!==y,T="+"===h||"*"===h,w="?"===h||"*"===h,g=n[2]||o,_=m||f;a.push({name:c||i++,prefix:y||"",delimiter:g,optional:w,repeat:T,partial:v,asterisk:!!b,pattern:_?Qo(_):b?".*":"[^"+Yo(g)+"]+?"})}}return r<e.length&&(s+=e.substr(r)),s&&a.push(s),a}function Ko(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Xo(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Jo(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",eu(t)));return function(t,a){for(var i="",r=t||{},s=(a||{}).pretty?Ko:encodeURIComponent,o=0;o<e.length;o++){var u=e[o];if("string"!=typeof u){var p,d=r[u.name];if(null==d){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(jo(d)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var l=0;l<d.length;l++){if(p=s(d[l]),!n[o].test(p))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(p)+"`");i+=(0===l?u.prefix:u.delimiter)+p}}else{if(p=u.asterisk?Xo(d):s(d),!n[o].test(p))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+p+'"');i+=u.prefix+p}}else i+=u}return i}}function Yo(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Qo(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function Zo(e,t){return e.keys=t,e}function eu(e){return e&&e.sensitive?"":"i"}function tu(e,t,n){jo(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,r="",s=0;s<e.length;s++){var o=e[s];if("string"==typeof o)r+=Yo(o);else{var u=Yo(o.prefix),p="(?:"+o.pattern+")";t.push(o),o.repeat&&(p+="(?:"+u+p+")*"),r+=p=o.optional?o.partial?u+"("+p+")?":"(?:"+u+"("+p+"))?":u+"("+p+")"}}var d=Yo(n.delimiter||"/"),l=r.slice(-d.length)===d;return a||(r=(l?r.slice(0,-d.length):r)+"(?:"+d+"(?=$))?"),r+=i?"$":a&&l?"":"(?="+d+"|$)",Zo(new RegExp("^"+r,eu(n)),t)}qo.parse=Ho,qo.compile=function(e,t){return Jo(Go(e,t),t)},qo.tokensToFunction=zo,qo.tokensToRegExp=Vo;var nu=Object.create(null);function au(e,t,n){t=t||{};try{var a=nu[e]||(nu[e]=qo.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function iu(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var r=(i=To({},e)).params;return r&&"object"==typeof r&&(i.params=To({},r)),i}if(!i.path&&i.params&&t){(i=To({},i))._normalized=!0;var s=To(To({},t.params),i.params);if(t.name)i.name=t.name,i.params=s;else if(t.matched.length){var o=t.matched[t.matched.length-1].path;i.path=au(o,s,t.path)}return i}var u=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(i.path||""),p=t&&t.path||"/",d=u.path?$o(u.path,p,n||i.append):p,l=function(e,t,n){void 0===t&&(t={});var a,i=n||xo;try{a=i(e||"")}catch(e){a={}}for(var r in t){var s=t[r];a[r]=Array.isArray(s)?s.map(Ao):Ao(s)}return a}(u.query,i.query,a&&a.options.parseQuery),y=i.hash||u.hash;return y&&"#"!==y.charAt(0)&&(y="#"+y),{_normalized:!0,path:d,query:l,hash:y}}var ru,su=function(){},ou={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),r=i.location,s=i.route,o=i.href,u={},p=n.options.linkActiveClass,d=n.options.linkExactActiveClass,l=null==p?"router-link-active":p,y=null==d?"router-link-exact-active":d,c=null==this.activeClass?l:this.activeClass,m=null==this.exactActiveClass?y:this.exactActiveClass,f=s.redirectedFrom?Co(null,iu(s.redirectedFrom),null,n):s;u[m]=Fo(a,f,this.exactPath),u[c]=this.exact||this.exactPath?u[m]:function(e,t){return 0===e.path.replace(Io,"/").indexOf(t.path.replace(Io,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,f);var h=u[m]?this.ariaCurrentValue:null,b=function(e){uu(e)&&(t.replace?n.replace(r,su):n.push(r,su))},v={click:uu};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=b})):v[this.event]=b;var T={class:u},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:s,navigate:b,isActive:u[c],isExactActive:u[m]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?e():e("span",{},w)}if("a"===this.tag)T.on=v,T.attrs={href:o,"aria-current":h};else{var g=pu(this.$slots.default);if(g){g.isStatic=!1;var _=g.data=To({},g.data);for(var k in _.on=_.on||{},_.on){var M=_.on[k];k in v&&(_.on[k]=Array.isArray(M)?M:[M])}for(var A in v)A in _.on?_.on[A].push(v[A]):_.on[A]=b;var x=g.data.attrs=To({},g.data.attrs);x.href=o,x["aria-current"]=h}else T.on=v}return e(this.tag,T,this.$slots.default)}};function uu(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function pu(e){if(e)for(var t,n=0;n<e.length;n++){if("a"===(t=e[n]).tag)return t;if(t.children&&(t=pu(t.children)))return t}}var du="undefined"!=typeof window;function lu(e,t,n,a,i){var r=t||[],s=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){yu(r,s,o,e,i)}));for(var u=0,p=r.length;u<p;u++)"*"===r[u]&&(r.push(r.splice(u,1)[0]),p--,u--);return{pathList:r,pathMap:s,nameMap:o}}function yu(e,t,n,a,i,r){var s=a.path,o=a.name,u=a.pathToRegexpOptions||{},p=function(e,t,n){return n||(e=e.replace(/\/$/,"")),"/"===e[0]||null==t?e:Uo(t.path+"/"+e)}(s,i,u.strict);"boolean"==typeof a.caseSensitive&&(u.sensitive=a.caseSensitive);var d={path:p,regex:cu(p,u),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:o,parent:i,matchAs:r,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};if(a.children&&a.children.forEach((function(a){var i=r?Uo(r+"/"+a.path):void 0;yu(e,t,n,a,d,i)})),t[d.path]||(e.push(d.path),t[d.path]=d),void 0!==a.alias)for(var l=Array.isArray(a.alias)?a.alias:[a.alias],y=0;y<l.length;++y){var c={path:l[y],children:a.children};yu(e,t,n,c,i,d.path||"/")}o&&(n[o]||(n[o]=d))}function cu(e,t){return qo(e,[],t)}function mu(e,t){var n=lu(e),a=n.pathList,i=n.pathMap,r=n.nameMap;function s(e,n,s){var u=iu(e,n,!1,t),p=u.name;if(p){var d=r[p];if(!d)return o(null,u);var l=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof u.params&&(u.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in u.params)&&l.indexOf(y)>-1&&(u.params[y]=n.params[y]);return u.path=au(d.path,u.params),o(d,u,s)}if(u.path){u.params={};for(var c=0;c<a.length;c++){var m=a[c],f=i[m];if(fu(f.regex,u.path,u.params))return o(f,u,s)}}return o(null,u)}function o(e,n,a){return e&&e.redirect?function(e,n){var a=e.redirect,i="function"==typeof a?a(Co(e,n,null,t)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return o(null,n);var u=i,p=u.name,d=u.path,l=n.query,y=n.hash,c=n.params;if(l=u.hasOwnProperty("query")?u.query:l,y=u.hasOwnProperty("hash")?u.hash:y,c=u.hasOwnProperty("params")?u.params:c,p)return r[p],s({_normalized:!0,name:p,query:l,hash:y,params:c},void 0,n);if(d){var m=function(e,t){return $o(e,t.parent?t.parent.path:"/",!0)}(d,e);return s({_normalized:!0,path:au(m,c),query:l,hash:y},void 0,n)}return o(null,n)}(e,a||n):e&&e.matchAs?function(e,t,n){var a=s({_normalized:!0,path:au(n,t.params)});if(a){var i=a.matched,r=i[i.length-1];return t.params=a.params,o(r,t)}return o(null,t)}(0,n,e.matchAs):Co(e,n,a,t)}return{match:s,addRoute:function(e,t){var n="object"!=typeof e?r[e]:void 0;lu([t||e],a,i,r,n),n&&n.alias.length&&lu(n.alias.map((function(e){return{path:e,children:[t]}})),a,i,r,n)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){lu(e,a,i,r)}}}function fu(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var i=1,r=a.length;i<r;++i){var s=e.keys[i-1];s&&(n[s.name||"pathMatch"]="string"==typeof a[i]?Mo(a[i]):a[i])}return!0}var hu=du&&window.performance&&window.performance.now?window.performance:Date;function bu(){return hu.now().toFixed(3)}var vu=bu();function Tu(){return vu}function wu(e){return vu=e}var gu=Object.create(null);function _u(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=To({},window.history.state);return n.key=Tu(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Au),function(){window.removeEventListener("popstate",Au)}}function ku(e,t,n,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var r=function(){var e=Tu();if(e)return gu[e]}(),s=i.call(e,t,n,a?r:null);s&&("function"==typeof s.then?s.then((function(e){Pu(e,r)})).catch((function(e){})):Pu(s,r))}))}}function Mu(){var e=Tu();e&&(gu[e]={x:window.pageXOffset,y:window.pageYOffset})}function Au(e){Mu(),e.state&&e.state.key&&wu(e.state.key)}function xu(e){return Iu(e.x)||Iu(e.y)}function Ru(e){return{x:Iu(e.x)?e.x:window.pageXOffset,y:Iu(e.y)?e.y:window.pageYOffset}}function Iu(e){return"number"==typeof e}var Cu=/^#\d/;function Pu(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=Cu.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var r=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(i,r={x:Iu((n=r).x)?n.x:0,y:Iu(n.y)?n.y:0})}else xu(e)&&(t=Ru(e))}else a&&xu(e)&&(t=Ru(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Ou,Su=du&&(-1===(Ou=window.navigator.userAgent).indexOf("Android 2.")&&-1===Ou.indexOf("Android 4.0")||-1===Ou.indexOf("Mobile Safari")||-1!==Ou.indexOf("Chrome")||-1!==Ou.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState;function Eu(e,t){Mu();var n=window.history;try{if(t){var a=To({},n.state);a.key=Tu(),n.replaceState(a,"",e)}else n.pushState({key:wu(bu())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Fu(e){Eu(e,!0)}function Nu(e,t,n){var a=function(i){i>=e.length?n():e[i]?t(e[i],(function(){a(i+1)})):a(i+1)};a(0)}var Du={redirected:2,aborted:4,cancelled:8,duplicated:16};function Lu(e,t){return Bu(e,t,Du.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Bu(e,t,n,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=t,i.type=n,i}var $u=["params","query","hash"];function Uu(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ju(e,t){return Uu(e)&&e._isRouter&&(null==t||e.type===t)}function qu(e,t){return Hu(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Hu(e){return Array.prototype.concat.apply([],e)}var zu="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Vu(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var Wu=function(e,t){this.router=e,this.base=function(e){if(!e)if(du){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";return"/"!==e.charAt(0)&&(e="/"+e),e.replace(/\/$/,"")}(t),this.current=Oo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Gu(e,t,n,a){var i=qu(e,(function(e,a,i,r){var s=function(e,t){return"function"!=typeof e&&(e=ru.extend(e)),e.options[t]}(e,t);if(s)return Array.isArray(s)?s.map((function(e){return n(e,a,i,r)})):n(s,a,i,r)}));return Hu(a?i.reverse():i)}function Ku(e,t){if(t)return function(){return e.apply(t,arguments)}}Wu.prototype.listen=function(e){this.cb=e},Wu.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Wu.prototype.onError=function(e){this.errorCbs.push(e)},Wu.prototype.transitionTo=function(e,t,n){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var r=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),t&&t(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,r)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!i.ready&&(ju(e,Du.redirected)&&r===Oo||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(e)}))))}))},Wu.prototype.confirmTransition=function(e,t,n){var a=this,i=this.current;this.pending=e;var r,s,o=function(e){!ju(e)&&Uu(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,p=i.matched.length-1;if(Fo(e,i)&&u===p&&e.matched[u]===i.matched[p])return this.ensureURL(),e.hash&&ku(this.router,i,e,!1),o(((s=Bu(r=i,e,Du.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",s));var d,l=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),y=l.updated,c=l.deactivated,m=l.activated,f=[].concat(function(e){return Gu(e,"beforeRouteLeave",Ku,!0)}(c),this.router.beforeHooks,function(e){return Gu(e,"beforeRouteUpdate",Ku)}(y),m.map((function(e){return e.beforeEnter})),(d=m,function(e,t,n){var a=!1,i=0,r=null;qu(d,(function(e,t,s,o){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var u,p=Vu((function(t){var a;((a=t).__esModule||zu&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:ru.extend(t),s.components[o]=t,--i<=0&&n()})),d=Vu((function(e){var t="Failed to resolve async component "+o+": "+e;r||(r=Uu(e)?e:new Error(t),n(r))}));try{u=e(p,d)}catch(e){d(e)}if(u)if("function"==typeof u.then)u.then(p,d);else{var l=u.component;l&&"function"==typeof l.then&&l.then(p,d)}}})),a||n()})),h=function(t,n){if(a.pending!==e)return o(Lu(i,e));try{t(e,i,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return Bu(e,t,Du.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,e))):Uu(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(function(e,t){return Bu(e,t,Du.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return $u.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}(i,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};Nu(f,h,(function(){var n=function(e){return Gu(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,i,r){return e(a,i,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),r(e)}))}}(e,n,a)}))}(m);Nu(n.concat(a.router.resolveHooks),h,(function(){if(a.pending!==e)return o(Lu(i,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){Do(e)}))}))}))},Wu.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Wu.prototype.setupListeners=function(){},Wu.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Oo,this.pending=null};var Xu=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Ju(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=Su&&n;a&&this.listeners.push(_u());var i=function(){var n=e.current,i=Ju(e.base);e.current===Oo&&i===e._startLocation||e.transitionTo(i,(function(e){a&&ku(t,e,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Eu(Uo(a.base+e.fullPath)),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Fu(Uo(a.base+e.fullPath)),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Ju(this.base)!==this.current.fullPath){var t=Uo(this.base+this.current.fullPath);e?Eu(t):Fu(t)}},t.prototype.getCurrentLocation=function(){return Ju(this.base)},t}(Wu);function Ju(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(Uo(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Yu=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Ju(e);if(!/^\/#/.test(t))return window.location.replace(Uo(e+"/#"+t)),!0}(this.base)||Qu()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Su&&t;n&&this.listeners.push(_u());var a=function(){var t=e.current;Qu()&&e.transitionTo(Zu(),(function(a){n&&ku(e.router,a,t,!0),Su||np(a.fullPath)}))},i=Su?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){tp(e.fullPath),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){np(e.fullPath),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Zu()!==t&&(e?tp(t):np(t))},t.prototype.getCurrentLocation=function(){return Zu()},t}(Wu);function Qu(){var e=Zu();return"/"===e.charAt(0)||(np("/"+e),!1)}function Zu(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function ep(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function tp(e){Su?Eu(ep(e)):window.location.hash=e}function np(e){Su?Fu(ep(e)):window.location.replace(ep(e))}var ap=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){ju(e,Du.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Wu),ip=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=mu(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Su&&!1!==e.fallback,this.fallback&&(t="hash"),du||(t="abstract"),this.mode=t,t){case"history":this.history=new Xu(this,e.base);break;case"hash":this.history=new Yu(this,e.base,this.fallback);break;case"abstract":this.history=new ap(this,e.base)}},rp={currentRoute:{configurable:!0}};function sp(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}ip.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},rp.currentRoute.get=function(){return this.history&&this.history.current},ip.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Xu||n instanceof Yu){var a=function(e){n.setupListeners(),function(e){var a=n.current,i=t.options.scrollBehavior;Su&&i&&"fullPath"in e&&ku(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},ip.prototype.beforeEach=function(e){return sp(this.beforeHooks,e)},ip.prototype.beforeResolve=function(e){return sp(this.resolveHooks,e)},ip.prototype.afterEach=function(e){return sp(this.afterHooks,e)},ip.prototype.onReady=function(e,t){this.history.onReady(e,t)},ip.prototype.onError=function(e){this.history.onError(e)},ip.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},ip.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},ip.prototype.go=function(e){this.history.go(e)},ip.prototype.back=function(){this.go(-1)},ip.prototype.forward=function(){this.go(1)},ip.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},ip.prototype.resolve=function(e,t,n){var a=iu(e,t=t||this.history.current,n,this),i=this.match(a,t),r=i.redirectedFrom||i.fullPath,s=function(e,t,n){var a="hash"===n?"#"+t:t;return e?Uo(e+"/"+a):a}(this.history.base,r,this.mode);return{location:a,route:i,href:s,normalizedTo:a,resolved:i}},ip.prototype.getRoutes=function(){return this.matcher.getRoutes()},ip.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==Oo&&this.history.transitionTo(this.history.getCurrentLocation())},ip.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Oo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(ip.prototype,rp),ip.install=function e(t){if(!e.installed||ru!==t){e.installed=!0,ru=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Lo),t.component("RouterLink",ou);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},ip.version="3.5.3",ip.isNavigationFailure=ju,ip.NavigationFailureType=Du,ip.START_LOCATION=Oo,du&&window.Vue&&window.Vue.use(ip);const op=ip;var up=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};function pp(e,t,n,a,i,r,s,o){var u,p="function"==typeof e?e.options:e;if(t&&(p.render=t,p.staticRenderFns=n,p._compiled=!0),a&&(p.functional=!0),r&&(p._scopeId="data-v-"+r),s?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},p._ssrRegister=u):i&&(u=o?function(){i.call(this,(p.functional?this.parent:this).$root.$options.shadowRoot)}:i),u)if(p.functional){p._injectStyles=u;var d=p.render;p.render=function(e,t){return u.call(t),d(e,t)}}else{var l=p.beforeCreate;p.beforeCreate=l?[].concat(l,u):[u]}return{exports:e,options:p}}up._withStripped=!0,n(387);var dp=pp({},up,[],!1,null,null,null);dp.options.__file="node_modules/hardhat-docgen/src/App.vue";const lp=dp.exports;var yp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};yp._withStripped=!0;var cp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};cp._withStripped=!0;const mp=JSON.parse('{"u2":"hardhat-docgen","cj":"https://github.com/ItsNickBarry/hardhat-docgen"}');var fp=pp({data:function(){return{repository:mp.cj,name:mp.u2}},methods:{openLink(e){window.open(e,"_blank")}}},cp,[],!1,null,null,null);fp.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";const hp=fp.exports;var bp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[n("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[e._v("\n    <- Go back\n  ")])],1)};bp._withStripped=!0;var vp=pp({},bp,[],!1,null,null,null);vp.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";const Tp=vp.exports;var wp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};wp._withStripped=!0;var gp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,a){return n("li",{key:a},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+a))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};gp._withStripped=!0;var _p=pp({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},gp,[],!1,null,null,null);_p.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";const kp={components:{MemberSection:_p.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map((e=>({...e,desc:this.params[e.name]})))},inputSignature:function(){return`(${this.inputs.map((e=>e.type)).join(",")})`},outputs:function(){return(this.json.outputs||[]).map(((e,t)=>({...e,desc:this.returns[e.name||`_${t}`]})))},outputSignature:function(){return`(${this.outputs.map((e=>e.type)).join(",")})`}}};var Mp=pp(kp,wp,[],!1,null,null,null);Mp.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";const Ap=Mp.exports;var xp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};xp._withStripped=!0;var Rp=pp({components:{Member:Ap},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},xp,[],!1,null,null,null);Rp.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var Ip=pp({components:{Member:Ap,MemberSet:Rp.exports,HeaderBar:Tp,FooterBar:hp},props:{json:{type:Object,default:()=>new Object}}},yp,[],!1,null,null,null);Ip.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";const Cp=Ip.exports;var Pp=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[n("Branch",{attrs:{json:e.trees,name:"Sources:"}}),e._v(" "),n("FooterBar",{staticClass:"mt-20"})],1)};Pp._withStripped=!0;var Op=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,a){return n("div",{key:a},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};Op._withStripped=!0;var Sp=pp({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},Op,[],!1,null,null,null);Sp.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var Ep=pp({components:{Branch:Sp.exports,FooterBar:hp},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.replace("/","//").split(/\/(?=[^\/])/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},Pp,[],!1,null,null,null);Ep.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";const Fp=Ep.exports;vo.use(op);const Np={"contracts/EmergencyPool.sol:EmergencyPool":{source:"contracts/EmergencyPool.sol",name:"EmergencyPool",title:"Emergency Pool",notice:"Emergency pool in degis will keep a reserve vault for emergency usage.         The asset comes from part of the product's income (currently 10%).         Users can also stake funds into this contract manually.         The owner has the right to withdraw funds from emergency pool and it would be passed to community governance.",events:{"Deposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Withdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"deposit(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount that the user want to stake",_tokenAddress:"Address of the ERC20 token"},notice:"Manually stake into the pool"},"emergencyWithdraw(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"The ownership need to be transferred to another contract in the future",params:{_amount:"The amount that the user want to unstake",_tokenAddress:"Address of the ERC20 token"},notice:"Withdraw the asset when emergency (only by the owner)"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/chainlinkMock/PriceFeedMock.sol:PriceFeedMock":{source:"contracts/chainlinkMock/PriceFeedMock.sol",name:"PriceFeedMock",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"LatestPriceGet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"roundID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"LatestPriceGet",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PriceFeedChanged(string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"tokenName",type:"string"},{indexed:!1,internalType:"address",name:"feedAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"decimals",type:"uint256"}],name:"PriceFeedChanged",type:"event"}},methods:{"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_tokenName:"Address of the token"},returns:{_0:"price The latest price"},notice:"Get latest price of a token"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"priceFeedInfo(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"priceFeedInfo",outputs:[{internalType:"address",name:"priceFeedAddress",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"result()":{inputs:[],name:"result",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"roundId()":{inputs:[],name:"roundId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setPriceFeed(string,address,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"address",name:"_feedAddress",type:"address"},{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_decimals:"Decimals of this price feed service",_feedAddress:"Price feed oracle address",_tokenName:"Address of the token"},notice:"Set a price feed oracle address for a token"},"setResult(uint256)":{inputs:[{internalType:"uint256",name:"_result",type:"uint256"}],name:"setResult",outputs:[],stateMutability:"nonpayable",type:"function",details:"For test, you can set the result you want"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/chainlinkMock/VRFMock.sol:VRFMock":{source:"contracts/chainlinkMock/VRFMock.sol",name:"VRFMock",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DegisLottery()":{inputs:[],name:"DegisLottery",outputs:[{internalType:"contract IDegisLottery",name:"",type:"address"}],stateMutability:"view",type:"function"},"getRandomNumber()":{inputs:[],name:"getRandomNumber",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Request randomness from Chainlink VRF"},"latestLotteryId()":{inputs:[],name:"latestLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"randomResult()":{inputs:[],name:"randomResult",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setLotteryAddress(address)":{inputs:[{internalType:"address",name:"_degisLottery",type:"address"}],name:"setLotteryAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisLottery:"address of the PancakeSwap lottery"},notice:"Set the address for the DegisLottery"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/farming/FarmingPool.sol:FarmingPool":{source:"contracts/farming/FarmingPool.sol",name:"FarmingPool",title:"Farming Pool",details:"The pool id starts from 1 not 0",notice:"This contract is for LPToken mining on Degis",constructor:{inputs:[{internalType:"address",name:"_degis",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DegisRewardChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"degisPerBlock",type:"uint256"}],name:"DegisRewardChanged",type:"event"},"FarmingPoolStopped(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"FarmingPoolStopped",type:"event"},"Harvest(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"rewardReceiver",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pendingReward",type:"uint256"}],name:"Harvest",type:"event"},"HarvestAndCompound(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pendingReward",type:"uint256"}],name:"HarvestAndCompound",type:"event"},"NewPoolAdded(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"lpToken",type:"address"},{indexed:!1,internalType:"uint256",name:"degisPerBlock",type:"uint256"}],name:"NewPoolAdded",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PoolUpdated(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"}],name:"PoolUpdated",type:"event"},"RestartFarmingPool(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"RestartFarmingPool",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Stake",type:"event"},"StartBlockChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"}],name:"StartBlockChanged",type:"event"},"Withdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"_nextPoolId()":{inputs:[],name:"_nextPoolId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"add(address,uint256,bool)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisPerBlock:"Reward distribution per block for this new pool",_lpToken:"LP token address",_withUpdate:"Whether update all pools' status"},notice:"Add a new lp to the pool. Can only be called by the owner."},"degis()":{inputs:[],name:"degis",outputs:[{internalType:"contract IDegisToken",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPoolList()":{inputs:[],name:"getPoolList",outputs:[{components:[{internalType:"address",name:"lpToken",type:"address"},{internalType:"uint256",name:"degisPerBlock",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"accDegisPerShare",type:"uint256"}],internalType:"struct FarmingPool.PoolInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",returns:{_0:"pooList Total pool list"},notice:"Get the total pool list"},"getUserBalance(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_poolId:"Id of the pool",_user:"User address"},returns:{_0:"balance User's balance (lpToken)"},notice:"Get a user's balance"},"harvest(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Id of the farming pool",_to:"Receiver of degis rewards."},notice:"Harvest the degis reward and can be sent to another address"},"isFarming(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"isFarming",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"massUpdatePools()":{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Update all farming pools (except for those stopped ones)"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"pendingDegis(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingDegis",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_poolId:"PoolId of this farming pool",_user:"User address"},returns:{_0:"pendingDegisAmount Amount of pending degis"},notice:"Check the amount of pending degis reward"},"poolList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolList",outputs:[{internalType:"address",name:"lpToken",type:"address"},{internalType:"uint256",name:"degisPerBlock",type:"uint256"},{internalType:"uint256",name:"lastRewardBlock",type:"uint256"},{internalType:"uint256",name:"accDegisPerShare",type:"uint256"}],stateMutability:"view",type:"function"},"poolMapping(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolMapping",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setDegisReward(uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"setDegisReward",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisPerBlock:"New reward amount per block",_poolId:"Id of the farming pool",_withUpdate:"Whether update all the pool"},notice:"Update the degisPerBlock for a specific pool (set to 0 to stop farming)"},"setStartBlock(uint256)":{inputs:[{internalType:"uint256",name:"_startBlock",type:"uint256"}],name:"setStartBlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{_startBlock:"New start block number"},notice:"Set the start block number"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Staking amount",_poolId:"Id of the farming pool"},notice:"Stake LP token into the farming pool"},"startBlock()":{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Id of the farming pool"},notice:"Update the pool's reward status"},"userInfo(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"rewardDebt",type:"uint256"},{internalType:"uint256",name:"stakingBalance",type:"uint256"}],stateMutability:"view",type:"function"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of lp tokens to withdraw",_poolId:"Id of the farming pool"},notice:"Withdraw lptoken from the pool"}}},"contracts/farming/PurchaseIncentiveVault.sol:PurchaseIncentiveVault":{source:"contracts/farming/PurchaseIncentiveVault.sol",name:"PurchaseIncentiveVault",title:"Purchase Incentive Vault",notice:"This is the purchase incentive vault for staking buyer tokens.         Users first stake their buyer tokens and wait for distribution.         About every 24 hours, the reward will be calculated to users' account.         After disrtribution, users' reward balance will update but they still need to manually claim the reward.",constructor:{inputs:[{internalType:"address",name:"_buyerToken",type:"address"},{internalType:"address",name:"_degisToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DegisPerRoundChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldPerRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newPerRound",type:"uint256"}],name:"DegisPerRoundChanged",type:"event"},"DistributionIntervalChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newInterval",type:"uint256"}],name:"DistributionIntervalChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Redeem(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"currentRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Redeem",type:"event"},"RewardClaimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"userReward",type:"uint256"}],name:"RewardClaimed",type:"event"},"RoundSettled(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"RoundSettled",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"currentRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"actualAmount",type:"uint256"}],name:"Stake",type:"event"}},methods:{"MAX_ROUND()":{inputs:[],name:"MAX_ROUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimOwnReward()":{inputs:[],name:"claimOwnReward",outputs:[],stateMutability:"nonpayable",type:"function",notice:"User can claim his own reward"},"currentRound()":{inputs:[],name:"currentRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerRound()":{inputs:[],name:"degisPerRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distributionInterval()":{inputs:[],name:"distributionInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getTotalUsersInRound(uint256)":{inputs:[{internalType:"uint256",name:"_round",type:"uint256"}],name:"getTotalUsersInRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_round:"Round number to check"},returns:{_0:"totalUsers Total amount of users in _round"},notice:"Get the amount of users in _round, used for distribution"},"getUserShares(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_user:"Address of the user"},notice:"Get your shares in the current round"},"lastDistributionBlock()":{inputs:[],name:"lastDistributionBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"pendingReward()":{inputs:[],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"userPendingReward User's pending reward"},notice:"Get a user's pending reward"},"redeem(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"redeem",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount to redeem"},notice:"Redeem buyer token from the vault"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"roundInfo(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"roundInfo",outputs:[{internalType:"uint256",name:"shares",type:"uint256"},{internalType:"bool",name:"hasDistributed",type:"bool"},{internalType:"uint256",name:"degisPerShare",type:"uint256"}],stateMutability:"view",type:"function"},"setDegisPerRound(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerRound",type:"uint256"}],name:"setDegisPerRound",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisPerRound:"Degis distribution per round to be set"},notice:"Set degis distribution per round"},"setDistributionInterval(uint256)":{inputs:[{internalType:"uint256",name:"_newInterval",type:"uint256"}],name:"setDistributionInterval",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newInterval:"The new interval"},notice:"Set a new distribution interval"},"setMaxRound(uint256)":{inputs:[{internalType:"uint256",name:"_maxRound",type:"uint256"}],name:"setMaxRound",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set the max rounds to claim rewards"},"settleCurrentRound()":{inputs:[],name:"settleCurrentRound",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by any address, must pass the distribution interval",notice:"Setttle the current round"},"stake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of buyer tokens to stake"},notice:"Stake buyer tokens into this contract"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"userInfo(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"lastRewardRoundIndex",type:"uint256"}],stateMutability:"view",type:"function"},"userLastRewardRound(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userLastRewardRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"userRewards(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"userSharesInRound(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"userSharesInRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/farming/interfaces/IFarmingPool.sol:IFarmingPool":{source:"contracts/farming/interfaces/IFarmingPool.sol",name:"IFarmingPool",methods:{"add(address,uint256,bool)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},"harvest(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function"},"massUpdatePools()":{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function"},"pendingDegis(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingDegis",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"setDegisReward(uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"setDegisReward",outputs:[],stateMutability:"nonpayable",type:"function"},"setStartBlock(uint256)":{inputs:[{internalType:"uint256",name:"_startBlock",type:"uint256"}],name:"setStartBlock",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/libraries/SafeCast.sol:SafeCast":{source:"contracts/libraries/SafeCast.sol",name:"SafeCast",details:"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting."},"contracts/libraries/SafePRBMath.sol:SafePRBMath":{source:"contracts/libraries/SafePRBMath.sol",name:"SafePRBMath",title:"PRBMathUD60x18",author:"Paul Razvan Berg",notice:"Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18 trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60 digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the maximum values permitted by the Solidity type uint256."},"contracts/libraries/SafePRBMathTester.sol:SafePRBMathTester":{source:"contracts/libraries/SafePRBMathTester.sol",name:"SafePRBMathTester",methods:{"avg(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"avg",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"ceil(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"ceil",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"div(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"div",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"e()":{inputs:[],name:"e",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"exp(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"exp",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"exp2(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"exp2",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"floor(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"floor",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"frac(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"frac",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"fromUint(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"fromUint",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"gm(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"gm",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"inv(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"inv",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"ln(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"ln",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"log10(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"log10",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"log2(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"log2",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"mul(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"mul",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"pi()":{inputs:[],name:"pi",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"pow(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"pow",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"powu(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"powu",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"scale()":{inputs:[],name:"scale",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"sqrt(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"sqrt",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"toUint(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"toUint",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/libraries/StringsUtils.sol:StringsUtils":{source:"contracts/libraries/StringsUtils.sol",name:"StringsUtils",details:"String operations."},"contracts/libraries/StringsUtilsTester.sol:StringsUtilsTester":{source:"contracts/libraries/StringsUtilsTester.sol",name:"StringsUtilsTester",methods:{"addressToString(address)":{inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"addressToString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"byToString(bytes32)":{inputs:[{internalType:"bytes32",name:"_bytes",type:"bytes32"}],name:"byToString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"uintToHexString(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"uintToHexString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"uintToHexString(uint256,uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"length",type:"uint256"}],name:"uintToHexString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",details:"Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"uintToString(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"uintToString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",details:"Converts a `uint256` to its ASCII `string` decimal representation."}}},"contracts/lucky-box/DegisLottery.sol:DegisLottery":{source:"contracts/lucky-box/DegisLottery.sol",name:"DegisLottery",constructor:{inputs:[{internalType:"address",name:"_DEGTokenAddress",type:"address"},{internalType:"address",name:"_USDTokenAddress",type:"address"},{internalType:"address",name:"_randomGeneratorAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"AdminTokenRecovery(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"AdminTokenRecovery",type:"event"},"LotteryClose(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"}],name:"LotteryClose",type:"event"},"LotteryFundInjection(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"injectedAmount",type:"uint256"}],name:"LotteryFundInjection",type:"event"},"LotteryNumberDrawn(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"finalNumber",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pendingRewards",type:"uint256"}],name:"LotteryNumberDrawn",type:"event"},"LotteryOpen(uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalRewards",type:"uint256"}],name:"LotteryOpen",type:"event"},"OperatorAddressChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"operator",type:"address"}],name:"OperatorAddressChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RandomNumberGeneratorChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"randomGenerator",type:"address"}],name:"RandomNumberGeneratorChanged",type:"event"},"ReceiveRewards(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"}],name:"ReceiveRewards",type:"event"},"TicketsPurchase(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"buyer",type:"address"},{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TicketsPurchase",type:"event"},"TicketsRedeem(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"redeemer",type:"address"},{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"TicketsRedeem",type:"event"}},methods:{"DEGToken()":{inputs:[],name:"DEGToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"RewardsToNextLottery()":{inputs:[],name:"RewardsToNextLottery",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"TICKET_PRICE()":{inputs:[],name:"TICKET_PRICE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"USDToken()":{inputs:[],name:"USDToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"allPendingRewards()":{inputs:[],name:"allPendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"buyTickets(uint256[],uint256[])":{inputs:[{internalType:"uint256[]",name:"_ticketNumbers",type:"uint256[]"},{internalType:"uint256[]",name:"_ticketAmounts",type:"uint256[]"}],name:"buyTickets",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can not be called by a smart contract",params:{_ticketAmounts:"array of ticket amount",_ticketNumbers:"array of ticket numbers between 0 and 9999"},notice:"Buy tickets for the current lottery round"},"closeLottery()":{inputs:[],name:"closeLottery",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by any address and need to meet the endtime condition",notice:"Close a lottery"},"currentLotteryId()":{inputs:[],name:"currentLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"drawLottery()":{inputs:[],name:"drawLottery",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by any address",notice:"Draw the final number, calculate reward in DEG for each group,         and make this lottery claimable (need to wait for the random generator)"},"getCurrentRoundWeight()":{inputs:[],name:"getCurrentRoundWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getLotteriesStageInfo(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"getLotteriesStageInfo",outputs:[{internalType:"uint256[]",name:"stageProportion",type:"uint256[]"},{internalType:"uint256[]",name:"stageReward",type:"uint256[]"},{internalType:"uint256[]",name:"stageAmount",type:"uint256[]"},{internalType:"uint256[]",name:"stageWeight",type:"uint256[]"}],stateMutability:"view",type:"function",notice:"Get lottery stage info"},"getPoolTicketsInfo(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_startIndex",type:"uint256"},{internalType:"uint256",name:"_stopIndex",type:"uint256"},{internalType:"uint256",name:"_position",type:"uint256"}],name:"getPoolTicketsInfo",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function",details:"May be a huge number, avoid reading this frequently",params:{_position:"Which level to check (0, 1, 2, 3), use 0 to check the 4-digit number",_startIndex:"Start number",_stopIndex:"Stop number"},notice:"Get pool tickets info"},"getUserTicketsInfo(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"_startIndex",type:"uint256"},{internalType:"uint256",name:"_stopIndex",type:"uint256"},{internalType:"uint256",name:"position",type:"uint256"}],name:"getUserTicketsInfo",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function",notice:"Get user tickets info"},"injectFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"injectFunds",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by owner(incentive) or injector address(insurancePool income) First transfer USD and then call this function to record",params:{_amount:"amount to inject "},notice:"Inject funds"},"lotteries(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"lotteries",outputs:[{internalType:"enum DegisLottery.Status",name:"status",type:"uint8"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"totalRewards",type:"uint256"},{internalType:"uint256",name:"pendingRewards",type:"uint256"},{internalType:"uint256",name:"finalNumber",type:"uint256"}],stateMutability:"view",type:"function"},"operatorAddress()":{inputs:[],name:"operatorAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"randomGenerator()":{inputs:[],name:"randomGenerator",outputs:[{internalType:"contract IRandomNumberGenerator",name:"",type:"address"}],stateMutability:"view",type:"function"},"receiveReward(uint256,address)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"},{internalType:"address",name:"user",type:"address"}],name:"receiveReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_lotteryId:"lottery id",user:"user address"},notice:"Receive award from a lottery"},"receiveRewards(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"receiveRewards",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by users only, not contract!",params:{_lotteryId:"lottery id"},notice:"Receive all awards from lottery before lottery id"},"recoverWrongTokens(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_tokenAmount",type:"uint256"}],name:"recoverWrongTokens",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenAddress:"the address of the token to withdraw",_tokenAmount:"token amount to withdraw"},notice:"Recover wrong tokens sent to the contract, only by the owner All tokens except DEG and USD are wrong tokens"},"redeemTickets(uint256[])":{inputs:[{internalType:"uint256[]",name:"_ticketNumbers",type:"uint256[]"}],name:"redeemTickets",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by users",params:{_ticketNumbers:"Array of ticket numbers"},notice:"Redeem tickets for all lottery"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setEndTime(uint256)":{inputs:[{internalType:"uint256",name:"_endTime",type:"uint256"}],name:"setEndTime",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Change the end time of current round (only if it was set a wrong number)"},"setOperatorAddress(address)":{inputs:[{internalType:"address",name:"_operatorAddress",type:"address"}],name:"setOperatorAddress",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner",params:{_operatorAddress:"address of the operator"},notice:"Set operator, treasury, and injector addresses"},"setRandomNumberGenerator(address)":{inputs:[{internalType:"address",name:"_randomNumberGenerator",type:"address"}],name:"setRandomNumberGenerator",outputs:[],stateMutability:"nonpayable",type:"function"},"startLottery(uint256,uint256[4])":{inputs:[{internalType:"uint256",name:"_endTime",type:"uint256"},{internalType:"uint256[4]",name:"_stageProportion",type:"uint256[4]"}],name:"startLottery",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable only by operator",params:{_endTime:"endTime of the lottery (timestamp in s)",_stageProportion:"breakdown of rewards per bracket (must sum to 10,000)(100 <=> 1)"},notice:"Start the lottery"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"userCheckPoint(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userCheckPoint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"usersRewards(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"usersRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"usersTotalRewards(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"usersTotalRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"viewUserAllTicketsInfo(address,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"maxAmount",type:"uint256"}],name:"viewUserAllTicketsInfo",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"viewUserRewardsInfo(address,uint256,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"_startRound",type:"uint256"},{internalType:"uint256",name:"_endRound",type:"uint256"}],name:"viewUserRewardsInfo",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"}}},"contracts/lucky-box/RandomNumberGenerator.sol:RandomNumberGenerator":{source:"contracts/lucky-box/RandomNumberGenerator.sol",name:"RandomNumberGenerator",constructor:{inputs:[{internalType:"address",name:"_vrfCoordinator",type:"address"},{internalType:"address",name:"_linkToken",type:"address"},{internalType:"bytes32",name:"_keyHash",type:"bytes32"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DegisLottery()":{inputs:[],name:"DegisLottery",outputs:[{internalType:"contract IDegisLottery",name:"",type:"address"}],stateMutability:"view",type:"function"},"fee()":{inputs:[],name:"fee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRandomNumber()":{inputs:[],name:"getRandomNumber",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Request randomness from Chainlink VRF"},"keyHash()":{inputs:[],name:"keyHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"latestLotteryId()":{inputs:[],name:"latestLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"latestRequestId()":{inputs:[],name:"latestRequestId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"randomResult()":{inputs:[],name:"randomResult",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rawFulfillRandomness(bytes32,uint256)":{inputs:[{internalType:"bytes32",name:"requestId",type:"bytes32"},{internalType:"uint256",name:"randomness",type:"uint256"}],name:"rawFulfillRandomness",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setFee(uint256)":{inputs:[{internalType:"uint256",name:"_fee",type:"uint256"}],name:"setFee",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fee:"new fee (in LINK)"},notice:"Change the fee"},"setKeyHash(bytes32)":{inputs:[{internalType:"bytes32",name:"_keyHash",type:"bytes32"}],name:"setKeyHash",outputs:[],stateMutability:"nonpayable",type:"function",params:{_keyHash:"new keyHash"},notice:"Change the keyHash"},"setLotteryAddress(address)":{inputs:[{internalType:"address",name:"_degisLottery",type:"address"}],name:"setLotteryAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisLottery:"address of the PancakeSwap lottery"},notice:"Set the address for the DegisLottery"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"withdrawTokens(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_tokenAmount",type:"uint256"}],name:"withdrawTokens",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by owner.",params:{_tokenAddress:"the address of the token to withdraw",_tokenAmount:"the number of token amount to withdraw"},notice:"It allows the admin to withdraw tokens sent to the contract"}}},"contracts/lucky-box/interfaces/IDegisLottery.sol:IDegisLottery":{source:"contracts/lucky-box/interfaces/IDegisLottery.sol",name:"IDegisLottery",methods:{"currentLotteryId()":{inputs:[],name:"currentLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"View current lottery id"},"injectFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"injectFunds",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by operator",params:{_amount:"amount to inject in USD"},notice:"Inject funds"}}},"contracts/lucky-box/interfaces/IRandomNumberGenerator.sol:IRandomNumberGenerator":{source:"contracts/lucky-box/interfaces/IRandomNumberGenerator.sol",name:"IRandomNumberGenerator",methods:{"getRandomNumber()":{inputs:[],name:"getRandomNumber",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Views random result"},"latestLotteryId()":{inputs:[],name:"latestLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"randomResult()":{inputs:[],name:"randomResult",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"}}},"contracts/miserable-flight/FDPolicyToken.sol:FDPolicyToken":{source:"contracts/miserable-flight/FDPolicyToken.sol",name:"FDPolicyToken",title:"Policy Token for flight delay",notice:"ERC721 policy token         Can get a long string form of the tokenURI         When the ownership is transferred, it will update the status in policyFlow",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyFlowUpdated(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newPolicyFlow",type:"address"}],name:"PolicyFlowUpdated",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"_nextId()":{inputs:[],name:"_nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"mintPolicyToken(address)":{inputs:[{internalType:"address",name:"_to",type:"address"}],name:"mintPolicyToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_to:"The receiver address"},notice:"Mint a new policy token to an address"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"policyFlow()":{inputs:[],name:"policyFlow",outputs:[{internalType:"contract IPolicyFlow",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",params:{_tokenId:"Token Id of the policy token"},returns:{_0:"The tokenURI in string form"},notice:"Get the tokenURI of a policy"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"transferOwner(address,address,uint256)":{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"transferOwner",outputs:[],stateMutability:"nonpayable",type:"function",details:"Need approval and is prepared for secondary market",params:{_from:"The original owner of the policy",_to:"The new owner of the policy",_tokenId:"Token id of the policy"},notice:"Transfer the owner of a policy token and update the information in policyFlow"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"updatePolicyFlow(address)":{inputs:[{internalType:"address",name:"_policyFlow",type:"address"}],name:"updatePolicyFlow",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyFlow:"New policyFlow contract address"},notice:"Update the policyFlow address if it has been updated"}}},"contracts/miserable-flight/FlightOracle.sol:FlightOracle":{source:"contracts/miserable-flight/FlightOracle.sol",name:"FlightOracle",title:"Flight Oracle",details:"Remember to set the url, oracleAddress and jobId         If there are multiple oracle providers in the future, this contract may need to be updated.",notice:"This is the flight oracle contract.         Called by policyFlow contract and send the request to chainlink node.         After receiving the result, call the policyFlow contract to do the settlement.",constructor:{inputs:[{internalType:"address",name:"_policyFlow",type:"address"},{internalType:"address",name:"_link",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"ChainlinkCancelled(bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"}],name:"ChainlinkCancelled",type:"event"},"ChainlinkFulfilled(bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"}],name:"ChainlinkFulfilled",type:"event"},"ChainlinkRequested(bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"}],name:"ChainlinkRequested",type:"event"},"JobIdChanged(bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"newJobId",type:"bytes32"}],name:"JobIdChanged",type:"event"},"OracleAddressChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOracle",type:"address"}],name:"OracleAddressChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyFlowChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newPolicyFlow",type:"address"}],name:"PolicyFlowChanged",type:"event"}},methods:{"fulfill(bytes32,uint256)":{inputs:[{internalType:"bytes32",name:"_requestId",type:"bytes32"},{internalType:"uint256",name:"_data",type:"uint256"}],name:"fulfill",outputs:[],stateMutability:"nonpayable",type:"function",details:"The recordChainlinkFulfillment protects this function from being called      by anyone other than the oracle address that the request was sent to",params:{_data:"The answer provided by the oracle",_requestId:"The ID that was generated for the request"},notice:"The fulfill method from requests created by this contract"},"getChainlinkTokenAddress()":{inputs:[],name:"getChainlinkTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"This is the public implementation for chainlinkTokenAddress, which is      an internal method of the ChainlinkClient contract",notice:"Returns the address of the LINK token"},"jobId()":{inputs:[],name:"jobId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"newOracleRequest(uint256,string,string,int256)":{inputs:[{internalType:"uint256",name:"_payment",type:"uint256"},{internalType:"string",name:"_url",type:"string"},{internalType:"string",name:"_path",type:"string"},{internalType:"int256",name:"_times",type:"int256"}],name:"newOracleRequest",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function",details:"This function ignores the stored Oracle contract address and      will instead send the request to the address specified",params:{_path:"The dot-delimited path to parse of the response",_payment:"Payment to the oracle",_times:"The number to multiply the result by",_url:"The URL to fetch data from"},notice:"Creates a request to the specified Oracle contract address"},"oracleAddress()":{inputs:[],name:"oracleAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"policyFlow()":{inputs:[],name:"policyFlow",outputs:[{internalType:"contract IPolicyFlow",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setJobId(bytes32)":{inputs:[{internalType:"bytes32",name:"_newJobId",type:"bytes32"}],name:"setJobId",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set a new job id"},"setOracleAddress(address)":{inputs:[{internalType:"address",name:"_newOracle",type:"address"}],name:"setOracleAddress",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set the oracle address"},"setPolicyFlow(address)":{inputs:[{internalType:"address",name:"_policyFlow",type:"address"}],name:"setPolicyFlow",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Change the policy flow contract address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/miserable-flight/InsurancePool.sol:InsurancePool":{source:"contracts/miserable-flight/InsurancePool.sol",name:"InsurancePool",title:"Insurance Pool",notice:"Insurance pool is the reserved risk pool for flight delay product.         For simplicity, some state variables are in the InsurancePoolStore contract.",constructor:{inputs:[{internalType:"address",name:"_emergencyPool",type:"address"},{internalType:"address",name:"_degisLottery",type:"address"},{internalType:"address",name:"_usdAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"BuyNewPolicy(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"payout",type:"uint256"}],name:"BuyNewPolicy",type:"event"},"CollateralFactorChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldFactor",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newFactor",type:"uint256"}],name:"CollateralFactorChanged",type:"event"},"FrozenTimeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_newFrozenTime",type:"uint256"}],name:"FrozenTimeChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyFlowChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"policyFlowAddress",type:"address"}],name:"PolicyFlowChanged",type:"event"},"PremiumDistributed(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_premiumToEmergency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_premiumToLottery",type:"uint256"}],name:"PremiumDistributed",type:"event"},"RewardDistributionChanged(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"toLP",type:"uint256"},{indexed:!1,internalType:"uint256",name:"toLottery",type:"uint256"},{indexed:!1,internalType:"uint256",name:"toEmergency",type:"uint256"}],name:"RewardDistributionChanged",type:"event"},"Stake(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Stake",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},"Unstake(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstake",type:"event"}},methods:{"LPValue()":{inputs:[],name:"LPValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MAX_UNSTAKE_LENGTH()":{inputs:[],name:"MAX_UNSTAKE_LENGTH",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"USDToken()":{inputs:[],name:"USDToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"activePremiums()":{inputs:[],name:"activePremiums",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"availableCapacity()":{inputs:[],name:"availableCapacity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"checkCapacity(uint256)":{inputs:[{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"checkCapacity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_payoff:"Payoff of the policy to be bought"},returns:{_0:"Whether there is enough capacity in the pool for this payoff"},notice:"Check the conditions when receive new buying request"},"collateralFactor()":{inputs:[],name:"collateralFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"degisLottery()":{inputs:[],name:"degisLottery",outputs:[{internalType:"contract IDegisLottery",name:"",type:"address"}],stateMutability:"view",type:"function"},"emergencyPool()":{inputs:[],name:"emergencyPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"frozenTime()":{inputs:[],name:"frozenTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUnlockedFor(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUnlockedFor",outputs:[{internalType:"uint256",name:"_unlockedAmount",type:"uint256"}],stateMutability:"view",type:"function",params:{_user:"User's address"},returns:{_unlockedAmount:"Unlocked amount of the user"},notice:"Get the balance that one user(LP) can unlock"},"getUserBalance(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"_userBalance",type:"uint256"}],stateMutability:"view",type:"function",details:"Used in many places so give it a seperate function",params:{_user:"User's address"},returns:{_userBalance:"Real balance of this user"},notice:"Get the real balance: LPValue * LP_Num"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"lockedBalance()":{inputs:[],name:"lockedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedRatio()":{inputs:[],name:"lockedRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"payClaim(uint256,uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"},{internalType:"uint256",name:"_realPayoff",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"payClaim",outputs:[],stateMutability:"nonpayable",type:"function",params:{_payoff:"Max payoff of the policy",_premium:"Premium of the policy",_realPayoff:"Real payoff of the policy",_user:"Address of the policy claimer"},notice:"Pay a claim"},"policyFlow()":{inputs:[],name:"policyFlow",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"purchaseIncentiveAmount()":{inputs:[],name:"purchaseIncentiveAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"realStakingBalance()":{inputs:[],name:"realStakingBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"revertAllUnstakeRequest()":{inputs:[],name:"revertAllUnstakeRequest",outputs:[],stateMutability:"nonpayable",type:"function",notice:"revert all unstake requests for a user"},"revertLatestUnstakeRequest()":{inputs:[],name:"revertLatestUnstakeRequest",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Revert the last unstake request for a user"},"rewardDistribution(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardDistribution",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setCollateralFactor(uint256)":{inputs:[{internalType:"uint256",name:"_factor",type:"uint256"}],name:"setCollateralFactor",outputs:[],stateMutability:"nonpayable",type:"function",params:{_factor:"The new collateral factor"},notice:"Change the collateral factor"},"setFrozenTime(uint256)":{inputs:[{internalType:"uint256",name:"_newFrozenTime",type:"uint256"}],name:"setFrozenTime",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newFrozenTime:"New frozen time, in timestamp(s)"},notice:"Set a new frozen time"},"setPolicyFlow(address)":{inputs:[{internalType:"address",name:"_policyFlowAddress",type:"address"}],name:"setPolicyFlow",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set the address of policyFlow"},"setRewardDistribution(uint256[3])":{inputs:[{internalType:"uint256[3]",name:"_newDistribution",type:"uint256[3]"}],name:"setRewardDistribution",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newDistribution:"New distribution [LP, Lottery, Emergency]"},notice:"Set the premium reward distribution"},"stake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount that the user want to stake"},notice:"LPs stake assets into the pool"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalStakingBalance()":{inputs:[],name:"totalStakingBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only unstake by yourself",params:{_amount:"The amount that the user want to unstake"},notice:"Unstake from the pool (May fail if a claim happens before this operation)"},"unstakeMax()":{inputs:[],name:"unstakeMax",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Unstake the max amount of a user"},"updateWhenBuy(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"updateWhenBuy",outputs:[],stateMutability:"nonpayable",type:"function",details:"Capacity check is done before calling this function",params:{_payoff:"Policy's payoff (max payoff)",_premium:"Policy's premium",_user:"Address of the buyer"},notice:"Update the pool variables when buying policies"},"updateWhenExpire(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"updateWhenExpire",outputs:[],stateMutability:"nonpayable",type:"function",params:{_payoff:"Policy's payoff (max payoff)",_premium:"Policy's premium"},notice:"Update the status when a policy expires"},"userInfo(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"depositTime",type:"uint256"},{internalType:"uint256",name:"pendingBalance",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/miserable-flight/PolicyFlow.sol:PolicyFlow":{source:"contracts/miserable-flight/PolicyFlow.sol",name:"PolicyFlow",constructor:{inputs:[{internalType:"address",name:"_insurancePool",type:"address"},{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_sigManager",type:"address"},{internalType:"address",name:"_buyerToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DelayThresholdChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"thresholdMin",type:"uint256"},{indexed:!1,internalType:"uint256",name:"thresholdMax",type:"uint256"}],name:"DelayThresholdChanged",type:"event"},"FeeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newFee",type:"uint256"}],name:"FeeChanged",type:"event"},"FlightOracleChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newOracle",type:"address"}],name:"FlightOracleChanged",type:"event"},"FulfilledOracleRequest(uint256,bytes32)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"policyId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"requestId",type:"bytes32"}],name:"FulfilledOracleRequest",type:"event"},"MaxPayoffChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newMaxPayoff",type:"uint256"}],name:"MaxPayoffChanged",type:"event"},"MinTimeBeforeDepartureChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"newMinTime",type:"uint256"}],name:"MinTimeBeforeDepartureChanged",type:"event"},"NewPolicyApplication(uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_policyID",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"NewPolicyApplication",type:"event"},"OracleUrlChanged(string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"newUrl",type:"string"}],name:"OracleUrlChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyClaimed(uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"policyID",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"PolicyClaimed",type:"event"},"PolicyDeclined(uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"policyID",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"PolicyDeclined",type:"event"},"PolicyExpired(uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"policyID",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"PolicyExpired",type:"event"},"PolicyOwnerTransfer(uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"PolicyOwnerTransfer",type:"event"},"PolicySold(uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"policyID",type:"uint256"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"PolicySold",type:"event"}},methods:{"DELAY_THRESHOLD_MAX()":{inputs:[],name:"DELAY_THRESHOLD_MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DELAY_THRESHOLD_MIN()":{inputs:[],name:"DELAY_THRESHOLD_MIN",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"FLIGHT_STATUS_URL()":{inputs:[],name:"FLIGHT_STATUS_URL",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"MAX_PAYOFF()":{inputs:[],name:"MAX_PAYOFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MIN_TIME_BEFORE_DEPARTURE()":{inputs:[],name:"MIN_TIME_BEFORE_DEPARTURE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"PRODUCT_ID()":{inputs:[],name:"PRODUCT_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"buyerToken()":{inputs:[],name:"buyerToken",outputs:[{internalType:"contract IBuyerToken",name:"",type:"address"}],stateMutability:"view",type:"function"},"fee()":{inputs:[],name:"fee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"finalSettlement(bytes32,uint256)":{inputs:[{internalType:"bytes32",name:"_requestId",type:"bytes32"},{internalType:"uint256",name:"_result",type:"uint256"}],name:"finalSettlement",outputs:[],stateMutability:"nonpayable",type:"function",params:{_requestId:"Chainlink request id",_result:"Delay result (minutes) given by oracle"},notice:"Do the final settlement, called by FlightOracle contract"},"findPolicyBuyerById(uint256)":{inputs:[{internalType:"uint256",name:"_policyId",type:"uint256"}],name:"findPolicyBuyerById",outputs:[{internalType:"address",name:"buyerAddress",type:"address"}],stateMutability:"view",type:"function",params:{_policyId:"Unique policy Id (uint256)"},returns:{buyerAddress:"The buyer of this policy"},notice:"Get the policy buyer by policyId"},"flightOracle()":{inputs:[],name:"flightOracle",outputs:[{internalType:"contract IFlightOracle",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPolicyInfoById(uint256)":{inputs:[{internalType:"uint256",name:"_policyId",type:"uint256"}],name:"getPolicyInfoById",outputs:[{components:[{internalType:"uint256",name:"productId",type:"uint256"},{internalType:"address",name:"buyerAddress",type:"address"},{internalType:"uint256",name:"policyId",type:"uint256"},{internalType:"string",name:"flightNumber",type:"string"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"uint256",name:"purchaseTimestamp",type:"uint256"},{internalType:"uint256",name:"departureTimestamp",type:"uint256"},{internalType:"uint256",name:"landingTimestamp",type:"uint256"},{internalType:"enum IPolicyStruct.PolicyStatus",name:"status",type:"uint8"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"delayResult",type:"uint256"}],internalType:"struct IPolicyStruct.PolicyInfo",name:"policy",type:"tuple"}],stateMutability:"view",type:"function",params:{_policyId:"Total count/order of the policy = NFT tokenId"},returns:{policy:"A struct of information about this policy"},notice:"Get the policyInfo from its count/order"},"insurancePool()":{inputs:[],name:"insurancePool",outputs:[{internalType:"contract IInsurancePool",name:"",type:"address"}],stateMutability:"view",type:"function"},"newApplication(uint256,string,uint256,uint256,uint256,uint256,bytes)":{inputs:[{internalType:"uint256",name:"_productId",type:"uint256"},{internalType:"string",name:"_flightNumber",type:"string"},{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_departureTimestamp",type:"uint256"},{internalType:"uint256",name:"_landingDate",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"newApplication",outputs:[{internalType:"uint256",name:"_policyId",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"The transaction should have the signature from the backend server",params:{_deadline:"Deadline for this purchase request",_departureTimestamp:"Departure date of this flight (unix timestamp in s, not ms!)",_flightNumber:'Flight number in string (e.g. "AQ1299")',_landingDate:"Landing date of this flight (uinx timestamp in s, not ms!)",_premium:"Premium of this policy (decimals: 18)",_productId:"ID of the purchased product (0: flightdelay; 1,2,3...: others)",signature:"Use web3.eth.sign(hash(data), account) to generate the signature"},notice:"Buy a new flight delay policy"},"newClaimRequest(uint256,string,string,string,bool)":{inputs:[{internalType:"uint256",name:"_policyId",type:"uint256"},{internalType:"string",name:"_flightNumber",type:"string"},{internalType:"string",name:"_timestamp",type:"string"},{internalType:"string",name:"_path",type:"string"},{internalType:"bool",name:"_forceUpdate",type:"bool"}],name:"newClaimRequest",outputs:[],stateMutability:"nonpayable",type:"function",details:"Anyone can make a new claim",params:{_flightNumber:"The flight number",_forceUpdate:"Owner can force to update",_path:"Which data in json needs to get",_policyId:"The total order/id of the policy",_timestamp:"The flight departure timestamp"},notice:"Make a claim request"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"policyList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"policyList",outputs:[{internalType:"uint256",name:"productId",type:"uint256"},{internalType:"address",name:"buyerAddress",type:"address"},{internalType:"uint256",name:"policyId",type:"uint256"},{internalType:"string",name:"flightNumber",type:"string"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"uint256",name:"purchaseTimestamp",type:"uint256"},{internalType:"uint256",name:"departureTimestamp",type:"uint256"},{internalType:"uint256",name:"landingTimestamp",type:"uint256"},{internalType:"enum IPolicyStruct.PolicyStatus",name:"status",type:"uint8"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"delayResult",type:"uint256"}],stateMutability:"view",type:"function"},"policyOwnerTransfer(uint256,address,address)":{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"},{internalType:"address",name:"_oldOwner",type:"address"},{internalType:"address",name:"_newOwner",type:"address"}],name:"policyOwnerTransfer",outputs:[],stateMutability:"nonpayable",type:"function",details:"This function is called by the ERC721 contract of PolicyToken",params:{_newOwner:"The new owner",_oldOwner:"The initial owner",_tokenId:"Token Id of the policy token"},notice:"Update information when a policy token's ownership has been transferred"},"policyToken()":{inputs:[],name:"policyToken",outputs:[{internalType:"contract IFDPolicyToken",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setDelayThreshold(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_thresholdMin",type:"uint256"},{internalType:"uint256",name:"_thresholdMax",type:"uint256"}],name:"setDelayThreshold",outputs:[],stateMutability:"nonpayable",type:"function",params:{_thresholdMax:"New maximum threshold",_thresholdMin:"New minimum threshold"},notice:"Set the new delay threshold used for calculating payoff"},"setFee(uint256)":{inputs:[{internalType:"uint256",name:"_fee",type:"uint256"}],name:"setFee",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fee:"New oracle fee"},notice:"Change the oracle fee"},"setFlightOracle(address)":{inputs:[{internalType:"address",name:"_oracleAddress",type:"address"}],name:"setFlightOracle",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oracleAddress:"New oracle address"},notice:"Change the oracle address"},"setMaxPayoff(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxPayoff",type:"uint256"}],name:"setMaxPayoff",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMaxPayoff:"New maxpayoff amount"},notice:"Change the max payoff"},"setMinTimeBeforeDeparture(uint256)":{inputs:[{internalType:"uint256",name:"_newMinTime",type:"uint256"}],name:"setMinTimeBeforeDeparture",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinTime:"New time set"},notice:"How long before departure when users can not buy new policies"},"setURL(string)":{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"setURL",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set a new url"},"sigManager()":{inputs:[],name:"sigManager",outputs:[{internalType:"contract ISigManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalPolicies()":{inputs:[],name:"totalPolicies",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"viewUserPolicy(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"viewUserPolicy",outputs:[{components:[{internalType:"uint256",name:"productId",type:"uint256"},{internalType:"address",name:"buyerAddress",type:"address"},{internalType:"uint256",name:"policyId",type:"uint256"},{internalType:"string",name:"flightNumber",type:"string"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"uint256",name:"purchaseTimestamp",type:"uint256"},{internalType:"uint256",name:"departureTimestamp",type:"uint256"},{internalType:"uint256",name:"landingTimestamp",type:"uint256"},{internalType:"enum IPolicyStruct.PolicyStatus",name:"status",type:"uint8"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"delayResult",type:"uint256"}],internalType:"struct IPolicyStruct.PolicyInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",params:{_user:"User's address"},returns:{_0:"userPolicies User's all policy details"},notice:"Show a user's policies (all)"}}},"contracts/miserable-flight/SigManager.sol:SigManager":{source:"contracts/miserable-flight/SigManager.sol",name:"SigManager",title:"Signature Manager",notice:"Signature is used when submitting new applications.         The premium should be decided by the pricing model and be signed by a private key.         Other submission will not be accepted.         Please keep the signer key safe.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SignerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_newSigner",type:"address"}],name:"SignerAdded",type:"event"},"SignerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_oldSigner",type:"address"}],name:"SignerRemoved",type:"event"}},methods:{"_SUBMIT_APPLICATION_TYPEHASH()":{inputs:[],name:"_SUBMIT_APPLICATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"addSigner(address)":{inputs:[{internalType:"address",name:"_newSigner",type:"address"}],name:"addSigner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newSigner:"The new signer address"},notice:"Add a signer into valid signer list"},"checkSignature(bytes,string,uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"string",name:"_flightNumber",type:"string"},{internalType:"uint256",name:"_departureTimestamp",type:"uint256"},{internalType:"uint256",name:"_landingDate",type:"uint256"},{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"checkSignature",outputs:[],stateMutability:"view",type:"function",params:{_deadline:"Deadline of a policy",_flightNumber:"Flight number",_premium:"Policy premium",_user:"User address",signature:"65 bytes array: [[v (1)], [r (32)], [s (32)]]"},notice:"Check signature when buying a new policy (avoid arbitrary premium amount)"},"isValidSigner(address)":{inputs:[{internalType:"address",name:"_address",type:"address"}],name:"isValidSigner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_address:"The input address"},returns:{_0:"isValidSigner Whether this address is"},notice:"Check whether the address is a valid signer"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"removeSigner(address)":{inputs:[{internalType:"address",name:"_oldSigner",type:"address"}],name:"removeSigner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldSigner:"The old signer address to be removed"},notice:"Remove a signer from the valid signer list"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/miserable-flight/abstracts/InsurancePoolStore.sol:InsurancePoolStore":{source:"contracts/miserable-flight/abstracts/InsurancePoolStore.sol",name:"InsurancePoolStore",events:{"BuyNewPolicy(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"payout",type:"uint256"}],name:"BuyNewPolicy",type:"event"},"CollateralFactorChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldFactor",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newFactor",type:"uint256"}],name:"CollateralFactorChanged",type:"event"},"FrozenTimeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_newFrozenTime",type:"uint256"}],name:"FrozenTimeChanged",type:"event"},"PolicyFlowChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"policyFlowAddress",type:"address"}],name:"PolicyFlowChanged",type:"event"},"PremiumDistributed(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_premiumToEmergency",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_premiumToLottery",type:"uint256"}],name:"PremiumDistributed",type:"event"},"RewardDistributionChanged(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"toLP",type:"uint256"},{indexed:!1,internalType:"uint256",name:"toLottery",type:"uint256"},{indexed:!1,internalType:"uint256",name:"toEmergency",type:"uint256"}],name:"RewardDistributionChanged",type:"event"},"Stake(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Stake",type:"event"},"Unstake(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstake",type:"event"}},methods:{"LPValue()":{inputs:[],name:"LPValue",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MAX_UNSTAKE_LENGTH()":{inputs:[],name:"MAX_UNSTAKE_LENGTH",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"activePremiums()":{inputs:[],name:"activePremiums",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"availableCapacity()":{inputs:[],name:"availableCapacity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"collateralFactor()":{inputs:[],name:"collateralFactor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"emergencyPool()":{inputs:[],name:"emergencyPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"frozenTime()":{inputs:[],name:"frozenTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedBalance()":{inputs:[],name:"lockedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedRatio()":{inputs:[],name:"lockedRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"policyFlow()":{inputs:[],name:"policyFlow",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"purchaseIncentiveAmount()":{inputs:[],name:"purchaseIncentiveAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"realStakingBalance()":{inputs:[],name:"realStakingBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardDistribution(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardDistribution",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalStakingBalance()":{inputs:[],name:"totalStakingBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"userInfo(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"depositTime",type:"uint256"},{internalType:"uint256",name:"pendingBalance",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/miserable-flight/abstracts/PolicyParameters.sol:PolicyParameters":{source:"contracts/miserable-flight/abstracts/PolicyParameters.sol",name:"PolicyParameters",methods:{"DELAY_THRESHOLD_MAX()":{inputs:[],name:"DELAY_THRESHOLD_MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DELAY_THRESHOLD_MIN()":{inputs:[],name:"DELAY_THRESHOLD_MIN",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MAX_PAYOFF()":{inputs:[],name:"MAX_PAYOFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MIN_TIME_BEFORE_DEPARTURE()":{inputs:[],name:"MIN_TIME_BEFORE_DEPARTURE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"PRODUCT_ID()":{inputs:[],name:"PRODUCT_ID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/miserable-flight/interfaces/IFDPolicyToken.sol:IFDPolicyToken":{source:"contracts/miserable-flight/interfaces/IFDPolicyToken.sol",name:"IFDPolicyToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"operator",type:"address"}],stateMutability:"view",type:"function",details:"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"getTokenURI(uint256)":{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"getTokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"mintPolicyToken(address)":{inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"mintPolicyToken",outputs:[],stateMutability:"nonpayable",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"owner",type:"address"}],stateMutability:"view",type:"function",details:"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}}},"contracts/miserable-flight/interfaces/IFlightOracle.sol:IFlightOracle":{source:"contracts/miserable-flight/interfaces/IFlightOracle.sol",name:"IFlightOracle",methods:{"getChainlinkTokenAddress()":{inputs:[],name:"getChainlinkTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"newOracleRequest(uint256,string,string,int256)":{inputs:[{internalType:"uint256",name:"_payment",type:"uint256"},{internalType:"string",name:"_url",type:"string"},{internalType:"string",name:"_path",type:"string"},{internalType:"int256",name:"times",type:"int256"}],name:"newOracleRequest",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},"setJobId(bytes32)":{inputs:[{internalType:"bytes32",name:"_newJobId",type:"bytes32"}],name:"setJobId",outputs:[],stateMutability:"nonpayable",type:"function"},"setOracleAddress(address)":{inputs:[{internalType:"address",name:"_newOracle",type:"address"}],name:"setOracleAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"setPolicyFlow(address)":{inputs:[{internalType:"address",name:"_policyFlow",type:"address"}],name:"setPolicyFlow",outputs:[],stateMutability:"nonpayable",type:"function"},"setURL(string)":{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"setURL",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/miserable-flight/interfaces/IInsurancePool.sol:IInsurancePool":{source:"contracts/miserable-flight/interfaces/IInsurancePool.sol",name:"IInsurancePool",methods:{"checkCapacity(uint256)":{inputs:[{internalType:"uint256",name:"_payoff",type:"uint256"}],name:"checkCapacity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"getLockedFor(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getLockedFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPoolUnlocked()":{inputs:[],name:"getPoolUnlocked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUnlockedFor(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUnlockedFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUserBalance(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payClaim(uint256,uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"},{internalType:"uint256",name:"_realPayoff",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"payClaim",outputs:[],stateMutability:"nonpayable",type:"function"},"revertAllUnstakeRequest(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"revertAllUnstakeRequest",outputs:[],stateMutability:"nonpayable",type:"function"},"revertUnstakeRequest(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"revertUnstakeRequest",outputs:[],stateMutability:"nonpayable",type:"function"},"setCollateralFactor(uint256)":{inputs:[{internalType:"uint256",name:"_factor",type:"uint256"}],name:"setCollateralFactor",outputs:[],stateMutability:"nonpayable",type:"function"},"setFrozenTime(uint256)":{inputs:[{internalType:"uint256",name:"_newFrozenTime",type:"uint256"}],name:"setFrozenTime",outputs:[],stateMutability:"nonpayable",type:"function"},"setIncomeDistribution(uint256[3])":{inputs:[{internalType:"uint256[3]",name:"_newDistribution",type:"uint256[3]"}],name:"setIncomeDistribution",outputs:[],stateMutability:"nonpayable",type:"function"},"setPolicyFlow(address)":{inputs:[{internalType:"address",name:"_policyFlowAddress",type:"address"}],name:"setPolicyFlow",outputs:[],stateMutability:"nonpayable",type:"function"},"setPurchaseIncentive(uint256)":{inputs:[{internalType:"uint256",name:"_newIncentive",type:"uint256"}],name:"setPurchaseIncentive",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"_newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function"},"unstakeMax()":{inputs:[],name:"unstakeMax",outputs:[],stateMutability:"nonpayable",type:"function"},"updateWhenBuy(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"updateWhenBuy",outputs:[],stateMutability:"nonpayable",type:"function"},"updateWhenExpire(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_payoff",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"updateWhenExpire",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/miserable-flight/interfaces/IPolicyFlow.sol:IPolicyFlow":{source:"contracts/miserable-flight/interfaces/IPolicyFlow.sol",name:"IPolicyFlow",title:"IPolicyFlow",notice:"This is the interface of PolicyFlow contract.         Contains some type definations, event list and function declarations.",methods:{"finalSettlement(bytes32,uint256)":{inputs:[{internalType:"bytes32",name:"_requestId",type:"bytes32"},{internalType:"uint256",name:"_result",type:"uint256"}],name:"finalSettlement",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Do the final settlement when receiving the oracle result"},"getPolicyInfoById(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"getPolicyInfoById",outputs:[{components:[{internalType:"uint256",name:"productId",type:"uint256"},{internalType:"address",name:"buyerAddress",type:"address"},{internalType:"uint256",name:"policyId",type:"uint256"},{internalType:"string",name:"flightNumber",type:"string"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"uint256",name:"purchaseTimestamp",type:"uint256"},{internalType:"uint256",name:"departureTimestamp",type:"uint256"},{internalType:"uint256",name:"landingTimestamp",type:"uint256"},{internalType:"enum IPolicyStruct.PolicyStatus",name:"status",type:"uint8"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"delayResult",type:"uint256"}],internalType:"struct IPolicyStruct.PolicyInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function",notice:"Get the policy info by its policyId"},"newApplication(uint256,string,uint256,uint256,uint256,uint256,bytes)":{inputs:[{internalType:"uint256",name:"_productId",type:"uint256"},{internalType:"string",name:"_flightNumber",type:"string"},{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_departureTimestamp",type:"uint256"},{internalType:"uint256",name:"_landingTimestamp",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"newApplication",outputs:[{internalType:"uint256",name:"policyId",type:"uint256"}],stateMutability:"nonpayable",type:"function",notice:"Apply for a new policy"},"newClaimRequest(uint256,string,string,string,bool)":{inputs:[{internalType:"uint256",name:"_policyId",type:"uint256"},{internalType:"string",name:"_flightNumber",type:"string"},{internalType:"string",name:"_timestamp",type:"string"},{internalType:"string",name:"_path",type:"string"},{internalType:"bool",name:"_forceUpdate",type:"bool"}],name:"newClaimRequest",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Start a new claim request"},"policyOwnerTransfer(uint256,address,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"policyOwnerTransfer",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Update when the policy token is transferred to another owner"},"viewUserPolicy(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"viewUserPolicy",outputs:[{components:[{internalType:"uint256",name:"productId",type:"uint256"},{internalType:"address",name:"buyerAddress",type:"address"},{internalType:"uint256",name:"policyId",type:"uint256"},{internalType:"string",name:"flightNumber",type:"string"},{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"payoff",type:"uint256"},{internalType:"uint256",name:"purchaseTimestamp",type:"uint256"},{internalType:"uint256",name:"departureTimestamp",type:"uint256"},{internalType:"uint256",name:"landingTimestamp",type:"uint256"},{internalType:"enum IPolicyStruct.PolicyStatus",name:"status",type:"uint8"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"delayResult",type:"uint256"}],internalType:"struct IPolicyStruct.PolicyInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",notice:"View a user's policy info"}}},"contracts/miserable-flight/interfaces/IPolicyStruct.sol:IPolicyStruct":{source:"contracts/miserable-flight/interfaces/IPolicyStruct.sol",name:"IPolicyStruct"},"contracts/miserable-flight/interfaces/ISigManager.sol:ISigManager":{source:"contracts/miserable-flight/interfaces/ISigManager.sol",name:"ISigManager",events:{"SignerAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_newSigner",type:"address"}],name:"SignerAdded",type:"event"},"SignerRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldSigner",type:"address"}],name:"SignerRemoved",type:"event"}},methods:{"addSigner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"addSigner",outputs:[],stateMutability:"nonpayable",type:"function"},"checkSignature(bytes,string,uint256,uint256,address,uint256,uint256)":{inputs:[{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"string",name:"_flightNumber",type:"string"},{internalType:"uint256",name:"_departureTimestamp",type:"uint256"},{internalType:"uint256",name:"_landingDate",type:"uint256"},{internalType:"address",name:"_address",type:"address"},{internalType:"uint256",name:"_premium",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"checkSignature",outputs:[],stateMutability:"view",type:"function"},"isValidSigner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isValidSigner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"removeSigner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"removeSigner",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/MockUSD.sol:MockUSD":{source:"contracts/mocks/MockUSD.sol",name:"MockUSD",notice:"This is the MockUSD used in testnet         Maximum mint amount is 500k for each user.         Maximum mint amount for every single tx is 100k.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"INITIAL_SUPPLY()":{inputs:[],name:"INITIAL_SUPPLY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"USER_CAP()":{inputs:[],name:"USER_CAP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getAllUsers()":{inputs:[],name:"getAllUsers",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/naughty-price/NPPolicyToken.sol:NPPolicyToken":{source:"contracts/naughty-price/NPPolicyToken.sol",name:"NPPolicyToken",title:"Policy Token for Naughty Price",details:"It is different from the flight delay token.         That is an ERC721 NFT and this is an ERC20 token.",notice:"This is the contract for token price policy token.         It is a ERC20 token with an owner and a minter.         The owner should be the deployer at first.         The minter should be the policyCore contract.",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"address",name:"_minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address to burn tokens",_amount:"Amount to be burned"},notice:"Burn some policy tokens"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address to receive the tokens",_amount:"Amount to be minted"},notice:"Mint some policy tokens"},"minter()":{inputs:[],name:"minter",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/naughty-price/NaughtyFactory.sol:NaughtyFactory":{source:"contracts/naughty-price/NaughtyFactory.sol",name:"NaughtyFactory",title:"Naughty Factory",details:"Factory contract to deploy new pools periodically      Each pool(product) will have a unique naughtyId      Each pool will have its pool token      PolicyToken - Stablecoin      Token 0 may change but Token 1 is always stablecoin.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyCoreAddressChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPolicyCore",type:"address"},{indexed:!1,internalType:"address",name:"newPolicyCore",type:"address"}],name:"PolicyCoreAddressChanged",type:"event"}},methods:{"PAIR_INIT_CODE_HASH()":{inputs:[],name:"PAIR_INIT_CODE_HASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"_nextId()":{inputs:[],name:"_nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allPairs(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allPairs",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"allTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"deployPolicyToken(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"deployPolicyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",params:{_policyTokenName:"Name of the policyToken"},returns:{_0:"PolicyToken address"},notice:"For each round we need to first create the policytoken(ERC20)"},"deployPool(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",params:{_deadline:"Deadline of the pool",_feeRate:"Fee rate given to LP holders",_policyTokenAddress:"Address of policy token",_stablecoin:"Address of the stable coin"},returns:{_0:"Address of the pool"},notice:"After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract"},"getInitCodeHashForPolicyToken(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"getInitCodeHashForPolicyToken",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",params:{_policyTokenName:"Name of the policy token to be deployed"},notice:"Get the INIT_CODE_HASH for policy tokens with parameters"},"getLatestTokenAddress()":{inputs:[],name:"getLatestTokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",returns:{_0:"Latest token address"},notice:"Next token to be deployed"},"getPairAddress(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress1",type:"address"},{internalType:"address",name:"_tokenAddress2",type:"address"}],name:"getPairAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_tokenAddress1:"Address of token1",_tokenAddress2:"Address of toekn2"},returns:{_0:"Pool address of the two tokens"},notice:"Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the tokens will be sorted inside the function"},"getPolicyTokenBytecode(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getPolicyTokenBytecode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function",details:"It is public for test convinience",params:{_tokenName:"Name of policyToken"},notice:"Get the policyToken bytecode (with parameters)"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setPolicyCoreAddress(address)":{inputs:[{internalType:"address",name:"_policyCore",type:"address"}],name:"setPolicyCoreAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyCore:"Address of policyCore contract"},notice:"Remember to call this function to set the policyCore address         < PolicyCore should be the owner of policyToken >"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/naughty-price/NaughtyPair.sol:NaughtyPair":{source:"contracts/naughty-price/NaughtyPair.sol",name:"NaughtyPair",title:"Naughty Pair",notice:"This is the contract for the naughtyPrice swapping pair.         Every time a new naughtyPrice product is online you need to deploy this contract.         The contract will be initialized with two tokens and a deadline.         Token0 will be policy tokens and token1 will be stablecoins.         The swaps are only availale before the deadline.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},"Mint(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"}],name:"Mint",type:"event"},"ReserveUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"reserve0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reserve1",type:"uint256"}],name:"ReserveUpdated",type:"event"},"Swap(address,uint256,uint256,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amountAIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountBIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountAOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountBOut",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"MINIMUM_LIQUIDITY()":{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address)":{inputs:[{internalType:"address",name:"_to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_to:"User address"},returns:{amount0:"Amount of token0 to be sent back",amount1:"Amount of token1 to be sent back"},notice:"Burn LP tokens give back the original tokens"},"deadline()":{inputs:[],name:"deadline",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeRate()":{inputs:[],name:"feeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"}],stateMutability:"view",type:"function",details:"This function always put policy token at the first place!",returns:{_reserve0:"Reserve of token0",_reserve1:"Reserve of token1"},notice:"Get reserve0 (Policy token) and reserve1 (stablecoin)."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"initialize(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_deadline:"Deadline for this pool",_token0:"Token0 address (policy token address)",_token1:"Token1 address (stablecoin address)"},notice:"Initialize the contract status after the deployment by factory"},"mint(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{to:"The user address"},returns:{liquidity:"The LP token amount"},notice:"Mint LP Token to liquidity providers         Called when adding liquidity."},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"swap(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_amount0Out",type:"uint256"},{internalType:"uint256",name:"_amount1Out",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount0Out:"Amount of token0 to be given out (may be 0)",_amount1Out:"Amount of token1 to be given out (may be 0)",_to:"Address to receive the swap result"},notice:"Finish the swap process"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Syncrinize the status of this pool"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"unlocked()":{inputs:[],name:"unlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/NaughtyRouter.sol:NaughtyRouter":{source:"contracts/naughty-price/NaughtyRouter.sol",name:"NaughtyRouter",title:"NaughtyRouter",notice:"Router for the pool, you can add/remove liquidity or swap A for B.         Swapping fee rate is 2% and all of them are given to LP.         Very similar logic with Uniswap V2.",constructor:{inputs:[{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_buyerToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"LiquidityAdded(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pairAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidity",type:"uint256"}],name:"LiquidityAdded",type:"event"},"LiquidityRemoved(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pairAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidity",type:"uint256"}],name:"LiquidityRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_amountADesired",type:"uint256"},{internalType:"uint256",name:"_amountBDesired",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountADesired:"Amount of policyToken desired",_amountAMin:"Minimum amoutn of policy token",_amountBDesired:"Amount of stablecoin desired",_amountBMin:"Minimum amount of stablecoin",_deadline:"Transaction will revert after this deadline",_to:"Address that receive the lp token, normally the user himself",_tokenA:"Address of policyToken",_tokenB:"Address of stablecoin"},returns:{amountA:"Amount of tokenA to be input",amountB:"Amount of tokenB to be input",liquidity:"LP token to be mint"},notice:"Add liquidity function"},"addLiquidityWithUSD(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_amountADesired",type:"uint256"},{internalType:"uint256",name:"_amountBDesired",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"addLiquidityWithUSD",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only difference with addLiquidity is that mintPolicyTokenForUser",params:{_amountADesired:"Amount of policyToken desired",_amountAMin:"Minimum amount of policy token",_amountBDesired:"Amount of stablecoin desired",_amountBMin:"Minimum amount of stablecoin",_deadline:"Transaction will revert after this deadline",_to:"Address that receive the lp token, normally the user himself",_tokenA:"Address of policyToken",_tokenB:"Address of stablecoin"},notice:"Add liquidity but only provide stablecoins"},"buyerToken()":{inputs:[],name:"buyerToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_liquidity",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountAMin:"Minimum amount of tokenA given out",_amountBMin:"Minimum amount of tokenB given out",_deadline:"Deadline of this transaction",_liquidity:"The lptoken amount to be removed",_to:"User address",_tokenA:"Address of policy token",_tokenB:"Address of stablecoin"},returns:{amountA:"Amount of token0 given out",amountB:"Amount of token1 given out"},notice:"Remove liquidity from the pool"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setBuyerToken(address)":{inputs:[{internalType:"address",name:"_buyerToken",type:"address"}],name:"setBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_buyerToken:"Address of new buyer token"},notice:"Set the address of buyer token"},"setPolicyCore(address)":{inputs:[{internalType:"address",name:"_coreAddress",type:"address"}],name:"setPolicyCore",outputs:[],stateMutability:"nonpayable",type:"function",params:{_coreAddress:"Address of new policyCore"},notice:"Set the address of policyCore"},"swapExactTokensforTokens(uint256,uint256,address,address,address,uint256)":{inputs:[{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"swapExactTokensforTokens",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountIn:"Fixed token input",_amountOutMin:"Minimum token output",_deadline:"Deadline for this specific swap",_to:"User address",_tokenIn:"Address of input token",_tokenOut:"Address of output token"},returns:{amountOut:"Amounts to be really given out"},notice:"Amount in is fixed"},"swapTokensforExactTokens(uint256,uint256,address,address,address,uint256)":{inputs:[{internalType:"uint256",name:"_amountInMax",type:"uint256"},{internalType:"uint256",name:"_amountOut",type:"uint256"},{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"swapTokensforExactTokens",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountInMax:"Maximum token input",_amountOut:"Fixed token output",_deadline:"Deadline for this specific swap",_to:"User address",_tokenIn:"Address of input token",_tokenOut:"Address of output token"},returns:{amountIn:"Amounts to be really put in"},notice:"Amount out is fixed"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/naughty-price/PolicyCore.sol:PolicyCore":{source:"contracts/naughty-price/PolicyCore.sol",name:"PolicyCore",title:"PolicyCore",details:"Most of the functions to be called from outside will use the name of policyToken         rather than the address (easy to read).         Other variables or functions still use address to index.         The rule of policyToken naming is:              Original Token Name(with decimals) + Strike Price + Lower or Higher + Date         E.g.  AVAX_30.0_L_2101, BTC_30000.0_L_2102, ETH_8000.0_H_2109         (the original name need to be the same as in the chainlink oracle)",notice:"Core logic of Naughty Price Product         Preset:              (Done in the naughtyFactory contract)              1. Deploy policyToken contract              2. Deploy policyToken-Stablecoin pool contract         User Interaction:              1. Deposit Stablecoin and mint PolicyTokens              2. Redeem their Stablecoin and burn the PolicyTokens (before settlement)              3. Claim for payout with PolicyTokens (after settlement)         PolicyTokens are minted with the ratio 1:1 to Stablecoin         The PolicyTokens are traded in the pool with CFMM (xy=k)         When the event happens, a PolicyToken can be burned for claiming 1 Stablecoin.         When the event does not happen, the PolicyToken depositors can         redeem their 1 deposited Stablecoin",constructor:{inputs:[{internalType:"address",name:"_usdt",type:"address"},{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_priceGetter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DelegateDeposit(address,address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"payerAddress",type:"address"},{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DelegateDeposit",type:"event"},"Deposit(address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"EmergencyPoolChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newEmergencyPool",type:"address"}],name:"EmergencyPoolChanged",type:"event"},"FinalResultSettled(string,uint256,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"_policyTokenName",type:"string"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"bool",name:"isHappened",type:"bool"}],name:"FinalResultSettled",type:"event"},"LotteryChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newLotteryAddress",type:"address"}],name:"LotteryChanged",type:"event"},"NaughtyRouterChanged(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newRouter",type:"address"}],name:"NaughtyRouterChanged",type:"event"},"NewStablecoinAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_newStablecoin",type:"address"}],name:"NewStablecoinAdded",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyTokenDeployed(string,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"tokenName",type:"string"},{indexed:!1,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"deadline",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settleTimestamp",type:"uint256"}],name:"PolicyTokenDeployed",type:"event"},"PolicyTokensSettledForUsers(string,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"startIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"stopIndex",type:"uint256"}],name:"PolicyTokensSettledForUsers",type:"event"},"PoolDeployed(address,address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"address",name:"policyTokenAddress",type:"address"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"}],name:"PoolDeployed",type:"event"},"Redeem(address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Redeem",type:"event"},"RedeemAfterSettlement(address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RedeemAfterSettlement",type:"event"}},methods:{"_generateName(string,uint256,uint256,bool,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"uint256",name:"_decimals",type:"uint256"},{internalType:"uint256",name:"_strikePrice",type:"uint256"},{internalType:"bool",name:"_isCall",type:"bool"},{internalType:"uint256",name:"_round",type:"uint256"}],name:"_generateName",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",params:{_decimals:"Decimals of the name generation (0,1=>1)",_isCall:"The policy's payoff is triggered when higher or lower",_round:"Round of the policy (e.g. 2112, 2201)",_strikePrice:"Strike price of the policy",_tokenName:"Name of the token"},notice:"Generate the policy token name"},"addStablecoin(address)":{inputs:[{internalType:"address",name:"_newStablecoin",type:"address"}],name:"addStablecoin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newStablecoin:"Address of the new stablecoin"},notice:"Add a newly supported stablecoin"},"allDepositors(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"allDepositors",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"allPolicyTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allPolicyTokens",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"claim(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",details:"It is done after result settlement and only if the result is true",params:{_amount:"Amount of USDT (also the amount of policy tokens)",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stable coin"},notice:"Claim a payoff based on policy tokens"},"delegateDeposit(string,address,uint256,address)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"delegateDeposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only called by the router contract",params:{_amount:"Amount of stablecoin (also the amount of policy tokens)",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the sable coin",_user:"Address to receive the policy tokens"},notice:"Delegate deposit (deposit and mint for other addresses)"},"deployPolicyToken(string,bool,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"bool",name:"_isCall",type:"bool"},{internalType:"uint256",name:"_decimals",type:"uint256"},{internalType:"uint256",name:"_strikePrice",type:"uint256"},{internalType:"uint256",name:"_round",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_settleTimestamp",type:"uint256"}],name:"deployPolicyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",details:'Only the owner can deploy new policy token      The name form is like "AVAX_50_L_202101" and is built inside the contract.',params:{_deadline:"Deadline of this policy token (deposit / redeem / swap)",_decimals:"Decimals of this token's price (0~18)",_isCall:"The policy is for higher or lower than the strike price (call / put)",_settleTimestamp:"Can settle after this timestamp (for oracle)",_strikePrice:"Strike price of the policy (have already been transferred with 1e18)",_tokenName:"Name of the original token (e.g. AVAX, BTC, ETH...)"},returns:{_0:"policyTokenAddress The address of the policy token just deployed"},notice:"Deploy a new policy token and return the token address"},"deployPool(string,address,uint256,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_poolDeadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",params:{_feeRate:"Fee rate given to LP holders",_policyTokenName:"Name of the policy token",_poolDeadline:"Swapping deadline of the pool (normally the same as the token's deadline)",_stablecoin:"Address of the stable coin"},returns:{_0:"poolAddress The address of the pool just deployed"},notice:"Deploy a new pair (pool)"},"deposit(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of stablecoin (also the amount of policy tokens)",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the sable coin"},notice:"Deposit stablecoins and get policy tokens"},"emergencyPool()":{inputs:[],name:"emergencyPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"contract INaughtyFactory",name:"",type:"address"}],stateMutability:"view",type:"function"},"findAddressbyName(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"findAddressbyName",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_policyTokenName:'Name of the policy token (e.g. "AVAX_30_L_2103")'},returns:{_0:"policyTokenAddress Address of the policy token"},notice:"Find the token address by its name"},"findNamebyAddress(address)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"findNamebyAddress",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",params:{_policyTokenAddress:"Address of the policy token"},returns:{_0:"policyTokenName Name of the policy token"},notice:"Find the token name by its address"},"getAllTokens()":{inputs:[],name:"getAllTokens",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"decimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct PolicyCore.PolicyTokenInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",returns:{_0:"tokensInfo Token information list"},notice:"Get the information about all the tokens"},"getPolicyTokenInfo(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"getPolicyTokenInfo",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"decimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct PolicyCore.PolicyTokenInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function",params:{_policyTokenName:'Name of the policy token (e.g. "AVAX30L202103")'},returns:{_0:"policyTokenInfo PolicyToken detail information"},notice:"Find the token information by its name"},"getUserQuota(address,address)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"getUserQuota",outputs:[{internalType:"uint256",name:"_quota",type:"uint256"}],stateMutability:"view",type:"function",params:{_policyTokenAddress:"Address of the policy token",_user:"Address of the user to be checked"},returns:{_quota:"User's quota result"},notice:"Get a user's quota for a certain policy token"},"lottery()":{inputs:[],name:"lottery",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"naughtyRouter()":{inputs:[],name:"naughtyRouter",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"policyTokenAddressToName(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"policyTokenAddressToName",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"policyTokenInfoMapping(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"policyTokenInfoMapping",outputs:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"decimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},"priceGetter()":{inputs:[],name:"priceGetter",outputs:[{internalType:"contract IPriceGetter",name:"",type:"address"}],stateMutability:"view",type:"function"},"redeem(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"redeem",outputs:[],stateMutability:"nonpayable",type:"function",details:"Redeem happens before the deadline and is different from claim/settle",params:{_amount:"Amount of USDT (also the amount of policy tokens)",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stablecoin"},notice:"Burn policy tokens and redeem USDT"},"redeemAfterSettlement(string,address)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"}],name:"redeemAfterSettlement",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stablecoin"},notice:"Redeem policy tokens and get stablecoins by the user himeself"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setEmergencyPool(address)":{inputs:[{internalType:"address",name:"_emergencyPool",type:"address"}],name:"setEmergencyPool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_emergencyPool:"Address of the new emergencyPool"},notice:"Change the address of emergency pool"},"setLottery(address)":{inputs:[{internalType:"address",name:"_lotteryAddress",type:"address"}],name:"setLottery",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lotteryAddress:"Address of the new lottery"},notice:"Change the address of lottery"},"setNaughtyRouter(address)":{inputs:[{internalType:"address",name:"_router",type:"address"}],name:"setNaughtyRouter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_router:"Address of the new naughty router"},notice:"Change the address of naughty router"},"settleAllPolicyTokens(string,address,uint256,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_startIndex",type:"uint256"},{internalType:"uint256",name:"_stopIndex",type:"uint256"}],name:"settleAllPolicyTokens",outputs:[],stateMutability:"nonpayable",type:"function",details:"Take care of the gas cost and can use the _startIndex and _stopIndex to control the size",params:{_policyTokenName:"Name of policy token",_stablecoin:"Address of stablecoin",_startIndex:"Settlement start index",_stopIndex:"Settlement stop index"},notice:"Settle the policies when then insurance event do not happen         Funds are automatically distributed back to the depositors"},"settleFinalResult(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"settleFinalResult",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyTokenName:"Name of the policy token"},notice:"Get the final price from the PriceGetter contract"},"settleResult(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"settleResult",outputs:[{internalType:"uint256",name:"price",type:"uint256"},{internalType:"bool",name:"isHappened",type:"bool"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"currentDistributionIndex",type:"uint256"}],stateMutability:"view",type:"function"},"supportedStablecoin(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedStablecoin",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"whichStablecoin(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"whichStablecoin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/PriceGetter.sol:PriceGetter":{source:"contracts/naughty-price/PriceGetter.sol",name:"PriceGetter",title:"Price Getter",details:"The price from chainlink priceFeed has different decimals, be careful.",notice:"This is the contract for getting price feed from chainlink.         The contract will keep a record from tokenName => priceFeed Address.         Got the sponsorship and collaboration with Chainlink.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"LatestPriceGet(uint80,int256,uint256,uint256,uint80)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint80",name:"roundID",type:"uint80"},{indexed:!1,internalType:"int256",name:"price",type:"int256"},{indexed:!1,internalType:"uint256",name:"startedAt",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timeStamp",type:"uint256"},{indexed:!1,internalType:"uint80",name:"answeredInRound",type:"uint80"}],name:"LatestPriceGet",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PriceFeedChanged(string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"tokenName",type:"string"},{indexed:!1,internalType:"address",name:"feedAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"decimals",type:"uint256"}],name:"PriceFeedChanged",type:"event"}},methods:{"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_tokenName:"Address of the token"},returns:{_0:"price The latest price"},notice:"Get latest price of a token"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"priceFeedInfo(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"priceFeedInfo",outputs:[{internalType:"address",name:"priceFeedAddress",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setPriceFeed(string,address,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"address",name:"_feedAddress",type:"address"},{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_decimals:"Decimals of this price feed service",_feedAddress:"Price feed oracle address",_tokenName:"Address of the token"},notice:"Set a price feed oracle address for a token"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/naughty-price/interfaces/INPPolicyToken.sol:INPPolicyToken":{source:"contracts/naughty-price/interfaces/INPPolicyToken.sol",name:"INPPolicyToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/naughty-price/interfaces/INaughtyFactory.sol:INaughtyFactory":{source:"contracts/naughty-price/interfaces/INaughtyFactory.sol",name:"INaughtyFactory",methods:{"deployPolicyToken(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"deployPolicyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"deployPool(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"getPairAddress(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress1",type:"address"},{internalType:"address",name:"_tokenAddress2",type:"address"}],name:"getPairAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/interfaces/INaughtyPair.sol:INaughtyPair":{source:"contracts/naughty-price/interfaces/INaughtyPair.sol",name:"INaughtyPair",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"deadline()":{inputs:[],name:"deadline",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeRate()":{inputs:[],name:"feeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"}],stateMutability:"view",type:"function"},"initialize(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swap(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/naughty-price/interfaces/IPolicyCore.sol:IPolicyCore":{source:"contracts/naughty-price/interfaces/IPolicyCore.sol",name:"IPolicyCore",methods:{"addStablecoin(address)":{inputs:[{internalType:"address",name:"_newStablecoin",type:"address"}],name:"addStablecoin",outputs:[],stateMutability:"nonpayable",type:"function"},"claim(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"delegateDeposit(string,address,uint256,address)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"delegateDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},"deployPolicyToken(string,bool,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"bool",name:"_isHigher",type:"bool"},{internalType:"uint256",name:"_strikePrice",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_round",type:"uint256"},{internalType:"uint256",name:"_settleTimestamp",type:"uint256"}],name:"deployPolicyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"deployPool(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_poolDeadline",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"deposit(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},"findAddressbyName(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"findAddressbyName",outputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"}],stateMutability:"view",type:"function",notice:"Find the address by its name"},"findNamebyAddress(address)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"findNamebyAddress",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"Find the name by address"},"getAllTokens()":{inputs:[],name:"getAllTokens",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct IPolicyCore.PolicyTokenInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"getPolicyTokenInfo(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"getPolicyTokenInfo",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct IPolicyCore.PolicyTokenInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function",notice:"Get the policy token information"},"getUserQuota(address,address)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"getUserQuota",outputs:[{internalType:"uint256",name:"_quota",type:"uint256"}],stateMutability:"view",type:"function"},"redeem(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"redeem",outputs:[],stateMutability:"nonpayable",type:"function"},"setEmergencyPool(address)":{inputs:[{internalType:"address",name:"_emergencyPool",type:"address"}],name:"setEmergencyPool",outputs:[],stateMutability:"nonpayable",type:"function"},"setLottery(address)":{inputs:[{internalType:"address",name:"_lotteryAddress",type:"address"}],name:"setLottery",outputs:[],stateMutability:"nonpayable",type:"function"},"supportedStablecoin(address)":{inputs:[{internalType:"address",name:"_coinAddress",type:"address"}],name:"supportedStablecoin",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/interfaces/IPriceGetter.sol:IPriceGetter":{source:"contracts/naughty-price/interfaces/IPriceGetter.sol",name:"IPriceGetter",methods:{"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"_price",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getPriceFeedAddress(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getPriceFeedAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setPriceFeed(string,address)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"address",name:"_feedAddress",type:"address"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/staking/CoreStakingPool.sol:CoreStakingPool":{source:"contracts/staking/CoreStakingPool.sol",name:"CoreStakingPool",constructor:{inputs:[{internalType:"address",name:"_degisToken",type:"address"},{internalType:"address",name:"_poolToken",type:"address"},{internalType:"address",name:"_factory",type:"address"},{internalType:"uint256",name:"_startBlock",type:"uint256"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"},{internalType:"bool",name:"_isFlashPool",type:"bool"}],stateMutability:"nonpayable",type:"constructor"},events:{"Harvest(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Harvest",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockUntil",type:"uint256"}],name:"Stake",type:"event"},"Unstake(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstake",type:"event"}},methods:{"accDegisPerWeight()":{inputs:[],name:"accDegisPerWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerBlock()":{inputs:[],name:"degisPerBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getDepositsLength(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getDepositsLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUserDeposits(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserDeposits",outputs:[{components:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"lockedFrom",type:"uint256"},{internalType:"uint256",name:"lockedUntil",type:"uint256"}],internalType:"struct IPool.Deposit[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"harvest()":{inputs:[],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function"},"isFlashPool()":{inputs:[],name:"isFlashPool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastRewardBlock()":{inputs:[],name:"lastRewardBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"pendingRewards(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"poolToken()":{inputs:[],name:"poolToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"rewardToWeight(uint256,uint256)":{inputs:[{internalType:"uint256",name:"reward",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"rewardToWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"setDegisPerBlock(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerBlock",type:"uint256"}],name:"setDegisPerBlock",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_lockUntil",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"startBlock()":{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"timeToWeight(uint256)":{inputs:[{internalType:"uint256",name:"_length",type:"uint256"}],name:"timeToWeight",outputs:[{internalType:"uint256",name:"_weight",type:"uint256"}],stateMutability:"pure",type:"function",details:"1 year = 2e6      1 week = 1e6      2 weeks = 1e6 * ( 1 + 1 / 365)"},"totalWeight()":{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"unstake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_depositId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePool()":{inputs:[],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},"users(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"totalWeight",type:"uint256"},{internalType:"uint256",name:"rewardDebts",type:"uint256"}],stateMutability:"view",type:"function"},"weightToReward(uint256,uint256)":{inputs:[{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"weightToReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/staking/StakingPoolFactory.sol:StakingPoolFactory":{source:"contracts/staking/StakingPoolFactory.sol",name:"StakingPoolFactory",constructor:{inputs:[{internalType:"address",name:"_degisToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DegisPerBlockChanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"pool",type:"address"},{indexed:!1,internalType:"uint256",name:"degisPerBlock",type:"uint256"}],name:"DegisPerBlockChanged",type:"event",notice:"Change the degis reward for pool"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PoolRegistered(address,address,address,uint256,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"by",type:"address"},{indexed:!0,internalType:"address",name:"poolToken",type:"address"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"degisPerBlock",type:"uint256"},{indexed:!1,internalType:"bool",name:"isFlashPool",type:"bool"}],name:"PoolRegistered",type:"event",details:"Fired in createPool() and _registerPool()",params:{by:"who deploys a new pool",degisPerBlock:"pool weight",isFlashPool:"flag indicating if pool is a flash pool",poolAddress:"deployed pool instance address",poolToken:"pool token address"}}},methods:{"createPool(address,uint256,uint256,bool)":{inputs:[{internalType:"address",name:"poolToken",type:"address"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"degisPerBlock",type:"uint256"},{internalType:"bool",name:"isFlashPool",type:"bool"}],name:"createPool",outputs:[],stateMutability:"nonpayable",type:"function",details:"Creates a staking pool and registers it within the factory",params:{degisPerBlock:"weight of the pool to be created",isFlashPool:"Whether it is a flash pool",poolToken:"pool token address",startBlock:"init block to be used for the pool created"}},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPoolAddress(address)":{inputs:[{internalType:"address",name:"poolToken",type:"address"}],name:"getPoolAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPoolData(address)":{inputs:[{internalType:"address",name:"_poolToken",type:"address"}],name:"getPoolData",outputs:[{components:[{internalType:"address",name:"poolToken",type:"address"},{internalType:"address",name:"poolAddress",type:"address"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"degisPerBlock",type:"uint256"},{internalType:"bool",name:"isFlashPool",type:"bool"}],internalType:"struct StakingPoolFactory.PoolData",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"mintReward(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintReward",outputs:[],stateMutability:"nonpayable",type:"function",details:"With this function, we only need to add factory contract into minterList",params:{_amount:"Amount of degis tokens to mint",_to:"The address to mint tokens to"},notice:"Mint degis tokens as reward"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"poolExists(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolExists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"pools(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pools",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setDegisPerBlock(address,uint256)":{inputs:[{internalType:"address",name:"_pool",type:"address"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"}],name:"setDegisPerBlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisPerBlock:"Degis reward per block",_pool:"Address of the staking pool"},notice:"Set degis per block"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/staking/abstracts/BasePool.sol:BasePool":{source:"contracts/staking/abstracts/BasePool.sol",name:"BasePool",events:{"Harvest(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Harvest",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockUntil",type:"uint256"}],name:"Stake",type:"event"},"Unstake(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstake",type:"event"}},methods:{"accDegisPerWeight()":{inputs:[],name:"accDegisPerWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerBlock()":{inputs:[],name:"degisPerBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getDepositsLength(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getDepositsLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getUserDeposits(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserDeposits",outputs:[{components:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"lockedFrom",type:"uint256"},{internalType:"uint256",name:"lockedUntil",type:"uint256"}],internalType:"struct IPool.Deposit[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},"harvest()":{inputs:[],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function"},"isFlashPool()":{inputs:[],name:"isFlashPool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastRewardBlock()":{inputs:[],name:"lastRewardBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"pendingRewards(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"poolToken()":{inputs:[],name:"poolToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardToWeight(uint256,uint256)":{inputs:[{internalType:"uint256",name:"reward",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"rewardToWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"setDegisPerBlock(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerBlock",type:"uint256"}],name:"setDegisPerBlock",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_lockUntil",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"startBlock()":{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"timeToWeight(uint256)":{inputs:[{internalType:"uint256",name:"_length",type:"uint256"}],name:"timeToWeight",outputs:[{internalType:"uint256",name:"_weight",type:"uint256"}],stateMutability:"pure",type:"function",details:"1 year = 2e6      1 week = 1e6      2 weeks = 1e6 * ( 1 + 1 / 365)"},"totalWeight()":{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unstake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_depositId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePool()":{inputs:[],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},"users(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"totalWeight",type:"uint256"},{internalType:"uint256",name:"rewardDebts",type:"uint256"}],stateMutability:"view",type:"function"},"weightToReward(uint256,uint256)":{inputs:[{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"weightToReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/staking/interfaces/IPool.sol:IPool":{source:"contracts/staking/interfaces/IPool.sol",name:"IPool",title:"Illuvium Pool",author:"Pedro Bergamini, reviewed by Basil Gorin",notice:"An abstraction representing a pool, see IlluviumPoolBase for details",methods:{"accDegisPerWeight()":{inputs:[],name:"accDegisPerWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerBlock()":{inputs:[],name:"degisPerBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"isFlashPool()":{inputs:[],name:"isFlashPool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"pendingRewards(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"poolToken()":{inputs:[],name:"poolToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setDegisPerBlock(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerBlock",type:"uint256"}],name:"setDegisPerBlock",outputs:[],stateMutability:"nonpayable",type:"function"},"startBlock()":{inputs:[],name:"startBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalWeight()":{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/staking/interfaces/IStakingPoolFactory.sol:IStakingPoolFactory":{source:"contracts/staking/interfaces/IStakingPoolFactory.sol",name:"IStakingPoolFactory",methods:{"createPool(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_poolToken",type:"address"},{internalType:"uint256",name:"_startBlock",type:"uint256"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"}],name:"createPool",outputs:[],stateMutability:"nonpayable",type:"function"},"mintReward(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintReward",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/BuyerToken.sol:BuyerToken":{source:"contracts/tokens/BuyerToken.sol",name:"BuyerToken",title:"Buyer Token",details:"Need to set the correct minters and burners when reploying this contract.",notice:"Buyer tokens are distributed to buyers corresponding to the usd value they spend.         Users can deposit their buyer tokens into purchaseIncentiveVault.         Periodical reward will be given to the participants in purchaseIncentiveVault.         When distributing purchase incentive reward, the buyer tokens will be burned.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"BurnerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newBurner",type:"address"}],name:"BurnerAdded",type:"event"},"BurnerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBurner",type:"address"}],name:"BurnerRemoved",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newMinter",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldMinter",type:"address"}],name:"MinterRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burnBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn buyer tokens"},"burnerList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"burnerList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getMinterList()":{inputs:[],name:"getMinterList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBurner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"mintBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint buyer tokens"},"minterList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"minterList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/tokens/DegisToken.sol:DegisToken":{source:"contracts/tokens/DegisToken.sol",name:"DegisToken",title:"Degis Token",notice:"DegisToken inherits from ERC20 Permit which contains the basic ERC20 implementation.         DegisToken can use the permit function rather than approve + transferFrom.         DegisToken has an owner, a minterList and a burnerList.         When lauched on mainnet, the owner may be removed or tranferred to a multisig.         By default, the owner & the first minter will be the one that deploys the contract.         The minterList should contain FarmingPool and PurchaseIncentiveVault.         The burnerList should contain EmergencyPool.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"BurnerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newBurner",type:"address"}],name:"BurnerAdded",type:"event"},"BurnerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBurner",type:"address"}],name:"BurnerRemoved",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newMinter",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldMinter",type:"address"}],name:"MinterRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"CAP()":{inputs:[],name:"CAP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burnDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn degis tokens"},"burnerList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"burnerList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getMinterList()":{inputs:[],name:"getMinterList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBurner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"mintDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint degis tokens"},"minterList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"minterList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/tokens/interfaces/IBuyerToken.sol:IBuyerToken":{source:"contracts/tokens/interfaces/IBuyerToken.sol",name:"IBuyerToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burnBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn buyer tokens"},"mintBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint buyer tokens"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/tokens/interfaces/IDegisToken.sol:IDegisToken":{source:"contracts/tokens/interfaces/IDegisToken.sol",name:"IDegisToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"CAP()":{inputs:[],name:"CAP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burnDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn degis tokens"},"mintDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint degis tokens"},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/utils/Context.sol:Context":{source:"contracts/utils/Context.sol",name:"Context",details:"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts."},"contracts/utils/ERC20PermitWithMultipleMinters.sol:ERC20PermitWithMultipleMinters":{source:"contracts/utils/ERC20PermitWithMultipleMinters.sol",name:"ERC20PermitWithMultipleMinters",title:"ERC20 with Multiple Minters and Burners",notice:"This is contract used for ERC20 tokens that has multiple minters and burners.         It has basic implementations for ERC20 and also the owner control.         Even if the owner is renounced to zero address, the token can still be minted/burned.         DegisToken and BuyerToken are both this kind ERC20 token.",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"BurnerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newBurner",type:"address"}],name:"BurnerAdded",type:"event"},"BurnerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBurner",type:"address"}],name:"BurnerRemoved",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newMinter",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldMinter",type:"address"}],name:"MinterRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burnerList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"burnerList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getMinterList()":{inputs:[],name:"getMinterList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBurner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"minterList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"minterList",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/utils/Ownable.sol:Ownable":{source:"contracts/utils/Ownable.sol",name:"Ownable",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/utils/OwnableWithoutContext.sol:OwnableWithoutContext":{source:"contracts/utils/OwnableWithoutContext.sol",name:"OwnableWithoutContext",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/utils/ReentrancyGuard.sol:ReentrancyGuard":{source:"contracts/utils/ReentrancyGuard.sol",name:"ReentrancyGuard",details:"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"contracts/utils/interfaces/IERC20PermitWithMultipleMinters.sol:IERC20PermitWithMultipleMinters":{source:"contracts/utils/interfaces/IERC20PermitWithMultipleMinters.sol",name:"IERC20PermitWithMultipleMinters",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}}};new vo({el:"#app",router:new op({routes:[{path:"/",component:Fp,props:()=>({json:Np})},{path:"*",component:Cp,props:e=>({json:Np[e.path.slice(1)]})}]}),mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(lp)})},387:(e,t,n)=>{var a=n(268);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,n(346).Z)("0b345cf4",a,!1,{})},346:(e,t,n)=>{"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var r=t[i],s=r[0],o={id:e+":"+i,css:r[1],media:r[2],sourceMap:r[3]};a[s]?a[s].parts.push(o):n.push(a[s]={id:s,parts:[o]})}return n}n.d(t,{Z:()=>m});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},s=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,u=0,p=!1,d=function(){},l=null,y="data-vue-ssr-id",c="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,n,i){p=n,l=i||{};var s=a(e,t);return f(s),function(t){for(var n=[],i=0;i<s.length;i++){var o=s[i];(u=r[o.id]).refs--,n.push(u)}for(t?f(s=a(e,t)):s=[],i=0;i<n.length;i++){var u;if(0===(u=n[i]).refs){for(var p=0;p<u.parts.length;p++)u.parts[p]();delete r[u.id]}}}}function f(e){for(var t=0;t<e.length;t++){var n=e[t],a=r[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(b(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var s=[];for(i=0;i<n.parts.length;i++)s.push(b(n.parts[i]));r[n.id]={id:n.id,refs:1,parts:s}}}}function h(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function b(e){var t,n,a=document.querySelector("style["+y+'~="'+e.id+'"]');if(a){if(p)return d;a.parentNode.removeChild(a)}if(c){var i=u++;a=o||(o=h()),t=w.bind(null,a,i,!1),n=w.bind(null,a,i,!0)}else a=h(),t=g.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var v,T=(v=[],function(e,t){return v[e]=t,v.filter(Boolean).join("\n")});function w(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=T(t,i);else{var r=document.createTextNode(i),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(r,s[t]):e.appendChild(r)}}function g(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute(y,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(267)})();