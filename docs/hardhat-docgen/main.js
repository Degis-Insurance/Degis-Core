/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={268:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var a=n(81),i=n.n(a),r=n(645),s=n.n(r)()(i());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);"]),s.push([e.id,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""]);const o=s},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(s[u]=!0)}for(var d=0;d<e.length;d++){var p=[].concat(e[d]);a&&s[p[0]]||(void 0!==r&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=r),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),i&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=i):p[4]="".concat(i)),t.push(p))}},t}},81:e=>{"use strict";e.exports=function(e){return e[1]}},267:(e,t,n)=>{"use strict";var a=Object.freeze({});function i(e){return null==e}function r(e){return null!=e}function s(e){return!0===e}function o(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function u(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function l(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function y(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function c(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,null,2):String(e)}function m(e){var t=parseFloat(e);return isNaN(t)?e:t}function f(e,t){for(var n=Object.create(null),a=e.split(","),i=0;i<a.length;i++)n[a[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var h=f("slot,component",!0),b=f("key,ref,slot,slot-scope,is");function T(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var v=Object.prototype.hasOwnProperty;function w(e,t){return v.call(e,t)}function g(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _=/-(\w)/g,k=g((function(e){return e.replace(_,(function(e,t){return t?t.toUpperCase():""}))})),M=g((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),x=/\B([A-Z])/g,R=g((function(e){return e.replace(x,"-$1").toLowerCase()})),A=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function C(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function I(e,t){for(var n in t)e[n]=t[n];return e}function P(e){for(var t={},n=0;n<e.length;n++)e[n]&&I(t,e[n]);return t}function O(e,t,n){}var S=function(e,t,n){return!1},E=function(e){return e};function D(e,t){if(e===t)return!0;var n=u(e),a=u(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var i=Array.isArray(e),r=Array.isArray(t);if(i&&r)return e.length===t.length&&e.every((function(e,n){return D(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||r)return!1;var s=Object.keys(e),o=Object.keys(t);return s.length===o.length&&s.every((function(n){return D(e[n],t[n])}))}catch(e){return!1}}function L(e,t){for(var n=0;n<e.length;n++)if(D(e[n],t))return n;return-1}function N(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var B="data-server-rendered",$=["component","directive","filter"],U=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:S,isReservedAttr:S,isUnknownElement:S,getTagNamespace:O,parsePlatformTagName:E,mustUseProp:S,async:!0,_lifecycleHooks:U},j=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function V(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var q,W=new RegExp("[^"+j.source+".$_\\d]"),z="__proto__"in{},H="undefined"!=typeof window,X="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=X&&WXEnvironment.platform.toLowerCase(),Y=H&&window.navigator.userAgent.toLowerCase(),J=Y&&/msie|trident/.test(Y),Q=Y&&Y.indexOf("msie 9.0")>0,Z=Y&&Y.indexOf("edge/")>0,ee=(Y&&Y.indexOf("android"),Y&&/iphone|ipad|ipod|ios/.test(Y)||"ios"===K),te=(Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y),Y&&Y.match(/firefox\/(\d+)/)),ne={}.watch,ae=!1;if(H)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){ae=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var re=function(){return void 0===q&&(q=!H&&!X&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),q},se=H&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var ue,de="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);ue="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var pe=O,le=0,ye=function(){this.id=le++,this.subs=[]};ye.prototype.addSub=function(e){this.subs.push(e)},ye.prototype.removeSub=function(e){T(this.subs,e)},ye.prototype.depend=function(){ye.target&&ye.target.addDep(this)},ye.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},ye.target=null;var ce=[];function me(e){ce.push(e),ye.target=e}function fe(){ce.pop(),ye.target=ce[ce.length-1]}var he=function(e,t,n,a,i,r,s,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=i,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=s,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},be={child:{configurable:!0}};be.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,be);var Te=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function ve(e){return new he(void 0,void 0,void 0,String(e))}function we(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ge=Array.prototype,_e=Object.create(ge);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ge[e];V(_e,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var i,r=t.apply(this,n),s=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&s.observeArray(i),s.dep.notify(),r}))}));var ke=Object.getOwnPropertyNames(_e),Me=!0;function xe(e){Me=e}var Re=function(e){this.value=e,this.dep=new ye,this.vmCount=0,V(e,"__ob__",this),Array.isArray(e)?(z?function(e,t){e.__proto__=t}(e,_e):function(e,t,n){for(var a=0,i=n.length;a<i;a++){var r=n[a];V(e,r,t[r])}}(e,_e,ke),this.observeArray(e)):this.walk(e)};function Ae(e,t){var n;if(u(e)&&!(e instanceof he))return w(e,"__ob__")&&e.__ob__ instanceof Re?n=e.__ob__:Me&&!re()&&(Array.isArray(e)||p(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Re(e)),t&&n&&n.vmCount++,n}function Ce(e,t,n,a,i){var r=new ye,s=Object.getOwnPropertyDescriptor(e,t);if(!s||!1!==s.configurable){var o=s&&s.get,u=s&&s.set;o&&!u||2!==arguments.length||(n=e[t]);var d=!i&&Ae(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=o?o.call(e):n;return ye.target&&(r.depend(),d&&(d.dep.depend(),Array.isArray(t)&&Oe(t))),t},set:function(t){var a=o?o.call(e):n;t===a||t!=t&&a!=a||o&&!u||(u?u.call(e,t):n=t,d=!i&&Ae(t),r.notify())}})}}function Ie(e,t,n){if(Array.isArray(e)&&l(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(Ce(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function Pe(e,t){if(Array.isArray(e)&&l(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function Oe(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Oe(t)}Re.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Ce(e,t[n])},Re.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ae(e[t])};var Se=F.optionMergeStrategies;function Ee(e,t){if(!t)return e;for(var n,a,i,r=de?Reflect.ownKeys(t):Object.keys(t),s=0;s<r.length;s++)"__ob__"!==(n=r[s])&&(a=e[n],i=t[n],w(e,n)?a!==i&&p(a)&&p(i)&&Ee(a,i):Ie(e,n,i));return e}function De(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,i="function"==typeof e?e.call(n,n):e;return a?Ee(a,i):i}:t?e?function(){return Ee("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Le(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Ne(e,t,n,a){var i=Object.create(e||null);return t?I(i,t):i}Se.data=function(e,t,n){return n?De(e,t,n):t&&"function"!=typeof t?e:De(e,t)},U.forEach((function(e){Se[e]=Le})),$.forEach((function(e){Se[e+"s"]=Ne})),Se.watch=function(e,t,n,a){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var r in I(i,e),t){var s=i[r],o=t[r];s&&!Array.isArray(s)&&(s=[s]),i[r]=s?s.concat(o):Array.isArray(o)?o:[o]}return i},Se.props=Se.methods=Se.inject=Se.computed=function(e,t,n,a){if(!e)return t;var i=Object.create(null);return I(i,e),t&&I(i,t),i},Se.provide=De;var Be=function(e,t){return void 0===t?e:t};function $e(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,i,r={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(i=n[a])&&(r[k(i)]={type:null});else if(p(n))for(var s in n)i=n[s],r[k(s)]=p(i)?i:{type:i};e.props=r}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)a[n[i]]={from:n[i]};else if(p(n))for(var r in n){var s=n[r];a[r]=p(s)?I({from:r},s):{from:s}}}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=$e(e,t.extends,n)),t.mixins))for(var a=0,i=t.mixins.length;a<i;a++)e=$e(e,t.mixins[a],n);var r,s={};for(r in e)o(r);for(r in t)w(e,r)||o(r);function o(a){var i=Se[a]||Be;s[a]=i(e[a],t[a],n,a)}return s}function Ue(e,t,n,a){if("string"==typeof n){var i=e[t];if(w(i,n))return i[n];var r=k(n);if(w(i,r))return i[r];var s=M(r);return w(i,s)?i[s]:i[n]||i[r]||i[s]}}function Fe(e,t,n,a){var i=t[e],r=!w(n,e),s=n[e],o=qe(Boolean,i.type);if(o>-1)if(r&&!w(i,"default"))s=!1;else if(""===s||s===R(e)){var u=qe(String,i.type);(u<0||o<u)&&(s=!0)}if(void 0===s){s=function(e,t,n){if(w(t,"default")){var a=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:"function"==typeof a&&"Function"!==Ge(t.type)?a.call(e):a}}(a,i,e);var d=Me;xe(!0),Ae(s),xe(d)}return s}var je=/^\s*function (\w+)/;function Ge(e){var t=e&&e.toString().match(je);return t?t[1]:""}function Ve(e,t){return Ge(e)===Ge(t)}function qe(e,t){if(!Array.isArray(t))return Ve(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(Ve(t[n],e))return n;return-1}function We(e,t,n){me();try{if(t)for(var a=t;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var r=0;r<i.length;r++)try{if(!1===i[r].call(a,e,t,n))return}catch(e){He(e,a,"errorCaptured hook")}}He(e,t,n)}finally{fe()}}function ze(e,t,n,a,i){var r;try{(r=n?e.apply(t,n):e.call(t))&&!r._isVue&&y(r)&&!r._handled&&(r.catch((function(e){return We(e,a,i+" (Promise/async)")})),r._handled=!0)}catch(e){We(e,a,i)}return r}function He(e,t,n){if(F.errorHandler)try{return F.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Xe(t)}Xe(e)}function Xe(e,t,n){if(!H&&!X||"undefined"==typeof console)throw e;console.error(e)}var Ke,Ye=!1,Je=[],Qe=!1;function Ze(){Qe=!1;var e=Je.slice(0);Je.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var et=Promise.resolve();Ke=function(){et.then(Ze),ee&&setTimeout(O)},Ye=!0}else if(J||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ke="undefined"!=typeof setImmediate&&oe(setImmediate)?function(){setImmediate(Ze)}:function(){setTimeout(Ze,0)};else{var tt=1,nt=new MutationObserver(Ze),at=document.createTextNode(String(tt));nt.observe(at,{characterData:!0}),Ke=function(){tt=(tt+1)%2,at.data=String(tt)},Ye=!0}function it(e,t){var n;if(Je.push((function(){if(e)try{e.call(t)}catch(e){We(e,t,"nextTick")}else n&&n(t)})),Qe||(Qe=!0,Ke()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new ue;function st(e){ot(e,rt),rt.clear()}function ot(e,t){var n,a,i=Array.isArray(e);if(!(!i&&!u(e)||Object.isFrozen(e)||e instanceof he)){if(e.__ob__){var r=e.__ob__.dep.id;if(t.has(r))return;t.add(r)}if(i)for(n=e.length;n--;)ot(e[n],t);else for(n=(a=Object.keys(e)).length;n--;)ot(e[a[n]],t)}}var ut=g((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function dt(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return ze(a,null,arguments,t,"v-on handler");for(var i=a.slice(),r=0;r<i.length;r++)ze(i[r],null,e,t,"v-on handler")}return n.fns=e,n}function pt(e,t,n,a,r,o){var u,d,p,l;for(u in e)d=e[u],p=t[u],l=ut(u),i(d)||(i(p)?(i(d.fns)&&(d=e[u]=dt(d,o)),s(l.once)&&(d=e[u]=r(l.name,d,l.capture)),n(l.name,d,l.capture,l.passive,l.params)):d!==p&&(p.fns=d,e[u]=p));for(u in t)i(e[u])&&a((l=ut(u)).name,t[u],l.capture)}function lt(e,t,n){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function u(){n.apply(this,arguments),T(a.fns,u)}i(o)?a=dt([u]):r(o.fns)&&s(o.merged)?(a=o).fns.push(u):a=dt([o,u]),a.merged=!0,e[t]=a}function yt(e,t,n,a,i){if(r(t)){if(w(t,n))return e[n]=t[n],i||delete t[n],!0;if(w(t,a))return e[n]=t[a],i||delete t[a],!0}return!1}function ct(e){return o(e)?[ve(e)]:Array.isArray(e)?ft(e):void 0}function mt(e){return r(e)&&r(e.text)&&!1===e.isComment}function ft(e,t){var n,a,u,d,p=[];for(n=0;n<e.length;n++)i(a=e[n])||"boolean"==typeof a||(d=p[u=p.length-1],Array.isArray(a)?a.length>0&&(mt((a=ft(a,(t||"")+"_"+n))[0])&&mt(d)&&(p[u]=ve(d.text+a[0].text),a.shift()),p.push.apply(p,a)):o(a)?mt(d)?p[u]=ve(d.text+a):""!==a&&p.push(ve(a)):mt(a)&&mt(d)?p[u]=ve(d.text+a.text):(s(e._isVList)&&r(a.tag)&&i(a.key)&&r(t)&&(a.key="__vlist"+t+"_"+n+"__"),p.push(a)));return p}function ht(e,t){if(e){for(var n=Object.create(null),a=de?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var r=a[i];if("__ob__"!==r){for(var s=e[r].from,o=t;o;){if(o._provided&&w(o._provided,s)){n[r]=o._provided[s];break}o=o.$parent}if(!o&&"default"in e[r]){var u=e[r].default;n[r]="function"==typeof u?u.call(t):u}}}return n}}function bt(e,t){if(!e||!e.length)return{};for(var n={},a=0,i=e.length;a<i;a++){var r=e[a],s=r.data;if(s&&s.attrs&&s.attrs.slot&&delete s.attrs.slot,r.context!==t&&r.fnContext!==t||!s||null==s.slot)(n.default||(n.default=[])).push(r);else{var o=s.slot,u=n[o]||(n[o]=[]);"template"===r.tag?u.push.apply(u,r.children||[]):u.push(r)}}for(var d in n)n[d].every(Tt)&&delete n[d];return n}function Tt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function vt(e){return e.isComment&&e.asyncFactory}function wt(e,t,n){var i,r=Object.keys(t).length>0,s=e?!!e.$stable:!r,o=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&n&&n!==a&&o===n.$key&&!r&&!n.$hasNormal)return n;for(var u in i={},e)e[u]&&"$"!==u[0]&&(i[u]=gt(t,u,e[u]))}else i={};for(var d in t)d in i||(i[d]=_t(t,d));return e&&Object.isExtensible(e)&&(e._normalized=i),V(i,"$stable",s),V(i,"$key",o),V(i,"$hasNormal",r),i}function gt(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ct(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!vt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function _t(e,t){return function(){return e[t]}}function kt(e,t){var n,a,i,s,o;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),a=0,i=e.length;a<i;a++)n[a]=t(e[a],a);else if("number"==typeof e)for(n=new Array(e),a=0;a<e;a++)n[a]=t(a+1,a);else if(u(e))if(de&&e[Symbol.iterator]){n=[];for(var d=e[Symbol.iterator](),p=d.next();!p.done;)n.push(t(p.value,n.length)),p=d.next()}else for(s=Object.keys(e),n=new Array(s.length),a=0,i=s.length;a<i;a++)o=s[a],n[a]=t(e[o],o,a);return r(n)||(n=[]),n._isVList=!0,n}function Mt(e,t,n,a){var i,r=this.$scopedSlots[e];r?(n=n||{},a&&(n=I(I({},a),n)),i=r(n)||("function"==typeof t?t():t)):i=this.$slots[e]||("function"==typeof t?t():t);var s=n&&n.slot;return s?this.$createElement("template",{slot:s},i):i}function xt(e){return Ue(this.$options,"filters",e)||E}function Rt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function At(e,t,n,a,i){var r=F.keyCodes[t]||n;return i&&a&&!F.keyCodes[t]?Rt(i,a):r?Rt(r,e):a?R(a)!==t:void 0===e}function Ct(e,t,n,a,i){if(n&&u(n)){var r;Array.isArray(n)&&(n=P(n));var s=function(s){if("class"===s||"style"===s||b(s))r=e;else{var o=e.attrs&&e.attrs.type;r=a||F.mustUseProp(t,o,s)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=k(s),d=R(s);u in r||d in r||(r[s]=n[s],i&&((e.on||(e.on={}))["update:"+s]=function(e){n[s]=e}))};for(var o in n)s(o)}return e}function It(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||Ot(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function Pt(e,t,n){return Ot(e,"__once__"+t+(n?"_"+n:""),!0),e}function Ot(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&St(e[a],t+"_"+a,n);else St(e,t,n)}function St(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Et(e,t){if(t&&p(t)){var n=e.on=e.on?I({},e.on):{};for(var a in t){var i=n[a],r=t[a];n[a]=i?[].concat(i,r):r}}return e}function Dt(e,t,n,a){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var r=e[i];Array.isArray(r)?Dt(r,t,n):r&&(r.proxy&&(r.fn.proxy=!0),t[r.key]=r.fn)}return a&&(t.$key=a),t}function Lt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function Nt(e,t){return"string"==typeof e?t+e:e}function Bt(e){e._o=Pt,e._n=m,e._s=c,e._l=kt,e._t=Mt,e._q=D,e._i=L,e._m=It,e._f=xt,e._k=At,e._b=Ct,e._v=ve,e._e=Te,e._u=Dt,e._g=Et,e._d=Lt,e._p=Nt}function $t(e,t,n,i,r){var o,u=this,d=r.options;w(i,"_uid")?(o=Object.create(i))._original=i:(o=i,i=i._original);var p=s(d._compiled),l=!p;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||a,this.injections=ht(d.inject,i),this.slots=function(){return u.$slots||wt(e.scopedSlots,u.$slots=bt(n,i)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return wt(e.scopedSlots,this.slots())}}),p&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=wt(e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,t,n,a){var r=Wt(o,e,t,n,a,l);return r&&!Array.isArray(r)&&(r.fnScopeId=d._scopeId,r.fnContext=i),r}:this._c=function(e,t,n,a){return Wt(o,e,t,n,a,l)}}function Ut(e,t,n,a,i){var r=we(e);return r.fnContext=n,r.fnOptions=a,t.slot&&((r.data||(r.data={})).slot=t.slot),r}function Ft(e,t){for(var n in t)e[k(n)]=t[n]}Bt($t.prototype);var jt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;jt.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;return r(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns),new e.componentOptions.Ctor(n)}(e,tn)).$mount(t?e.elm:void 0,t)},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,i,r){var s=i.data.scopedSlots,o=e.$scopedSlots,u=!!(s&&!s.$stable||o!==a&&!o.$stable||s&&e.$scopedSlots.$key!==s.$key||!s&&e.$scopedSlots.$key),d=!!(r||e.$options._renderChildren||u);if(e.$options._parentVnode=i,e.$vnode=i,e._vnode&&(e._vnode.parent=i),e.$options._renderChildren=r,e.$attrs=i.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){xe(!1);for(var p=e._props,l=e.$options._propKeys||[],y=0;y<l.length;y++){var c=l[y],m=e.$options.props;p[c]=Fe(c,m,t,e)}xe(!0),e.$options.propsData=t}n=n||a;var f=e.$options._parentListeners;e.$options._parentListeners=n,en(e,n,f),d&&(e.$slots=bt(r,i.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,on(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,dn.push(t)):rn(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?sn(t,!0):t.$destroy())}},Gt=Object.keys(jt);function Vt(e,t,n,o,d){if(!i(e)){var p=n.$options._base;if(u(e)&&(e=p.extend(e)),"function"==typeof e){var l;if(i(e.cid)&&(e=function(e,t){if(s(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var n=Xt;if(n&&r(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&r(e.loadingComp))return e.loadingComp;if(n&&!r(e.owners)){var a=e.owners=[n],o=!0,d=null,p=null;n.$on("hook:destroyed",(function(){return T(a,n)}));var l=function(e){for(var t=0,n=a.length;t<n;t++)a[t].$forceUpdate();e&&(a.length=0,null!==d&&(clearTimeout(d),d=null),null!==p&&(clearTimeout(p),p=null))},c=N((function(n){e.resolved=Kt(n,t),o?a.length=0:l(!0)})),m=N((function(t){r(e.errorComp)&&(e.error=!0,l(!0))})),f=e(c,m);return u(f)&&(y(f)?i(e.resolved)&&f.then(c,m):y(f.component)&&(f.component.then(c,m),r(f.error)&&(e.errorComp=Kt(f.error,t)),r(f.loading)&&(e.loadingComp=Kt(f.loading,t),0===f.delay?e.loading=!0:d=setTimeout((function(){d=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,l(!1))}),f.delay||200)),r(f.timeout)&&(p=setTimeout((function(){p=null,i(e.resolved)&&m(null)}),f.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(l=e,p),void 0===e))return function(e,t,n,a,i){var r=Te();return r.asyncFactory=e,r.asyncMeta={data:t,context:n,children:a,tag:i},r}(l,t,n,o,d);t=t||{},Cn(e),r(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),s=i[a],o=t.model.callback;r(s)?(Array.isArray(s)?-1===s.indexOf(o):s!==o)&&(i[a]=[o].concat(s)):i[a]=o}(e.options,t);var c=function(e,t,n){var a=t.options.props;if(!i(a)){var s={},o=e.attrs,u=e.props;if(r(o)||r(u))for(var d in a){var p=R(d);yt(s,u,d,p,!0)||yt(s,o,d,p,!1)}return s}}(t,e);if(s(e.options.functional))return function(e,t,n,i,s){var o=e.options,u={},d=o.props;if(r(d))for(var p in d)u[p]=Fe(p,d,t||a);else r(n.attrs)&&Ft(u,n.attrs),r(n.props)&&Ft(u,n.props);var l=new $t(n,u,s,i,e),y=o.render.call(null,l._c,l);if(y instanceof he)return Ut(y,n,l.parent,o);if(Array.isArray(y)){for(var c=ct(y)||[],m=new Array(c.length),f=0;f<c.length;f++)m[f]=Ut(c[f],n,l.parent,o);return m}}(e,c,t,n,o);var m=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Gt.length;n++){var a=Gt[n],i=t[a],r=jt[a];i===r||i&&i._merged||(t[a]=i?qt(r,i):r)}}(t);var h=e.options.name||d;return new he("vue-component-"+e.cid+(h?"-"+h:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:c,listeners:m,tag:d,children:o},l)}}}function qt(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function Wt(e,t,n,a,i,d){return(Array.isArray(n)||o(n))&&(i=a,a=n,n=void 0),s(d)&&(i=2),function(e,t,n,a,i){if(r(n)&&r(n.__ob__))return Te();if(r(n)&&r(n.is)&&(t=n.is),!t)return Te();var s,o,d;(Array.isArray(a)&&"function"==typeof a[0]&&((n=n||{}).scopedSlots={default:a[0]},a.length=0),2===i?a=ct(a):1===i&&(a=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(a)),"string"==typeof t)?(o=e.$vnode&&e.$vnode.ns||F.getTagNamespace(t),s=F.isReservedTag(t)?new he(F.parsePlatformTagName(t),n,a,void 0,void 0,e):n&&n.pre||!r(d=Ue(e.$options,"components",t))?new he(t,n,a,void 0,void 0,e):Vt(d,n,e,a,t)):s=Vt(t,n,e,a);return Array.isArray(s)?s:r(s)?(r(o)&&zt(s,o),r(n)&&function(e){u(e.style)&&st(e.style),u(e.class)&&st(e.class)}(n),s):Te()}(e,t,n,a,i)}function zt(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),r(e.children))for(var a=0,o=e.children.length;a<o;a++){var u=e.children[a];r(u.tag)&&(i(u.ns)||s(n)&&"svg"!==u.tag)&&zt(u,t,n)}}var Ht,Xt=null;function Kt(e,t){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Yt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(r(n)&&(r(n.componentOptions)||vt(n)))return n}}function Jt(e,t){Ht.$on(e,t)}function Qt(e,t){Ht.$off(e,t)}function Zt(e,t){var n=Ht;return function a(){var i=t.apply(null,arguments);null!==i&&n.$off(e,a)}}function en(e,t,n){Ht=e,pt(t,n||{},Jt,Qt,Zt,e),Ht=void 0}var tn=null;function nn(e){var t=tn;return tn=e,function(){tn=t}}function an(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function rn(e,t){if(t){if(e._directInactive=!1,an(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)rn(e.$children[n]);on(e,"activated")}}function sn(e,t){if(!(t&&(e._directInactive=!0,an(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)sn(e.$children[n]);on(e,"deactivated")}}function on(e,t){me();var n=e.$options[t],a=t+" hook";if(n)for(var i=0,r=n.length;i<r;i++)ze(n[i],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),fe()}var un=[],dn=[],pn={},ln=!1,yn=!1,cn=0,mn=0,fn=Date.now;if(H&&!J){var hn=window.performance;hn&&"function"==typeof hn.now&&fn()>document.createEvent("Event").timeStamp&&(fn=function(){return hn.now()})}function bn(){var e,t;for(mn=fn(),yn=!0,un.sort((function(e,t){return e.id-t.id})),cn=0;cn<un.length;cn++)(e=un[cn]).before&&e.before(),t=e.id,pn[t]=null,e.run();var n=dn.slice(),a=un.slice();cn=un.length=dn.length=0,pn={},ln=yn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,rn(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&on(a,"updated")}}(a),se&&F.devtools&&se.emit("flush")}var Tn=0,vn=function(e,t,n,a,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++Tn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ue,this.newDepIds=new ue,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!W.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};vn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;We(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&st(e),fe(),this.cleanupDeps()}return e},vn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},vn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},vn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==pn[t]){if(pn[t]=!0,yn){for(var n=un.length-1;n>cn&&un[n].id>e.id;)n--;un.splice(n+1,0,e)}else un.push(e);ln||(ln=!0,it(bn))}}(this)},vn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';ze(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},vn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},vn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},vn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||T(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var wn={enumerable:!0,configurable:!0,get:O,set:O};function gn(e,t,n){wn.get=function(){return this[t][n]},wn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,wn)}var _n={lazy:!0};function kn(e,t,n){var a=!re();"function"==typeof n?(wn.get=a?Mn(t):xn(n),wn.set=O):(wn.get=n.get?a&&!1!==n.cache?Mn(t):xn(n.get):O,wn.set=n.set||O),Object.defineProperty(e,t,wn)}function Mn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ye.target&&t.depend(),t.value}}function xn(e){return function(){return e.call(this,this)}}function Rn(e,t,n,a){return p(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var An=0;function Cn(e){var t=e.options;if(e.super){var n=Cn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var i in n)n[i]!==a[i]&&(t||(t={}),t[i]=n[i]);return t}(e);a&&I(e.extendOptions,a),(t=e.options=$e(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function In(e){this._init(e)}function Pn(e){return e&&(e.Ctor.options.name||e.tag)}function On(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:(n=e,!("[object RegExp]"!==d.call(n))&&e.test(t));var n}function Sn(e,t){var n=e.cache,a=e.keys,i=e._vnode;for(var r in n){var s=n[r];if(s){var o=s.name;o&&!t(o)&&En(n,r,a,i)}}}function En(e,t,n,a){var i=e[t];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[t]=null,T(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=An++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var i=a.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=$e(Cn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&en(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,i=n&&n.context;e.$slots=bt(t._renderChildren,i),e.$scopedSlots=a,e._c=function(t,n,a,i){return Wt(e,t,n,a,i,!1)},e.$createElement=function(t,n,a,i){return Wt(e,t,n,a,i,!0)};var r=n&&n.data;Ce(e,"$attrs",r&&r.attrs||a,null,!0),Ce(e,"$listeners",t._parentListeners||a,null,!0)}(t),on(t,"beforeCreate"),function(e){var t=ht(e.$options.inject,e);t&&(xe(!1),Object.keys(t).forEach((function(n){Ce(e,n,t[n])})),xe(!0))}(t),function(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},i=e.$options._propKeys=[];e.$parent&&xe(!1);var r=function(r){i.push(r);var s=Fe(r,t,n,e);Ce(a,r,s),r in e||gn(e,"_props",r)};for(var s in t)r(s);xe(!0)}(e,t.props),t.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?O:A(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;p(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return We(e,t,"data()"),{}}finally{fe()}}(t,e):t||{})||(t={});for(var n=Object.keys(t),a=e.$options.props,i=(e.$options.methods,n.length);i--;){var r=n[i];a&&w(a,r)||G(r)||gn(e,"_data",r)}Ae(t,!0)}(e):Ae(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=re();for(var i in t){var r=t[i],s="function"==typeof r?r:r.get;a||(n[i]=new vn(e,s||O,O,_n)),i in e||kn(e,i,r)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var i=0;i<a.length;i++)Rn(e,n,a[i]);else Rn(e,n,a)}}(e,t.watch)}(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),on(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(In),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=Ie,e.prototype.$delete=Pe,e.prototype.$watch=function(e,t,n){var a=this;if(p(t))return Rn(a,e,t,n);(n=n||{}).user=!0;var i=new vn(a,e,t,n);if(n.immediate){var r='callback for immediate watcher "'+i.expression+'"';me(),ze(t,a,[i.value],a,r),fe()}return function(){i.teardown()}}}(In),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var i=0,r=e.length;i<r;i++)a.$on(e[i],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,i=e.length;a<i;a++)n.$off(e[a],t);return n}var r,s=n._events[e];if(!s)return n;if(!t)return n._events[e]=null,n;for(var o=s.length;o--;)if((r=s[o])===t||r.fn===t){s.splice(o,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?C(n):n;for(var a=C(arguments,1),i='event handler for "'+e+'"',r=0,s=n.length;r<s;r++)ze(n[r],t,a,t,i)}return t}}(In),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,i=n._vnode,r=nn(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),r(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){on(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||T(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),on(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(In),function(e){Bt(e.prototype),e.prototype.$nextTick=function(e){return it(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,i=n._parentVnode;i&&(t.$scopedSlots=wt(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{Xt=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){We(n,t,"render"),e=t._vnode}finally{Xt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=Te()),e.parent=i,e}}(In);var Dn=[String,RegExp,Array],Ln={name:"keep-alive",abstract:!0,props:{include:Dn,exclude:Dn,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,a=e.vnodeToCache,i=e.keyToCache;if(a){var r=a.tag,s=a.componentInstance,o=a.componentOptions;t[i]={name:Pn(o),tag:r,componentInstance:s},n.push(i),this.max&&n.length>parseInt(this.max)&&En(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)En(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Sn(e,(function(e){return On(t,e)}))})),this.$watch("exclude",(function(t){Sn(e,(function(e){return!On(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Yt(e),n=t&&t.componentOptions;if(n){var a=Pn(n),i=this.include,r=this.exclude;if(i&&(!a||!On(i,a))||r&&a&&On(r,a))return t;var s=this.cache,o=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;s[u]?(t.componentInstance=s[u].componentInstance,T(o,u),o.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}},Nn={KeepAlive:Ln};!function(e){var t={get:function(){return F}};Object.defineProperty(e,"config",t),e.util={warn:pe,extend:I,mergeOptions:$e,defineReactive:Ce},e.set=Ie,e.delete=Pe,e.nextTick=it,e.observable=function(e){return Ae(e),e},e.options=Object.create(null),$.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,Nn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=C(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=$e(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var r=e.name||n.options.name,s=function(e){this._init(e)};return(s.prototype=Object.create(n.prototype)).constructor=s,s.cid=t++,s.options=$e(n.options,e),s.super=n,s.options.props&&function(e){var t=e.options.props;for(var n in t)gn(e.prototype,"_props",n)}(s),s.options.computed&&function(e){var t=e.options.computed;for(var n in t)kn(e.prototype,n,t[n])}(s),s.extend=n.extend,s.mixin=n.mixin,s.use=n.use,$.forEach((function(e){s[e]=n[e]})),r&&(s.options.components[r]=s),s.superOptions=n.options,s.extendOptions=e,s.sealedOptions=I({},s.options),i[a]=s,s}}(e),function(e){$.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&p(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(In),Object.defineProperty(In.prototype,"$isServer",{get:re}),Object.defineProperty(In.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(In,"FunctionalRenderContext",{value:$t}),In.version="2.6.14";var Bn=f("style,class"),$n=f("input,textarea,option,select,progress"),Un=function(e,t,n){return"value"===n&&$n(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Fn=f("contenteditable,draggable,spellcheck"),jn=f("events,caret,typing,plaintext-only"),Gn=f("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Vn="http://www.w3.org/1999/xlink",qn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Wn=function(e){return qn(e)?e.slice(6,e.length):""},zn=function(e){return null==e||!1===e};function Hn(e,t){return{staticClass:Xn(e.staticClass,t.staticClass),class:r(e.class)?[e.class,t.class]:t.class}}function Xn(e,t){return e?t?e+" "+t:e:t||""}function Kn(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,i=e.length;a<i;a++)r(t=Kn(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Yn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jn=f("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Qn=f("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Zn=function(e){return Jn(e)||Qn(e)};function ea(e){return Qn(e)?"svg":"math"===e?"math":void 0}var ta=Object.create(null),na=f("text,number,password,search,email,tel,url");function aa(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var ia=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Yn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),ra={create:function(e,t){sa(t)},update:function(e,t){e.data.ref!==t.data.ref&&(sa(e,!0),sa(t))},destroy:function(e){sa(e,!0)}};function sa(e,t){var n=e.data.ref;if(r(n)){var a=e.context,i=e.componentInstance||e.elm,s=a.$refs;t?Array.isArray(s[n])?T(s[n],i):s[n]===i&&(s[n]=void 0):e.data.refInFor?Array.isArray(s[n])?s[n].indexOf(i)<0&&s[n].push(i):s[n]=[i]:s[n]=i}}var oa=new he("",{},[]),ua=["create","activate","update","remove","destroy"];function da(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&r(e.data)===r(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=r(n=e.data)&&r(n=n.attrs)&&n.type,i=r(n=t.data)&&r(n=n.attrs)&&n.type;return a===i||na(a)&&na(i)}(e,t)||s(e.isAsyncPlaceholder)&&i(t.asyncFactory.error))}function pa(e,t,n){var a,i,s={};for(a=t;a<=n;++a)r(i=e[a].key)&&(s[i]=a);return s}var la={create:ya,update:ya,destroy:function(e){ya(e,oa)}};function ya(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,i,r=e===oa,s=t===oa,o=ma(e.data.directives,e.context),u=ma(t.data.directives,t.context),d=[],p=[];for(n in u)a=o[n],i=u[n],a?(i.oldValue=a.value,i.oldArg=a.arg,ha(i,"update",t,e),i.def&&i.def.componentUpdated&&p.push(i)):(ha(i,"bind",t,e),i.def&&i.def.inserted&&d.push(i));if(d.length){var l=function(){for(var n=0;n<d.length;n++)ha(d[n],"inserted",t,e)};r?lt(t,"insert",l):l()}if(p.length&&lt(t,"postpatch",(function(){for(var n=0;n<p.length;n++)ha(p[n],"componentUpdated",t,e)})),!r)for(n in o)u[n]||ha(o[n],"unbind",e,e,s)}(e,t)}var ca=Object.create(null);function ma(e,t){var n,a,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=ca),i[fa(a)]=a,a.def=Ue(t.$options,"directives",a.name);return i}function fa(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ha(e,t,n,a,i){var r=e.def&&e.def[t];if(r)try{r(n.elm,e,n,a,i)}catch(a){We(a,n.context,"directive "+e.name+" "+t+" hook")}}var ba=[ra,la];function Ta(e,t){var n=t.componentOptions;if(!(r(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var a,s,o=t.elm,u=e.data.attrs||{},d=t.data.attrs||{};for(a in r(d.__ob__)&&(d=t.data.attrs=I({},d)),d)s=d[a],u[a]!==s&&va(o,a,s,t.data.pre);for(a in(J||Z)&&d.value!==u.value&&va(o,"value",d.value),u)i(d[a])&&(qn(a)?o.removeAttributeNS(Vn,Wn(a)):Fn(a)||o.removeAttribute(a))}}function va(e,t,n,a){a||e.tagName.indexOf("-")>-1?wa(e,t,n):Gn(t)?zn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Fn(t)?e.setAttribute(t,function(e,t){return zn(t)||"false"===t?"false":"contenteditable"===e&&jn(t)?t:"true"}(t,n)):qn(t)?zn(n)?e.removeAttributeNS(Vn,Wn(t)):e.setAttributeNS(Vn,t,n):wa(e,t,n)}function wa(e,t,n){if(zn(n))e.removeAttribute(t);else{if(J&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var ga={create:Ta,update:Ta};function _a(e,t){var n=t.elm,a=t.data,s=e.data;if(!(i(a.staticClass)&&i(a.class)&&(i(s)||i(s.staticClass)&&i(s.class)))){var o=function(e){for(var t=e.data,n=e,a=e;r(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=Hn(a.data,t));for(;r(n=n.parent);)n&&n.data&&(t=Hn(t,n.data));return i=t.staticClass,s=t.class,r(i)||r(s)?Xn(i,Kn(s)):"";var i,s}(t),u=n._transitionClasses;r(u)&&(o=Xn(o,Kn(u))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var ka,Ma,xa,Ra,Aa,Ca,Ia={create:_a,update:_a},Pa=/[\w).+\-_$\]]/;function Oa(e){var t,n,a,i,r,s=!1,o=!1,u=!1,d=!1,p=0,l=0,y=0,c=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),s)39===t&&92!==n&&(s=!1);else if(o)34===t&&92!==n&&(o=!1);else if(u)96===t&&92!==n&&(u=!1);else if(d)47===t&&92!==n&&(d=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||p||l||y){switch(t){case 34:o=!0;break;case 39:s=!0;break;case 96:u=!0;break;case 40:y++;break;case 41:y--;break;case 91:l++;break;case 93:l--;break;case 123:p++;break;case 125:p--}if(47===t){for(var m=a-1,f=void 0;m>=0&&" "===(f=e.charAt(m));m--);f&&Pa.test(f)||(d=!0)}}else void 0===i?(c=a+1,i=e.slice(0,a).trim()):h();function h(){(r||(r=[])).push(e.slice(c,a).trim()),c=a+1}if(void 0===i?i=e.slice(0,a).trim():0!==c&&h(),r)for(a=0;a<r.length;a++)i=Sa(i,r[a]);return i}function Sa(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var a=t.slice(0,n),i=t.slice(n+1);return'_f("'+a+'")('+e+(")"!==i?","+i:i)}function Ea(e,t){console.error("[Vue compiler]: "+e)}function Da(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function La(e,t,n,a,i){(e.props||(e.props=[])).push(qa({name:t,value:n,dynamic:i},a)),e.plain=!1}function Na(e,t,n,a,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(qa({name:t,value:n,dynamic:i},a)),e.plain=!1}function Ba(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(qa({name:t,value:n},a))}function $a(e,t,n,a,i,r,s,o){(e.directives||(e.directives=[])).push(qa({name:t,rawName:n,value:a,arg:i,isDynamicArg:r,modifiers:s},o)),e.plain=!1}function Ua(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function Fa(e,t,n,i,r,s,o,u){var d;(i=i||a).right?u?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete i.right):i.middle&&(u?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),i.capture&&(delete i.capture,t=Ua("!",t,u)),i.once&&(delete i.once,t=Ua("~",t,u)),i.passive&&(delete i.passive,t=Ua("&",t,u)),i.native?(delete i.native,d=e.nativeEvents||(e.nativeEvents={})):d=e.events||(e.events={});var p=qa({value:n.trim(),dynamic:u},o);i!==a&&(p.modifiers=i);var l=d[t];Array.isArray(l)?r?l.unshift(p):l.push(p):d[t]=l?r?[p,l]:[l,p]:p,e.plain=!1}function ja(e,t,n){var a=Ga(e,":"+t)||Ga(e,"v-bind:"+t);if(null!=a)return Oa(a);if(!1!==n){var i=Ga(e,t);if(null!=i)return JSON.stringify(i)}}function Ga(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var i=e.attrsList,r=0,s=i.length;r<s;r++)if(i[r].name===t){i.splice(r,1);break}return n&&delete e.attrsMap[t],a}function Va(e,t){for(var n=e.attrsList,a=0,i=n.length;a<i;a++){var r=n[a];if(t.test(r.name))return n.splice(a,1),r}}function qa(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function Wa(e,t,n){var a=n||{},i=a.number,r="$$v";a.trim&&(r="(typeof $$v === 'string'? $$v.trim(): $$v)"),i&&(r="_n("+r+")");var s=za(t,r);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+s+"}"}}function za(e,t){var n=function(e){if(e=e.trim(),ka=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<ka-1)return(Ra=e.lastIndexOf("."))>-1?{exp:e.slice(0,Ra),key:'"'+e.slice(Ra+1)+'"'}:{exp:e,key:null};for(Ma=e,Ra=Aa=Ca=0;!Xa();)Ka(xa=Ha())?Ja(xa):91===xa&&Ya(xa);return{exp:e.slice(0,Aa),key:e.slice(Aa+1,Ca)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function Ha(){return Ma.charCodeAt(++Ra)}function Xa(){return Ra>=ka}function Ka(e){return 34===e||39===e}function Ya(e){var t=1;for(Aa=Ra;!Xa();)if(Ka(e=Ha()))Ja(e);else if(91===e&&t++,93===e&&t--,0===t){Ca=Ra;break}}function Ja(e){for(var t=e;!Xa()&&(e=Ha())!==t;);}var Qa;function Za(e,t,n){var a=Qa;return function i(){var r=t.apply(null,arguments);null!==r&&ni(e,i,n,a)}}var ei=Ye&&!(te&&Number(te[1])<=53);function ti(e,t,n,a){if(ei){var i=mn,r=t;t=r._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return r.apply(this,arguments)}}Qa.addEventListener(e,t,ae?{capture:n,passive:a}:n)}function ni(e,t,n,a){(a||Qa).removeEventListener(e,t._wrapper||t,n)}function ai(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},a=e.data.on||{};Qa=t.elm,function(e){if(r(e.__r)){var t=J?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),pt(n,a,ti,ni,Za,t.context),Qa=void 0}}var ii,ri={create:ai,update:ai};function si(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,a,s=t.elm,o=e.data.domProps||{},u=t.data.domProps||{};for(n in r(u.__ob__)&&(u=t.data.domProps=I({},u)),o)n in u||(s[n]="");for(n in u){if(a=u[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),a===o[n])continue;1===s.childNodes.length&&s.removeChild(s.childNodes[0])}if("value"===n&&"PROGRESS"!==s.tagName){s._value=a;var d=i(a)?"":String(a);oi(s,d)&&(s.value=d)}else if("innerHTML"===n&&Qn(s.tagName)&&i(s.innerHTML)){(ii=ii||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var p=ii.firstChild;s.firstChild;)s.removeChild(s.firstChild);for(;p.firstChild;)s.appendChild(p.firstChild)}else if(a!==o[n])try{s[n]=a}catch(e){}}}}function oi(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(r(a)){if(a.number)return m(n)!==m(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var ui={create:si,update:si},di=g((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function pi(e){var t=li(e.style);return e.staticStyle?I(e.staticStyle,t):t}function li(e){return Array.isArray(e)?P(e):"string"==typeof e?di(e):e}var yi,ci=/^--/,mi=/\s*!important$/,fi=function(e,t,n){if(ci.test(t))e.style.setProperty(t,n);else if(mi.test(n))e.style.setProperty(R(t),n.replace(mi,""),"important");else{var a=bi(t);if(Array.isArray(n))for(var i=0,r=n.length;i<r;i++)e.style[a]=n[i];else e.style[a]=n}},hi=["Webkit","Moz","ms"],bi=g((function(e){if(yi=yi||document.createElement("div").style,"filter"!==(e=k(e))&&e in yi)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<hi.length;n++){var a=hi[n]+t;if(a in yi)return a}}));function Ti(e,t){var n=t.data,a=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(a.staticStyle)&&i(a.style))){var s,o,u=t.elm,d=a.staticStyle,p=a.normalizedStyle||a.style||{},l=d||p,y=li(t.data.style)||{};t.data.normalizedStyle=r(y.__ob__)?I({},y):y;var c=function(e,t){for(var n,a={},i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=pi(i.data))&&I(a,n);(n=pi(e.data))&&I(a,n);for(var r=e;r=r.parent;)r.data&&(n=pi(r.data))&&I(a,n);return a}(t);for(o in l)i(c[o])&&fi(u,o,"");for(o in c)(s=c[o])!==l[o]&&fi(u,o,null==s?"":s)}}var vi={create:Ti,update:Ti},wi=/\s+/;function gi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(wi).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function _i(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(wi).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function ki(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&I(t,Mi(e.name||"v")),I(t,e),t}return"string"==typeof e?Mi(e):void 0}}var Mi=g((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),xi=H&&!Q,Ri="transition",Ai="animation",Ci="transition",Ii="transitionend",Pi="animation",Oi="animationend";xi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ci="WebkitTransition",Ii="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Pi="WebkitAnimation",Oi="webkitAnimationEnd"));var Si=H?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ei(e){Si((function(){Si(e)}))}function Di(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),gi(e,t))}function Li(e,t){e._transitionClasses&&T(e._transitionClasses,t),_i(e,t)}function Ni(e,t,n){var a=$i(e,t),i=a.type,r=a.timeout,s=a.propCount;if(!i)return n();var o=i===Ri?Ii:Oi,u=0,d=function(){e.removeEventListener(o,p),n()},p=function(t){t.target===e&&++u>=s&&d()};setTimeout((function(){u<s&&d()}),r+1),e.addEventListener(o,p)}var Bi=/\b(transform|all)(,|$)/;function $i(e,t){var n,a=window.getComputedStyle(e),i=(a[Ci+"Delay"]||"").split(", "),r=(a[Ci+"Duration"]||"").split(", "),s=Ui(i,r),o=(a[Pi+"Delay"]||"").split(", "),u=(a[Pi+"Duration"]||"").split(", "),d=Ui(o,u),p=0,l=0;return t===Ri?s>0&&(n=Ri,p=s,l=r.length):t===Ai?d>0&&(n=Ai,p=d,l=u.length):l=(n=(p=Math.max(s,d))>0?s>d?Ri:Ai:null)?n===Ri?r.length:u.length:0,{type:n,timeout:p,propCount:l,hasTransform:n===Ri&&Bi.test(a[Ci+"Property"])}}function Ui(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Fi(t)+Fi(e[n])})))}function Fi(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function ji(e,t){var n=e.elm;r(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var a=ki(e.data.transition);if(!i(a)&&!r(n._enterCb)&&1===n.nodeType){for(var s=a.css,o=a.type,d=a.enterClass,p=a.enterToClass,l=a.enterActiveClass,y=a.appearClass,c=a.appearToClass,f=a.appearActiveClass,h=a.beforeEnter,b=a.enter,T=a.afterEnter,v=a.enterCancelled,w=a.beforeAppear,g=a.appear,_=a.afterAppear,k=a.appearCancelled,M=a.duration,x=tn,R=tn.$vnode;R&&R.parent;)x=R.context,R=R.parent;var A=!x._isMounted||!e.isRootInsert;if(!A||g||""===g){var C=A&&y?y:d,I=A&&f?f:l,P=A&&c?c:p,O=A&&w||h,S=A&&"function"==typeof g?g:b,E=A&&_||T,D=A&&k||v,L=m(u(M)?M.enter:M),B=!1!==s&&!Q,$=qi(S),U=n._enterCb=N((function(){B&&(Li(n,P),Li(n,I)),U.cancelled?(B&&Li(n,C),D&&D(n)):E&&E(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),S&&S(n,U)})),O&&O(n),B&&(Di(n,C),Di(n,I),Ei((function(){Li(n,C),U.cancelled||(Di(n,P),$||(Vi(L)?setTimeout(U,L):Ni(n,o,U)))}))),e.data.show&&(t&&t(),S&&S(n,U)),B||$||U()}}}function Gi(e,t){var n=e.elm;r(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var a=ki(e.data.transition);if(i(a)||1!==n.nodeType)return t();if(!r(n._leaveCb)){var s=a.css,o=a.type,d=a.leaveClass,p=a.leaveToClass,l=a.leaveActiveClass,y=a.beforeLeave,c=a.leave,f=a.afterLeave,h=a.leaveCancelled,b=a.delayLeave,T=a.duration,v=!1!==s&&!Q,w=qi(c),g=m(u(T)?T.leave:T),_=n._leaveCb=N((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v&&(Li(n,p),Li(n,l)),_.cancelled?(v&&Li(n,d),h&&h(n)):(t(),f&&f(n)),n._leaveCb=null}));b?b(k):k()}function k(){_.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),y&&y(n),v&&(Di(n,d),Di(n,l),Ei((function(){Li(n,d),_.cancelled||(Di(n,p),w||(Vi(g)?setTimeout(_,g):Ni(n,o,_)))}))),c&&c(n,_),v||w||_())}}function Vi(e){return"number"==typeof e&&!isNaN(e)}function qi(e){if(i(e))return!1;var t=e.fns;return r(t)?qi(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Wi(e,t){!0!==t.data.show&&ji(t)}var zi=function(e){var t,n,a={},u=e.modules,d=e.nodeOps;for(t=0;t<ua.length;++t)for(a[ua[t]]=[],n=0;n<u.length;++n)r(u[n][ua[t]])&&a[ua[t]].push(u[n][ua[t]]);function p(e){var t=d.parentNode(e);r(t)&&d.removeChild(t,e)}function l(e,t,n,i,o,u,p){if(r(e.elm)&&r(u)&&(e=u[p]=we(e)),e.isRootInsert=!o,!function(e,t,n,i){var o=e.data;if(r(o)){var u=r(e.componentInstance)&&o.keepAlive;if(r(o=o.hook)&&r(o=o.init)&&o(e,!1),r(e.componentInstance))return y(e,t),c(n,e.elm,i),s(u)&&function(e,t,n,i){for(var s,o=e;o.componentInstance;)if(r(s=(o=o.componentInstance._vnode).data)&&r(s=s.transition)){for(s=0;s<a.activate.length;++s)a.activate[s](oa,o);t.push(o);break}c(n,e.elm,i)}(e,t,n,i),!0}}(e,t,n,i)){var l=e.data,f=e.children,h=e.tag;r(h)?(e.elm=e.ns?d.createElementNS(e.ns,h):d.createElement(h,e),T(e),m(e,f,t),r(l)&&b(e,t),c(n,e.elm,i)):s(e.isComment)?(e.elm=d.createComment(e.text),c(n,e.elm,i)):(e.elm=d.createTextNode(e.text),c(n,e.elm,i))}}function y(e,t){r(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,h(e)?(b(e,t),T(e)):(sa(e),t.push(e))}function c(e,t,n){r(e)&&(r(n)?d.parentNode(n)===e&&d.insertBefore(e,t,n):d.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t))for(var a=0;a<t.length;++a)l(t[a],n,e.elm,null,!0,t,a);else o(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function h(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function b(e,n){for(var i=0;i<a.create.length;++i)a.create[i](oa,e);r(t=e.data.hook)&&(r(t.create)&&t.create(oa,e),r(t.insert)&&n.push(e))}function T(e){var t;if(r(t=e.fnScopeId))d.setStyleScope(e.elm,t);else for(var n=e;n;)r(t=n.context)&&r(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t),n=n.parent;r(t=tn)&&t!==e.context&&t!==e.fnContext&&r(t=t.$options._scopeId)&&d.setStyleScope(e.elm,t)}function v(e,t,n,a,i,r){for(;a<=i;++a)l(n[a],r,e,t,!1,n,a)}function w(e){var t,n,i=e.data;if(r(i))for(r(t=i.hook)&&r(t=t.destroy)&&t(e),t=0;t<a.destroy.length;++t)a.destroy[t](e);if(r(t=e.children))for(n=0;n<e.children.length;++n)w(e.children[n])}function g(e,t,n){for(;t<=n;++t){var a=e[t];r(a)&&(r(a.tag)?(_(a),w(a)):p(a.elm))}}function _(e,t){if(r(t)||r(e.data)){var n,i=a.remove.length+1;for(r(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&p(e)}return n.listeners=t,n}(e.elm,i),r(n=e.componentInstance)&&r(n=n._vnode)&&r(n.data)&&_(n,t),n=0;n<a.remove.length;++n)a.remove[n](e,t);r(n=e.data.hook)&&r(n=n.remove)?n(e,t):t()}else p(e.elm)}function k(e,t,n,a){for(var i=n;i<a;i++){var s=t[i];if(r(s)&&da(e,s))return i}}function M(e,t,n,o,u,p){if(e!==t){r(t.elm)&&r(o)&&(t=o[u]=we(t));var y=t.elm=e.elm;if(s(e.isAsyncPlaceholder))r(t.asyncFactory.resolved)?A(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,m=t.data;r(m)&&r(c=m.hook)&&r(c=c.prepatch)&&c(e,t);var f=e.children,b=t.children;if(r(m)&&h(t)){for(c=0;c<a.update.length;++c)a.update[c](e,t);r(c=m.hook)&&r(c=c.update)&&c(e,t)}i(t.text)?r(f)&&r(b)?f!==b&&function(e,t,n,a,s){for(var o,u,p,y=0,c=0,m=t.length-1,f=t[0],h=t[m],b=n.length-1,T=n[0],w=n[b],_=!s;y<=m&&c<=b;)i(f)?f=t[++y]:i(h)?h=t[--m]:da(f,T)?(M(f,T,a,n,c),f=t[++y],T=n[++c]):da(h,w)?(M(h,w,a,n,b),h=t[--m],w=n[--b]):da(f,w)?(M(f,w,a,n,b),_&&d.insertBefore(e,f.elm,d.nextSibling(h.elm)),f=t[++y],w=n[--b]):da(h,T)?(M(h,T,a,n,c),_&&d.insertBefore(e,h.elm,f.elm),h=t[--m],T=n[++c]):(i(o)&&(o=pa(t,y,m)),i(u=r(T.key)?o[T.key]:k(T,t,y,m))?l(T,a,e,f.elm,!1,n,c):da(p=t[u],T)?(M(p,T,a,n,c),t[u]=void 0,_&&d.insertBefore(e,p.elm,f.elm)):l(T,a,e,f.elm,!1,n,c),T=n[++c]);y>m?v(e,i(n[b+1])?null:n[b+1].elm,n,c,b,a):c>b&&g(t,y,m)}(y,f,b,n,p):r(b)?(r(e.text)&&d.setTextContent(y,""),v(y,null,b,0,b.length-1,n)):r(f)?g(f,0,f.length-1):r(e.text)&&d.setTextContent(y,""):e.text!==t.text&&d.setTextContent(y,t.text),r(m)&&r(c=m.hook)&&r(c=c.postpatch)&&c(e,t)}}}function x(e,t,n){if(s(n)&&r(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var R=f("attrs,class,staticClass,staticStyle,key");function A(e,t,n,a){var i,o=t.tag,u=t.data,d=t.children;if(a=a||u&&u.pre,t.elm=e,s(t.isComment)&&r(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(r(u)&&(r(i=u.hook)&&r(i=i.init)&&i(t,!0),r(i=t.componentInstance)))return y(t,n),!0;if(r(o)){if(r(d))if(e.hasChildNodes())if(r(i=u)&&r(i=i.domProps)&&r(i=i.innerHTML)){if(i!==e.innerHTML)return!1}else{for(var p=!0,l=e.firstChild,c=0;c<d.length;c++){if(!l||!A(l,d[c],n,a)){p=!1;break}l=l.nextSibling}if(!p||l)return!1}else m(t,d,n);if(r(u)){var f=!1;for(var h in u)if(!R(h)){f=!0,b(t,n);break}!f&&u.class&&st(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!i(t)){var u,p=!1,y=[];if(i(e))p=!0,l(t,y);else{var c=r(e.nodeType);if(!c&&da(e,t))M(e,t,y,null,null,o);else{if(c){if(1===e.nodeType&&e.hasAttribute(B)&&(e.removeAttribute(B),n=!0),s(n)&&A(e,t,y))return x(t,y,!0),e;u=e,e=new he(d.tagName(u).toLowerCase(),{},[],void 0,u)}var m=e.elm,f=d.parentNode(m);if(l(t,y,m._leaveCb?null:f,d.nextSibling(m)),r(t.parent))for(var b=t.parent,T=h(t);b;){for(var v=0;v<a.destroy.length;++v)a.destroy[v](b);if(b.elm=t.elm,T){for(var _=0;_<a.create.length;++_)a.create[_](oa,b);var k=b.data.hook.insert;if(k.merged)for(var R=1;R<k.fns.length;R++)k.fns[R]()}else sa(b);b=b.parent}r(f)?g([e],0,0):r(e.tag)&&w(e)}}return x(t,y,p),t.elm}r(e)&&w(e)}}({nodeOps:ia,modules:[ga,Ia,ri,ui,vi,H?{create:Wi,activate:Wi,remove:function(e,t){!0!==e.data.show?Gi(e,t):t()}}:{}].concat(ba)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&er(e,"input")}));var Hi={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?lt(n,"postpatch",(function(){Hi.componentUpdated(e,t,n)})):Xi(e,t,n.context),e._vOptions=[].map.call(e.options,Ji)):("textarea"===n.tag||na(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Qi),e.addEventListener("compositionend",Zi),e.addEventListener("change",Zi),Q&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Xi(e,t,n.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,Ji);i.some((function(e,t){return!D(e,a[t])}))&&(e.multiple?t.value.some((function(e){return Yi(e,i)})):t.value!==t.oldValue&&Yi(t.value,i))&&er(e,"change")}}};function Xi(e,t,n){Ki(e,t),(J||Z)&&setTimeout((function(){Ki(e,t)}),0)}function Ki(e,t,n){var a=t.value,i=e.multiple;if(!i||Array.isArray(a)){for(var r,s,o=0,u=e.options.length;o<u;o++)if(s=e.options[o],i)r=L(a,Ji(s))>-1,s.selected!==r&&(s.selected=r);else if(D(Ji(s),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));i||(e.selectedIndex=-1)}}function Yi(e,t){return t.every((function(t){return!D(t,e)}))}function Ji(e){return"_value"in e?e._value:e.value}function Qi(e){e.target.composing=!0}function Zi(e){e.target.composing&&(e.target.composing=!1,er(e.target,"input"))}function er(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function tr(e){return!e.componentInstance||e.data&&e.data.transition?e:tr(e.componentInstance._vnode)}var nr={bind:function(e,t,n){var a=t.value,i=(n=tr(n)).data&&n.data.transition,r=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(n.data.show=!0,ji(n,(function(){e.style.display=r}))):e.style.display=a?r:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=tr(n)).data&&n.data.transition?(n.data.show=!0,a?ji(n,(function(){e.style.display=e.__vOriginalDisplay})):Gi(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,i){i||(e.style.display=e.__vOriginalDisplay)}},ar={model:Hi,show:nr},ir={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function rr(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?rr(Yt(t.children)):e}function sr(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var i=n._parentListeners;for(var r in i)t[k(r)]=i[r];return t}function or(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ur=function(e){return e.tag||vt(e)},dr=function(e){return"show"===e.name},pr={name:"transition",props:ir,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ur)).length){var a=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var r=rr(i);if(!r)return i;if(this._leaving)return or(e,i);var s="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?s+"comment":s+r.tag:o(r.key)?0===String(r.key).indexOf(s)?r.key:s+r.key:r.key;var u=(r.data||(r.data={})).transition=sr(this),d=this._vnode,p=rr(d);if(r.data.directives&&r.data.directives.some(dr)&&(r.data.show=!0),p&&p.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(r,p)&&!vt(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var l=p.data.transition=I({},u);if("out-in"===a)return this._leaving=!0,lt(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),or(e,i);if("in-out"===a){if(vt(r))return d;var y,c=function(){y()};lt(u,"afterEnter",c),lt(u,"enterCancelled",c),lt(l,"delayLeave",(function(e){y=e}))}}return i}}},lr=I({tag:String,moveClass:String},ir);delete lr.mode;var yr={props:lr,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var i=nn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],r=this.children=[],s=sr(this),o=0;o<i.length;o++){var u=i[o];u.tag&&null!=u.key&&0!==String(u.key).indexOf("__vlist")&&(r.push(u),n[u.key]=u,(u.data||(u.data={})).transition=s)}if(a){for(var d=[],p=[],l=0;l<a.length;l++){var y=a[l];y.data.transition=s,y.data.pos=y.elm.getBoundingClientRect(),n[y.key]?d.push(y):p.push(y)}this.kept=e(t,null,d),this.removed=p}return e(t,null,r)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(cr),e.forEach(mr),e.forEach(fr),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Di(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Ii,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Ii,e),n._moveCb=null,Li(n,t))})}})))},methods:{hasMove:function(e,t){if(!xi)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){_i(n,e)})),gi(n,t),n.style.display="none",this.$el.appendChild(n);var a=$i(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}};function cr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function mr(e){e.data.newPos=e.elm.getBoundingClientRect()}function fr(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,i=t.top-n.top;if(a||i){e.data.moved=!0;var r=e.elm.style;r.transform=r.WebkitTransform="translate("+a+"px,"+i+"px)",r.transitionDuration="0s"}}var hr={Transition:pr,TransitionGroup:yr};In.config.mustUseProp=Un,In.config.isReservedTag=Zn,In.config.isReservedAttr=Bn,In.config.getTagNamespace=ea,In.config.isUnknownElement=function(e){if(!H)return!0;if(Zn(e))return!1;if(e=e.toLowerCase(),null!=ta[e])return ta[e];var t=document.createElement(e);return e.indexOf("-")>-1?ta[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:ta[e]=/HTMLUnknownElement/.test(t.toString())},I(In.options.directives,ar),I(In.options.components,hr),In.prototype.__patch__=H?zi:O,In.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=Te),on(e,"beforeMount"),a=function(){e._update(e._render(),n)},new vn(e,a,O,{before:function(){e._isMounted&&!e._isDestroyed&&on(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,on(e,"mounted")),e}(this,e=e&&H?aa(e):void 0,t)},H&&setTimeout((function(){F.devtools&&se&&se.emit("init",In)}),0);var br,Tr=/\{\{((?:.|\r?\n)+?)\}\}/g,vr=/[-.*+?^${}()|[\]\/\\]/g,wr=g((function(e){var t=e[0].replace(vr,"\\$&"),n=e[1].replace(vr,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),gr={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=Ga(e,"class");n&&(e.staticClass=JSON.stringify(n));var a=ja(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}},_r={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=Ga(e,"style");n&&(e.staticStyle=JSON.stringify(di(n)));var a=ja(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},kr=f("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),Mr=f("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),xr=f("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),Rr=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Ar=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Cr="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+j.source+"]*",Ir="((?:"+Cr+"\\:)?"+Cr+")",Pr=new RegExp("^<"+Ir),Or=/^\s*(\/?)>/,Sr=new RegExp("^<\\/"+Ir+"[^>]*>"),Er=/^<!DOCTYPE [^>]+>/i,Dr=/^<!\--/,Lr=/^<!\[/,Nr=f("script,style,textarea",!0),Br={},$r={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Ur=/&(?:lt|gt|quot|amp|#39);/g,Fr=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,jr=f("pre,textarea",!0),Gr=function(e,t){return e&&jr(e)&&"\n"===t[0]};function Vr(e,t){var n=t?Fr:Ur;return e.replace(n,(function(e){return $r[e]}))}var qr,Wr,zr,Hr,Xr,Kr,Yr,Jr,Qr=/^@|^v-on:/,Zr=/^v-|^@|^:|^#/,es=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,ts=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,ns=/^\(|\)$/g,as=/^\[.*\]$/,is=/:(.*)$/,rs=/^:|^\.|^v-bind:/,ss=/\.[^.\]]+(?=[^\]]*$)/g,os=/^v-slot(:|$)|^#/,us=/[\r\n]/,ds=/[ \f\t\r\n]+/g,ps=g((function(e){return(br=br||document.createElement("div")).innerHTML=e,br.textContent})),ls="_empty_";function ys(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:Ts(t),rawAttrsMap:{},parent:n,children:[]}}function cs(e,t){var n;!function(e){var t=ja(e,"key");t&&(e.key=t)}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=ja(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=Ga(e,"scope"),e.slotScope=t||Ga(e,"slot-scope")):(t=Ga(e,"slot-scope"))&&(e.slotScope=t);var n=ja(e,"slot");if(n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Na(e,"slot",n,function(e,t){return e.rawAttrsMap[":slot"]||e.rawAttrsMap["v-bind:slot"]||e.rawAttrsMap.slot}(e))),"template"===e.tag){var a=Va(e,os);if(a){var i=hs(a),r=i.name,s=i.dynamic;e.slotTarget=r,e.slotTargetDynamic=s,e.slotScope=a.value||ls}}else{var o=Va(e,os);if(o){var u=e.scopedSlots||(e.scopedSlots={}),d=hs(o),p=d.name,l=d.dynamic,y=u[p]=ys("template",[],e);y.slotTarget=p,y.slotTargetDynamic=l,y.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=y,!0})),y.slotScope=o.value||ls,e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=ja(n,"name")),function(e){var t;(t=ja(e,"is"))&&(e.component=t),null!=Ga(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<zr.length;a++)e=zr[a](e,t)||e;return function(e){var t,n,a,i,r,s,o,u,d=e.attrsList;for(t=0,n=d.length;t<n;t++)if(a=i=d[t].name,r=d[t].value,Zr.test(a))if(e.hasBindings=!0,(s=bs(a.replace(Zr,"")))&&(a=a.replace(ss,"")),rs.test(a))a=a.replace(rs,""),r=Oa(r),(u=as.test(a))&&(a=a.slice(1,-1)),s&&(s.prop&&!u&&"innerHtml"===(a=k(a))&&(a="innerHTML"),s.camel&&!u&&(a=k(a)),s.sync&&(o=za(r,"$event"),u?Fa(e,'"update:"+('+a+")",o,null,!1,0,d[t],!0):(Fa(e,"update:"+k(a),o,null,!1,0,d[t]),R(a)!==k(a)&&Fa(e,"update:"+R(a),o,null,!1,0,d[t])))),s&&s.prop||!e.component&&Yr(e.tag,e.attrsMap.type,a)?La(e,a,r,d[t],u):Na(e,a,r,d[t],u);else if(Qr.test(a))a=a.replace(Qr,""),(u=as.test(a))&&(a=a.slice(1,-1)),Fa(e,a,r,s,!1,0,d[t],u);else{var p=(a=a.replace(Zr,"")).match(is),l=p&&p[1];u=!1,l&&(a=a.slice(0,-(l.length+1)),as.test(l)&&(l=l.slice(1,-1),u=!0)),$a(e,a,i,r,l,u,s,d[t])}else Na(e,a,JSON.stringify(r),d[t]),!e.component&&"muted"===a&&Yr(e.tag,e.attrsMap.type,a)&&La(e,a,"true",d[t])}(e),e}function ms(e){var t;if(t=Ga(e,"v-for")){var n=function(e){var t=e.match(es);if(t){var n={};n.for=t[2].trim();var a=t[1].trim().replace(ns,""),i=a.match(ts);return i?(n.alias=a.replace(ts,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=a,n}}(t);n&&I(e,n)}}function fs(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function hs(e){var t=e.name.replace(os,"");return t||"#"!==e.name[0]&&(t="default"),as.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function bs(e){var t=e.match(ss);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function Ts(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var vs=/^xmlns:NS\d+/,ws=/^NS\d+:/;function gs(e){return ys(e.tag,e.attrsList.slice(),e.parent)}var _s,ks,Ms,xs=[gr,_r,{preTransformNode:function(e,t){if("input"===e.tag){var n,a=e.attrsMap;if(!a["v-model"])return;if((a[":type"]||a["v-bind:type"])&&(n=ja(e,"type")),a.type||n||!a["v-bind"]||(n="("+a["v-bind"]+").type"),n){var i=Ga(e,"v-if",!0),r=i?"&&("+i+")":"",s=null!=Ga(e,"v-else",!0),o=Ga(e,"v-else-if",!0),u=gs(e);ms(u),Ba(u,"type","checkbox"),cs(u,t),u.processed=!0,u.if="("+n+")==='checkbox'"+r,fs(u,{exp:u.if,block:u});var d=gs(e);Ga(d,"v-for",!0),Ba(d,"type","radio"),cs(d,t),fs(u,{exp:"("+n+")==='radio'"+r,block:d});var p=gs(e);return Ga(p,"v-for",!0),Ba(p,":type",n),cs(p,t),fs(u,{exp:i,block:p}),s?u.else=!0:o&&(u.elseif=o),u}}}}],Rs={model:function(e,t,n){var a=t.value,i=t.modifiers,r=e.tag,s=e.attrsMap.type;if(e.component)return Wa(e,a,i),!1;if("select"===r)!function(e,t,n){var a='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";Fa(e,"change",a=a+" "+za(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),null,!0)}(e,a,i);else if("input"===r&&"checkbox"===s)!function(e,t,n){var a=n&&n.number,i=ja(e,"value")||"null",r=ja(e,"true-value")||"true",s=ja(e,"false-value")||"false";La(e,"checked","Array.isArray("+t+")?_i("+t+","+i+")>-1"+("true"===r?":("+t+")":":_q("+t+","+r+")")),Fa(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+r+"):("+s+");if(Array.isArray($$a)){var $$v="+(a?"_n("+i+")":i)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+za(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+za(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+za(t,"$$c")+"}",null,!0)}(e,a,i);else if("input"===r&&"radio"===s)!function(e,t,n){var a=n&&n.number,i=ja(e,"value")||"null";La(e,"checked","_q("+t+","+(i=a?"_n("+i+")":i)+")"),Fa(e,"change",za(t,i),null,!0)}(e,a,i);else if("input"===r||"textarea"===r)!function(e,t,n){var a=e.attrsMap.type,i=n||{},r=i.lazy,s=i.number,o=i.trim,u=!r&&"range"!==a,d=r?"change":"range"===a?"__r":"input",p="$event.target.value";o&&(p="$event.target.value.trim()"),s&&(p="_n("+p+")");var l=za(t,p);u&&(l="if($event.target.composing)return;"+l),La(e,"value","("+t+")"),Fa(e,d,l,null,!0),(o||s)&&Fa(e,"blur","$forceUpdate()")}(e,a,i);else if(!F.isReservedTag(r))return Wa(e,a,i),!1;return!0},text:function(e,t){t.value&&La(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&La(e,"innerHTML","_s("+t.value+")",t)}},As={expectHTML:!0,modules:xs,directives:Rs,isPreTag:function(e){return"pre"===e},isUnaryTag:kr,mustUseProp:Un,canBeLeftOpenTag:Mr,isReservedTag:Zn,getTagNamespace:ea,staticKeys:(Ms=xs,Ms.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(","))},Cs=g((function(e){return f("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function Is(e,t){e&&(_s=Cs(t.staticKeys||""),ks=t.isReservedTag||S,Ps(e),Os(e,!1))}function Ps(e){if(e.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||h(e.tag)||!ks(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(_s))))}(e),1===e.type){if(!ks(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var a=e.children[t];Ps(a),a.static||(e.static=!1)}if(e.ifConditions)for(var i=1,r=e.ifConditions.length;i<r;i++){var s=e.ifConditions[i].block;Ps(s),s.static||(e.static=!1)}}}function Os(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,a=e.children.length;n<a;n++)Os(e.children[n],t||!!e.for);if(e.ifConditions)for(var i=1,r=e.ifConditions.length;i<r;i++)Os(e.ifConditions[i].block,t)}}var Ss=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Es=/\([^)]*?\);*$/,Ds=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,Ls={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Ns={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Bs=function(e){return"if("+e+")return null;"},$s={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Bs("$event.target !== $event.currentTarget"),ctrl:Bs("!$event.ctrlKey"),shift:Bs("!$event.shiftKey"),alt:Bs("!$event.altKey"),meta:Bs("!$event.metaKey"),left:Bs("'button' in $event && $event.button !== 0"),middle:Bs("'button' in $event && $event.button !== 1"),right:Bs("'button' in $event && $event.button !== 2")};function Us(e,t){var n=t?"nativeOn:":"on:",a="",i="";for(var r in e){var s=Fs(e[r]);e[r]&&e[r].dynamic?i+=r+","+s+",":a+='"'+r+'":'+s+","}return a="{"+a.slice(0,-1)+"}",i?n+"_d("+a+",["+i.slice(0,-1)+"])":n+a}function Fs(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return Fs(e)})).join(",")+"]";var t=Ds.test(e.value),n=Ss.test(e.value),a=Ds.test(e.value.replace(Es,""));if(e.modifiers){var i="",r="",s=[];for(var o in e.modifiers)if($s[o])r+=$s[o],Ls[o]&&s.push(o);else if("exact"===o){var u=e.modifiers;r+=Bs(["ctrl","shift","alt","meta"].filter((function(e){return!u[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else s.push(o);return s.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(js).join("&&")+")return null;"}(s)),r&&(i+=r),"function($event){"+i+(t?"return "+e.value+".apply(null, arguments)":n?"return ("+e.value+").apply(null, arguments)":a?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(a?"return "+e.value:e.value)+"}"}function js(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=Ls[e],a=Ns[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(a)+")"}var Gs={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:O},Vs=function(e){this.options=e,this.warn=e.warn||Ea,this.transforms=Da(e.modules,"transformCode"),this.dataGenFns=Da(e.modules,"genData"),this.directives=I(I({},Gs),e.directives);var t=e.isReservedTag||S;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function qs(e,t){var n=new Vs(t);return{render:"with(this){return "+(e?"script"===e.tag?"null":Ws(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function Ws(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return zs(e,t);if(e.once&&!e.onceProcessed)return Hs(e,t);if(e.for&&!e.forProcessed)return Ys(e,t);if(e.if&&!e.ifProcessed)return Xs(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=eo(e,t),i="_t("+n+(a?",function(){return "+a+"}":""),r=e.attrs||e.dynamicAttrs?ao((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:k(e.name),value:e.value,dynamic:e.dynamic}}))):null,s=e.attrsMap["v-bind"];return!r&&!s||a||(i+=",null"),r&&(i+=","+r),s&&(i+=(r?"":",null")+","+s),i+")"}(e,t);var n;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:eo(t,n,!0);return"_c("+e+","+Js(t,n)+(a?","+a:"")+")"}(e.component,e,t);else{var a;(!e.plain||e.pre&&t.maybeComponent(e))&&(a=Js(e,t));var i=e.inlineTemplate?null:eo(e,t,!0);n="_c('"+e.tag+"'"+(a?","+a:"")+(i?","+i:"")+")"}for(var r=0;r<t.transforms.length;r++)n=t.transforms[r](e,n);return n}return eo(e,t)||"void 0"}function zs(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+Ws(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function Hs(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Xs(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o("+Ws(e,t)+","+t.onceId+++","+n+")":Ws(e,t)}return zs(e,t)}function Xs(e,t,n,a){return e.ifProcessed=!0,Ks(e.ifConditions.slice(),t,n,a)}function Ks(e,t,n,a){if(!e.length)return a||"_e()";var i=e.shift();return i.exp?"("+i.exp+")?"+r(i.block)+":"+Ks(e,t,n,a):""+r(i.block);function r(e){return n?n(e,t):e.once?Hs(e,t):Ws(e,t)}}function Ys(e,t,n,a){var i=e.for,r=e.alias,s=e.iterator1?","+e.iterator1:"",o=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(a||"_l")+"(("+i+"),function("+r+s+o+"){return "+(n||Ws)(e,t)+"})"}function Js(e,t){var n="{",a=function(e,t){var n=e.directives;if(n){var a,i,r,s,o="directives:[",u=!1;for(a=0,i=n.length;a<i;a++){r=n[a],s=!0;var d=t.directives[r.name];d&&(s=!!d(e,r,t.warn)),s&&(u=!0,o+='{name:"'+r.name+'",rawName:"'+r.rawName+'"'+(r.value?",value:("+r.value+"),expression:"+JSON.stringify(r.value):"")+(r.arg?",arg:"+(r.isDynamicArg?r.arg:'"'+r.arg+'"'):"")+(r.modifiers?",modifiers:"+JSON.stringify(r.modifiers):"")+"},")}return u?o.slice(0,-1)+"]":void 0}}(e,t);a&&(n+=a+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:"+ao(e.attrs)+","),e.props&&(n+="domProps:"+ao(e.props)+","),e.events&&(n+=Us(e.events,!1)+","),e.nativeEvents&&(n+=Us(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Qs(n)})),i=!!e.if;if(!a)for(var r=e.parent;r;){if(r.slotScope&&r.slotScope!==ls||r.for){a=!0;break}r.if&&(i=!0),r=r.parent}var s=Object.keys(t).map((function(e){return Zs(t[e],n)})).join(",");return"scopedSlots:_u(["+s+"]"+(a?",null,true":"")+(!a&&i?",null,false,"+function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(s):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var r=function(e,t){var n=e.children[0];if(n&&1===n.type){var a=qs(n,t.options);return"inlineTemplate:{render:function(){"+a.render+"},staticRenderFns:["+a.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);r&&(n+=r+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+ao(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Qs(e){return 1===e.type&&("slot"===e.tag||e.children.some(Qs))}function Zs(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return Xs(e,t,Zs,"null");if(e.for&&!e.forProcessed)return Ys(e,t,Zs);var a=e.slotScope===ls?"":String(e.slotScope),i="function("+a+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(eo(e,t)||"undefined")+":undefined":eo(e,t)||"undefined":Ws(e,t))+"}",r=a?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+i+r+"}"}function eo(e,t,n,a,i){var r=e.children;if(r.length){var s=r[0];if(1===r.length&&s.for&&"template"!==s.tag&&"slot"!==s.tag){var o=n?t.maybeComponent(s)?",1":",0":"";return""+(a||Ws)(s,t)+o}var u=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var i=e[a];if(1===i.type){if(to(i)||i.ifConditions&&i.ifConditions.some((function(e){return to(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(r,t.maybeComponent):0,d=i||no;return"["+r.map((function(e){return d(e,t)})).join(",")+"]"+(u?","+u:"")}}function to(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function no(e,t){return 1===e.type?Ws(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):"_v("+(2===(n=e).type?n.expression:io(JSON.stringify(n.text)))+")";var n}function ao(e){for(var t="",n="",a=0;a<e.length;a++){var i=e[a],r=io(i.value);i.dynamic?n+=i.name+","+r+",":t+='"'+i.name+'":'+r+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function io(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function ro(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),O}}function so(e){var t=Object.create(null);return function(n,a,i){(a=I({},a)).warn,delete a.warn;var r=a.delimiters?String(a.delimiters)+n:n;if(t[r])return t[r];var s=e(n,a),o={},u=[];return o.render=ro(s.render,u),o.staticRenderFns=s.staticRenderFns.map((function(e){return ro(e,u)})),t[r]=o}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");var oo,uo,po=(oo=function(e,t){var n=function(e,t){qr=t.warn||Ea,Kr=t.isPreTag||S,Yr=t.mustUseProp||S,Jr=t.getTagNamespace||S,t.isReservedTag,zr=Da(t.modules,"transformNode"),Hr=Da(t.modules,"preTransformNode"),Xr=Da(t.modules,"postTransformNode"),Wr=t.delimiters;var n,a,i=[],r=!1!==t.preserveWhitespace,s=t.whitespace,o=!1,u=!1;function d(e){if(p(e),o||e.processed||(e=cs(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&fs(n,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)s=e,d=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children),d&&d.if&&fs(d,{exp:s.elseif,block:s});else{if(e.slotScope){var r=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[r]=e}a.children.push(e),e.parent=a}var s,d;e.children=e.children.filter((function(e){return!e.slotScope})),p(e),e.pre&&(o=!1),Kr(e.tag)&&(u=!1);for(var l=0;l<Xr.length;l++)Xr[l](e,t)}function p(e){if(!u)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,i=[],r=t.expectHTML,s=t.isUnaryTag||S,o=t.canBeLeftOpenTag||S,u=0;e;){if(n=e,a&&Nr(a)){var d=0,p=a.toLowerCase(),l=Br[p]||(Br[p]=new RegExp("([\\s\\S]*?)(</"+p+"[^>]*>)","i")),y=e.replace(l,(function(e,n,a){return d=a.length,Nr(p)||"noscript"===p||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Gr(p,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));u+=e.length-y.length,e=y,R(p,u-d,u)}else{var c=e.indexOf("<");if(0===c){if(Dr.test(e)){var m=e.indexOf("--\x3e");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m),u,u+m+3),k(m+3);continue}}if(Lr.test(e)){var f=e.indexOf("]>");if(f>=0){k(f+2);continue}}var h=e.match(Er);if(h){k(h[0].length);continue}var b=e.match(Sr);if(b){var T=u;k(b[0].length),R(b[1],T,u);continue}var v=M();if(v){x(v),Gr(v.tagName,e)&&k(1);continue}}var w=void 0,g=void 0,_=void 0;if(c>=0){for(g=e.slice(c);!(Sr.test(g)||Pr.test(g)||Dr.test(g)||Lr.test(g)||(_=g.indexOf("<",1))<0);)c+=_,g=e.slice(c);w=e.substring(0,c)}c<0&&(w=e),w&&k(w.length),t.chars&&w&&t.chars(w,u-w.length,u)}if(e===n){t.chars&&t.chars(e);break}}function k(t){u+=t,e=e.substring(t)}function M(){var t=e.match(Pr);if(t){var n,a,i={tagName:t[1],attrs:[],start:u};for(k(t[0].length);!(n=e.match(Or))&&(a=e.match(Ar)||e.match(Rr));)a.start=u,k(a[0].length),a.end=u,i.attrs.push(a);if(n)return i.unarySlash=n[1],k(n[0].length),i.end=u,i}}function x(e){var n=e.tagName,u=e.unarySlash;r&&("p"===a&&xr(n)&&R(a),o(n)&&a===n&&R(n));for(var d=s(n)||!!u,p=e.attrs.length,l=new Array(p),y=0;y<p;y++){var c=e.attrs[y],m=c[3]||c[4]||c[5]||"",f="a"===n&&"href"===c[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;l[y]={name:c[1],value:Vr(m,f)}}d||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:l,start:e.start,end:e.end}),a=n),t.start&&t.start(n,l,d,e.start,e.end)}function R(e,n,r){var s,o;if(null==n&&(n=u),null==r&&(r=u),e)for(o=e.toLowerCase(),s=i.length-1;s>=0&&i[s].lowerCasedTag!==o;s--);else s=0;if(s>=0){for(var d=i.length-1;d>=s;d--)t.end&&t.end(i[d].tag,n,r);i.length=s,a=s&&i[s-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,r):"p"===o&&(t.start&&t.start(e,[],!1,n,r),t.end&&t.end(e,n,r))}R()}(e,{warn:qr,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,r,s,p,l){var y=a&&a.ns||Jr(e);J&&"svg"===y&&(r=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];vs.test(a.name)||(a.name=a.name.replace(ws,""),t.push(a))}return t}(r));var c,m=ys(e,r,a);y&&(m.ns=y),"style"!==(c=m).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||re()||(m.forbidden=!0);for(var f=0;f<Hr.length;f++)m=Hr[f](m,t)||m;o||(function(e){null!=Ga(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(o=!0)),Kr(m.tag)&&(u=!0),o?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),i=0;i<n;i++)a[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(a[i].start=t[i].start,a[i].end=t[i].end);else e.pre||(e.plain=!0)}(m):m.processed||(ms(m),function(e){var t=Ga(e,"v-if");if(t)e.if=t,fs(e,{exp:t,block:e});else{null!=Ga(e,"v-else")&&(e.else=!0);var n=Ga(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=Ga(e,"v-once")&&(e.once=!0)}(m)),n||(n=m),s?d(m):(a=m,i.push(m))},end:function(e,t,n){var r=i[i.length-1];i.length-=1,a=i[i.length-1],d(r)},chars:function(e,t,n){if(a&&(!J||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var i,d,p,l=a.children;(e=u||e.trim()?"script"===(i=a).tag||"style"===i.tag?e:ps(e):l.length?s?"condense"===s&&us.test(e)?"":" ":r?" ":"":"")&&(u||"condense"!==s||(e=e.replace(ds," ")),!o&&" "!==e&&(d=function(e,t){var n=t?wr(t):Tr;if(n.test(e)){for(var a,i,r,s=[],o=[],u=n.lastIndex=0;a=n.exec(e);){(i=a.index)>u&&(o.push(r=e.slice(u,i)),s.push(JSON.stringify(r)));var d=Oa(a[1].trim());s.push("_s("+d+")"),o.push({"@binding":d}),u=i+a[0].length}return u<e.length&&(o.push(r=e.slice(u)),s.push(JSON.stringify(r))),{expression:s.join("+"),tokens:o}}}(e,Wr))?p={type:2,expression:d.expression,tokens:d.tokens,text:e}:" "===e&&l.length&&" "===l[l.length-1].text||(p={type:3,text:e}),p&&l.push(p))}},comment:function(e,t,n){if(a){var i={type:3,text:e,isComment:!0};a.children.push(i)}}}),n}(e.trim(),t);!1!==t.optimize&&Is(n,t);var a=qs(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),i=[],r=[];if(n)for(var s in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=I(Object.create(e.directives||null),n.directives)),n)"modules"!==s&&"directives"!==s&&(a[s]=n[s]);a.warn=function(e,t,n){(n?r:i).push(e)};var o=oo(t.trim(),a);return o.errors=i,o.tips=r,o}return{compile:t,compileToFunctions:so(t)}}),lo=po(As),yo=(lo.compile,lo.compileToFunctions);function co(e){return(uo=uo||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',uo.innerHTML.indexOf("&#10;")>0}var mo=!!H&&co(!1),fo=!!H&&co(!0),ho=g((function(e){var t=aa(e);return t&&t.innerHTML})),bo=In.prototype.$mount;In.prototype.$mount=function(e,t){if((e=e&&aa(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=ho(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){var i=yo(a,{outputSourceRange:!1,shouldDecodeNewlines:mo,shouldDecodeNewlinesForHref:fo,delimiters:n.delimiters,comments:n.comments},this),r=i.render,s=i.staticRenderFns;n.render=r,n.staticRenderFns=s}}return bo.call(this,e,t)},In.compile=yo;const To=In;function vo(e,t){for(var n in t)e[n]=t[n];return e}var wo=/[!'()*]/g,go=function(e){return"%"+e.charCodeAt(0).toString(16)},_o=/%2C/g,ko=function(e){return encodeURIComponent(e).replace(wo,go).replace(_o,",")};function Mo(e){try{return decodeURIComponent(e)}catch(e){}return e}var xo=function(e){return null==e||"object"==typeof e?e:String(e)};function Ro(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=Mo(n.shift()),i=n.length>0?Mo(n.join("=")):null;void 0===t[a]?t[a]=i:Array.isArray(t[a])?t[a].push(i):t[a]=[t[a],i]})),t):t}function Ao(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return ko(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(ko(t)):a.push(ko(t)+"="+ko(e)))})),a.join("&")}return ko(t)+"="+ko(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Co=/\/?$/;function Io(e,t,n,a){var i=a&&a.options.stringifyQuery,r=t.query||{};try{r=Po(r)}catch(e){}var s={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:r,params:t.params||{},fullPath:Eo(t,i),matched:e?So(e):[]};return n&&(s.redirectedFrom=Eo(n,i)),Object.freeze(s)}function Po(e){if(Array.isArray(e))return e.map(Po);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Po(e[n]);return t}return e}var Oo=Io(null,{path:"/"});function So(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Eo(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||Ao)(a)+i}function Do(e,t,n){return t===Oo?e===t:!!t&&(e.path&&t.path?e.path.replace(Co,"")===t.path.replace(Co,"")&&(n||e.hash===t.hash&&Lo(e.query,t.query)):!(!e.name||!t.name)&&e.name===t.name&&(n||e.hash===t.hash&&Lo(e.query,t.query)&&Lo(e.params,t.params)))}function Lo(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,i){var r=e[n];if(a[i]!==n)return!1;var s=t[n];return null==r||null==s?r===s:"object"==typeof r&&"object"==typeof s?Lo(r,s):String(r)===String(s)}))}function No(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var i=n.instances[a],r=n.enteredCbs[a];if(i&&r){delete n.enteredCbs[a];for(var s=0;s<r.length;s++)i._isBeingDestroyed||r[s](i)}}}}var Bo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,r=t.data;r.routerView=!0;for(var s=i.$createElement,o=n.name,u=i.$route,d=i._routerViewCache||(i._routerViewCache={}),p=0,l=!1;i&&i._routerRoot!==i;){var y=i.$vnode?i.$vnode.data:{};y.routerView&&p++,y.keepAlive&&i._directInactive&&i._inactive&&(l=!0),i=i.$parent}if(r.routerViewDepth=p,l){var c=d[o],m=c&&c.component;return m?(c.configProps&&$o(m,r,c.route,c.configProps),s(m,r,a)):s()}var f=u.matched[p],h=f&&f.components[o];if(!f||!h)return d[o]=null,s();d[o]={component:h},r.registerRouteInstance=function(e,t){var n=f.instances[o];(t&&n!==e||!t&&n===e)&&(f.instances[o]=t)},(r.hook||(r.hook={})).prepatch=function(e,t){f.instances[o]=t.componentInstance},r.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[o]&&(f.instances[o]=e.componentInstance),No(u)};var b=f.props&&f.props[o];return b&&(vo(d[o],{route:u,configProps:b}),$o(h,r,u,b)),s(h,r,a)}};function $o(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0}}(n,a);if(i){i=t.props=vo({},i);var r=t.attrs=t.attrs||{};for(var s in i)e.props&&s in e.props||(r[s]=i[s],delete i[s])}}function Uo(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var r=e.replace(/^\//,"").split("/"),s=0;s<r.length;s++){var o=r[s];".."===o?i.pop():"."!==o&&i.push(o)}return""!==i[0]&&i.unshift(""),i.join("/")}function Fo(e){return e.replace(/\/+/g,"/")}var jo=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Go=function e(t,n,a){return jo(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Zo(e,t)}(t,n):jo(t)?function(t,n,a){for(var i=[],r=0;r<t.length;r++)i.push(e(t[r],n,a).source);return Zo(new RegExp("(?:"+i.join("|")+")",eu(a)),n)}(t,n,a):function(e,t,n){return tu(Ho(e,n),t,n)}(t,n,a)},Vo=Ho,qo=Yo,Wo=tu,zo=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ho(e,t){for(var n,a=[],i=0,r=0,s="",o=t&&t.delimiter||"/";null!=(n=zo.exec(e));){var u=n[0],d=n[1],p=n.index;if(s+=e.slice(r,p),r=p+u.length,d)s+=d[1];else{var l=e[r],y=n[2],c=n[3],m=n[4],f=n[5],h=n[6],b=n[7];s&&(a.push(s),s="");var T=null!=y&&null!=l&&l!==y,v="+"===h||"*"===h,w="?"===h||"*"===h,g=n[2]||o,_=m||f;a.push({name:c||i++,prefix:y||"",delimiter:g,optional:w,repeat:v,partial:T,asterisk:!!b,pattern:_?Qo(_):b?".*":"[^"+Jo(g)+"]+?"})}}return r<e.length&&(s+=e.substr(r)),s&&a.push(s),a}function Xo(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Ko(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Yo(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",eu(t)));return function(t,a){for(var i="",r=t||{},s=(a||{}).pretty?Xo:encodeURIComponent,o=0;o<e.length;o++){var u=e[o];if("string"!=typeof u){var d,p=r[u.name];if(null==p){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(jo(p)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var l=0;l<p.length;l++){if(d=s(p[l]),!n[o].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===l?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?Ko(p):s(p),!n[o].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');i+=u.prefix+d}}else i+=u}return i}}function Jo(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Qo(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function Zo(e,t){return e.keys=t,e}function eu(e){return e&&e.sensitive?"":"i"}function tu(e,t,n){jo(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,r="",s=0;s<e.length;s++){var o=e[s];if("string"==typeof o)r+=Jo(o);else{var u=Jo(o.prefix),d="(?:"+o.pattern+")";t.push(o),o.repeat&&(d+="(?:"+u+d+")*"),r+=d=o.optional?o.partial?u+"("+d+")?":"(?:"+u+"("+d+"))?":u+"("+d+")"}}var p=Jo(n.delimiter||"/"),l=r.slice(-p.length)===p;return a||(r=(l?r.slice(0,-p.length):r)+"(?:"+p+"(?=$))?"),r+=i?"$":a&&l?"":"(?="+p+"|$)",Zo(new RegExp("^"+r,eu(n)),t)}Go.parse=Vo,Go.compile=function(e,t){return Yo(Ho(e,t),t)},Go.tokensToFunction=qo,Go.tokensToRegExp=Wo;var nu=Object.create(null);function au(e,t,n){t=t||{};try{var a=nu[e]||(nu[e]=Go.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function iu(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var r=(i=vo({},e)).params;return r&&"object"==typeof r&&(i.params=vo({},r)),i}if(!i.path&&i.params&&t){(i=vo({},i))._normalized=!0;var s=vo(vo({},t.params),i.params);if(t.name)i.name=t.name,i.params=s;else if(t.matched.length){var o=t.matched[t.matched.length-1].path;i.path=au(o,s,t.path)}return i}var u=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(i.path||""),d=t&&t.path||"/",p=u.path?Uo(u.path,d,n||i.append):d,l=function(e,t,n){void 0===t&&(t={});var a,i=n||Ro;try{a=i(e||"")}catch(e){a={}}for(var r in t){var s=t[r];a[r]=Array.isArray(s)?s.map(xo):xo(s)}return a}(u.query,i.query,a&&a.options.parseQuery),y=i.hash||u.hash;return y&&"#"!==y.charAt(0)&&(y="#"+y),{_normalized:!0,path:p,query:l,hash:y}}var ru,su=function(){},ou={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),r=i.location,s=i.route,o=i.href,u={},d=n.options.linkActiveClass,p=n.options.linkExactActiveClass,l=null==d?"router-link-active":d,y=null==p?"router-link-exact-active":p,c=null==this.activeClass?l:this.activeClass,m=null==this.exactActiveClass?y:this.exactActiveClass,f=s.redirectedFrom?Io(null,iu(s.redirectedFrom),null,n):s;u[m]=Do(a,f,this.exactPath),u[c]=this.exact||this.exactPath?u[m]:function(e,t){return 0===e.path.replace(Co,"/").indexOf(t.path.replace(Co,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,f);var h=u[m]?this.ariaCurrentValue:null,b=function(e){uu(e)&&(t.replace?n.replace(r,su):n.push(r,su))},T={click:uu};Array.isArray(this.event)?this.event.forEach((function(e){T[e]=b})):T[this.event]=b;var v={class:u},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:s,navigate:b,isActive:u[c],isExactActive:u[m]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?e():e("span",{},w)}if("a"===this.tag)v.on=T,v.attrs={href:o,"aria-current":h};else{var g=du(this.$slots.default);if(g){g.isStatic=!1;var _=g.data=vo({},g.data);for(var k in _.on=_.on||{},_.on){var M=_.on[k];k in T&&(_.on[k]=Array.isArray(M)?M:[M])}for(var x in T)x in _.on?_.on[x].push(T[x]):_.on[x]=b;var R=g.data.attrs=vo({},g.data.attrs);R.href=o,R["aria-current"]=h}else v.on=T}return e(this.tag,v,this.$slots.default)}};function uu(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function du(e){if(e)for(var t,n=0;n<e.length;n++){if("a"===(t=e[n]).tag)return t;if(t.children&&(t=du(t.children)))return t}}var pu="undefined"!=typeof window;function lu(e,t,n,a,i){var r=t||[],s=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){yu(r,s,o,e,i)}));for(var u=0,d=r.length;u<d;u++)"*"===r[u]&&(r.push(r.splice(u,1)[0]),d--,u--);return{pathList:r,pathMap:s,nameMap:o}}function yu(e,t,n,a,i,r){var s=a.path,o=a.name,u=a.pathToRegexpOptions||{},d=function(e,t,n){return n||(e=e.replace(/\/$/,"")),"/"===e[0]||null==t?e:Fo(t.path+"/"+e)}(s,i,u.strict);"boolean"==typeof a.caseSensitive&&(u.sensitive=a.caseSensitive);var p={path:d,regex:cu(d,u),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:o,parent:i,matchAs:r,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};if(a.children&&a.children.forEach((function(a){var i=r?Fo(r+"/"+a.path):void 0;yu(e,t,n,a,p,i)})),t[p.path]||(e.push(p.path),t[p.path]=p),void 0!==a.alias)for(var l=Array.isArray(a.alias)?a.alias:[a.alias],y=0;y<l.length;++y){var c={path:l[y],children:a.children};yu(e,t,n,c,i,p.path||"/")}o&&(n[o]||(n[o]=p))}function cu(e,t){return Go(e,[],t)}function mu(e,t){var n=lu(e),a=n.pathList,i=n.pathMap,r=n.nameMap;function s(e,n,s){var u=iu(e,n,!1,t),d=u.name;if(d){var p=r[d];if(!p)return o(null,u);var l=p.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof u.params&&(u.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in u.params)&&l.indexOf(y)>-1&&(u.params[y]=n.params[y]);return u.path=au(p.path,u.params),o(p,u,s)}if(u.path){u.params={};for(var c=0;c<a.length;c++){var m=a[c],f=i[m];if(fu(f.regex,u.path,u.params))return o(f,u,s)}}return o(null,u)}function o(e,n,a){return e&&e.redirect?function(e,n){var a=e.redirect,i="function"==typeof a?a(Io(e,n,null,t)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return o(null,n);var u=i,d=u.name,p=u.path,l=n.query,y=n.hash,c=n.params;if(l=u.hasOwnProperty("query")?u.query:l,y=u.hasOwnProperty("hash")?u.hash:y,c=u.hasOwnProperty("params")?u.params:c,d)return r[d],s({_normalized:!0,name:d,query:l,hash:y,params:c},void 0,n);if(p){var m=function(e,t){return Uo(e,t.parent?t.parent.path:"/",!0)}(p,e);return s({_normalized:!0,path:au(m,c),query:l,hash:y},void 0,n)}return o(null,n)}(e,a||n):e&&e.matchAs?function(e,t,n){var a=s({_normalized:!0,path:au(n,t.params)});if(a){var i=a.matched,r=i[i.length-1];return t.params=a.params,o(r,t)}return o(null,t)}(0,n,e.matchAs):Io(e,n,a,t)}return{match:s,addRoute:function(e,t){var n="object"!=typeof e?r[e]:void 0;lu([t||e],a,i,r,n),n&&n.alias.length&&lu(n.alias.map((function(e){return{path:e,children:[t]}})),a,i,r,n)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){lu(e,a,i,r)}}}function fu(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var i=1,r=a.length;i<r;++i){var s=e.keys[i-1];s&&(n[s.name||"pathMatch"]="string"==typeof a[i]?Mo(a[i]):a[i])}return!0}var hu=pu&&window.performance&&window.performance.now?window.performance:Date;function bu(){return hu.now().toFixed(3)}var Tu=bu();function vu(){return Tu}function wu(e){return Tu=e}var gu=Object.create(null);function _u(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=vo({},window.history.state);return n.key=vu(),window.history.replaceState(n,"",t),window.addEventListener("popstate",xu),function(){window.removeEventListener("popstate",xu)}}function ku(e,t,n,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var r=function(){var e=vu();if(e)return gu[e]}(),s=i.call(e,t,n,a?r:null);s&&("function"==typeof s.then?s.then((function(e){Pu(e,r)})).catch((function(e){})):Pu(s,r))}))}}function Mu(){var e=vu();e&&(gu[e]={x:window.pageXOffset,y:window.pageYOffset})}function xu(e){Mu(),e.state&&e.state.key&&wu(e.state.key)}function Ru(e){return Cu(e.x)||Cu(e.y)}function Au(e){return{x:Cu(e.x)?e.x:window.pageXOffset,y:Cu(e.y)?e.y:window.pageYOffset}}function Cu(e){return"number"==typeof e}var Iu=/^#\d/;function Pu(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=Iu.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var r=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(i,r={x:Cu((n=r).x)?n.x:0,y:Cu(n.y)?n.y:0})}else Ru(e)&&(t=Au(e))}else a&&Ru(e)&&(t=Au(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Ou,Su=pu&&(-1===(Ou=window.navigator.userAgent).indexOf("Android 2.")&&-1===Ou.indexOf("Android 4.0")||-1===Ou.indexOf("Mobile Safari")||-1!==Ou.indexOf("Chrome")||-1!==Ou.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState;function Eu(e,t){Mu();var n=window.history;try{if(t){var a=vo({},n.state);a.key=vu(),n.replaceState(a,"",e)}else n.pushState({key:wu(bu())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Du(e){Eu(e,!0)}function Lu(e,t,n){var a=function(i){i>=e.length?n():e[i]?t(e[i],(function(){a(i+1)})):a(i+1)};a(0)}var Nu={redirected:2,aborted:4,cancelled:8,duplicated:16};function Bu(e,t){return $u(e,t,Nu.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function $u(e,t,n,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=t,i.type=n,i}var Uu=["params","query","hash"];function Fu(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ju(e,t){return Fu(e)&&e._isRouter&&(null==t||e.type===t)}function Gu(e,t){return Vu(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Vu(e){return Array.prototype.concat.apply([],e)}var qu="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Wu(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var zu=function(e,t){this.router=e,this.base=function(e){if(!e)if(pu){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";return"/"!==e.charAt(0)&&(e="/"+e),e.replace(/\/$/,"")}(t),this.current=Oo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Hu(e,t,n,a){var i=Gu(e,(function(e,a,i,r){var s=function(e,t){return"function"!=typeof e&&(e=ru.extend(e)),e.options[t]}(e,t);if(s)return Array.isArray(s)?s.map((function(e){return n(e,a,i,r)})):n(s,a,i,r)}));return Vu(a?i.reverse():i)}function Xu(e,t){if(t)return function(){return e.apply(t,arguments)}}zu.prototype.listen=function(e){this.cb=e},zu.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},zu.prototype.onError=function(e){this.errorCbs.push(e)},zu.prototype.transitionTo=function(e,t,n){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var r=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),t&&t(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,r)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!i.ready&&(ju(e,Nu.redirected)&&r===Oo||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(e)}))))}))},zu.prototype.confirmTransition=function(e,t,n){var a=this,i=this.current;this.pending=e;var r,s,o=function(e){!ju(e)&&Fu(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,d=i.matched.length-1;if(Do(e,i)&&u===d&&e.matched[u]===i.matched[d])return this.ensureURL(),e.hash&&ku(this.router,i,e,!1),o(((s=$u(r=i,e,Nu.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",s));var p,l=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),y=l.updated,c=l.deactivated,m=l.activated,f=[].concat(function(e){return Hu(e,"beforeRouteLeave",Xu,!0)}(c),this.router.beforeHooks,function(e){return Hu(e,"beforeRouteUpdate",Xu)}(y),m.map((function(e){return e.beforeEnter})),(p=m,function(e,t,n){var a=!1,i=0,r=null;Gu(p,(function(e,t,s,o){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var u,d=Wu((function(t){var a;((a=t).__esModule||qu&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:ru.extend(t),s.components[o]=t,--i<=0&&n()})),p=Wu((function(e){var t="Failed to resolve async component "+o+": "+e;r||(r=Fu(e)?e:new Error(t),n(r))}));try{u=e(d,p)}catch(e){p(e)}if(u)if("function"==typeof u.then)u.then(d,p);else{var l=u.component;l&&"function"==typeof l.then&&l.then(d,p)}}})),a||n()})),h=function(t,n){if(a.pending!==e)return o(Bu(i,e));try{t(e,i,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return $u(e,t,Nu.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,e))):Fu(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(function(e,t){return $u(e,t,Nu.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Uu.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}(i,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};Lu(f,h,(function(){var n=function(e){return Hu(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,i,r){return e(a,i,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),r(e)}))}}(e,n,a)}))}(m);Lu(n.concat(a.router.resolveHooks),h,(function(){if(a.pending!==e)return o(Bu(i,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){No(e)}))}))}))},zu.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},zu.prototype.setupListeners=function(){},zu.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Oo,this.pending=null};var Ku=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Yu(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=Su&&n;a&&this.listeners.push(_u());var i=function(){var n=e.current,i=Yu(e.base);e.current===Oo&&i===e._startLocation||e.transitionTo(i,(function(e){a&&ku(t,e,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Eu(Fo(a.base+e.fullPath)),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Du(Fo(a.base+e.fullPath)),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Yu(this.base)!==this.current.fullPath){var t=Fo(this.base+this.current.fullPath);e?Eu(t):Du(t)}},t.prototype.getCurrentLocation=function(){return Yu(this.base)},t}(zu);function Yu(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(Fo(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Ju=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Yu(e);if(!/^\/#/.test(t))return window.location.replace(Fo(e+"/#"+t)),!0}(this.base)||Qu()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Su&&t;n&&this.listeners.push(_u());var a=function(){var t=e.current;Qu()&&e.transitionTo(Zu(),(function(a){n&&ku(e.router,a,t,!0),Su||nd(a.fullPath)}))},i=Su?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){td(e.fullPath),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){nd(e.fullPath),ku(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Zu()!==t&&(e?td(t):nd(t))},t.prototype.getCurrentLocation=function(){return Zu()},t}(zu);function Qu(){var e=Zu();return"/"===e.charAt(0)||(nd("/"+e),!1)}function Zu(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function ed(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function td(e){Su?Eu(ed(e)):window.location.hash=e}function nd(e){Su?Du(ed(e)):window.location.replace(ed(e))}var ad=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){ju(e,Nu.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(zu),id=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=mu(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Su&&!1!==e.fallback,this.fallback&&(t="hash"),pu||(t="abstract"),this.mode=t,t){case"history":this.history=new Ku(this,e.base);break;case"hash":this.history=new Ju(this,e.base,this.fallback);break;case"abstract":this.history=new ad(this,e.base)}},rd={currentRoute:{configurable:!0}};function sd(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}id.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},rd.currentRoute.get=function(){return this.history&&this.history.current},id.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Ku||n instanceof Ju){var a=function(e){n.setupListeners(),function(e){var a=n.current,i=t.options.scrollBehavior;Su&&i&&"fullPath"in e&&ku(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},id.prototype.beforeEach=function(e){return sd(this.beforeHooks,e)},id.prototype.beforeResolve=function(e){return sd(this.resolveHooks,e)},id.prototype.afterEach=function(e){return sd(this.afterHooks,e)},id.prototype.onReady=function(e,t){this.history.onReady(e,t)},id.prototype.onError=function(e){this.history.onError(e)},id.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},id.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},id.prototype.go=function(e){this.history.go(e)},id.prototype.back=function(){this.go(-1)},id.prototype.forward=function(){this.go(1)},id.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},id.prototype.resolve=function(e,t,n){var a=iu(e,t=t||this.history.current,n,this),i=this.match(a,t),r=i.redirectedFrom||i.fullPath,s=function(e,t,n){var a="hash"===n?"#"+t:t;return e?Fo(e+"/"+a):a}(this.history.base,r,this.mode);return{location:a,route:i,href:s,normalizedTo:a,resolved:i}},id.prototype.getRoutes=function(){return this.matcher.getRoutes()},id.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==Oo&&this.history.transitionTo(this.history.getCurrentLocation())},id.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Oo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(id.prototype,rd),id.install=function e(t){if(!e.installed||ru!==t){e.installed=!0,ru=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Bo),t.component("RouterLink",ou);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},id.version="3.5.3",id.isNavigationFailure=ju,id.NavigationFailureType=Nu,id.START_LOCATION=Oo,pu&&window.Vue&&window.Vue.use(id);const od=id;var ud=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};function dd(e,t,n,a,i,r,s,o){var u,d="function"==typeof e?e.options:e;if(t&&(d.render=t,d.staticRenderFns=n,d._compiled=!0),a&&(d.functional=!0),r&&(d._scopeId="data-v-"+r),s?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},d._ssrRegister=u):i&&(u=o?function(){i.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:i),u)if(d.functional){d._injectStyles=u;var p=d.render;d.render=function(e,t){return u.call(t),p(e,t)}}else{var l=d.beforeCreate;d.beforeCreate=l?[].concat(l,u):[u]}return{exports:e,options:d}}ud._withStripped=!0,n(387);var pd=dd({},ud,[],!1,null,null,null);pd.options.__file="node_modules/hardhat-docgen/src/App.vue";const ld=pd.exports;var yd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};yd._withStripped=!0;var cd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};cd._withStripped=!0;const md=JSON.parse('{"u2":"hardhat-docgen","cj":"https://github.com/ItsNickBarry/hardhat-docgen"}');var fd=dd({data:function(){return{repository:md.cj,name:md.u2}},methods:{openLink(e){window.open(e,"_blank")}}},cd,[],!1,null,null,null);fd.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";const hd=fd.exports;var bd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[n("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[e._v("\n    <- Go back\n  ")])],1)};bd._withStripped=!0;var Td=dd({},bd,[],!1,null,null,null);Td.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";const vd=Td.exports;var wd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};wd._withStripped=!0;var gd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,a){return n("li",{key:a},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+a))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};gd._withStripped=!0;var _d=dd({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},gd,[],!1,null,null,null);_d.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";const kd={components:{MemberSection:_d.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map((e=>({...e,desc:this.params[e.name]})))},inputSignature:function(){return`(${this.inputs.map((e=>e.type)).join(",")})`},outputs:function(){return(this.json.outputs||[]).map(((e,t)=>({...e,desc:this.returns[e.name||`_${t}`]})))},outputSignature:function(){return`(${this.outputs.map((e=>e.type)).join(",")})`}}};var Md=dd(kd,wd,[],!1,null,null,null);Md.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";const xd=Md.exports;var Rd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};Rd._withStripped=!0;var Ad=dd({components:{Member:xd},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},Rd,[],!1,null,null,null);Ad.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var Cd=dd({components:{Member:xd,MemberSet:Ad.exports,HeaderBar:vd,FooterBar:hd},props:{json:{type:Object,default:()=>new Object}}},yd,[],!1,null,null,null);Cd.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";const Id=Cd.exports;var Pd=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[n("Branch",{attrs:{json:e.trees,name:"Sources:"}}),e._v(" "),n("FooterBar",{staticClass:"mt-20"})],1)};Pd._withStripped=!0;var Od=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,a){return n("div",{key:a},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};Od._withStripped=!0;var Sd=dd({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},Od,[],!1,null,null,null);Sd.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var Ed=dd({components:{Branch:Sd.exports,FooterBar:hd},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.replace("/","//").split(/\/(?=[^\/])/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},Pd,[],!1,null,null,null);Ed.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";const Dd=Ed.exports;To.use(od);const Ld={"contracts/EmergencyPool.sol:EmergencyPool":{source:"contracts/EmergencyPool.sol",name:"EmergencyPool",title:"Emergency Pool",notice:"Emergency pool in degis will keep a reserve vault for emergency usage.         The asset comes from part of the product's income (currently 10%).         Users can also stake funds into this contract manually.         The owner has the right to withdraw funds from emergency pool and it would be passed to community governance.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Deposit(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"UseFund(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UseFund",type:"event"},"Withdraw(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"deposit(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount that the user want to stake",_tokenAddress:"Address of the ERC20 token"},notice:"Manually stake into the pool"},"emergencyWithdraw(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"The ownership need to be transferred to another contract in the future",params:{_amount:"The amount that the user want to unstake",_tokenAddress:"Address of the ERC20 token"},notice:"Withdraw the asset when emergency (only by the owner)"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"useFund(address,address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"useFund",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to use    ",_receiver:"Address of the receiver",_tokenAddress:"Address of the ERC20 token"},notice:"Use emergency pool fund"}}},"contracts/ILM/ILMToken.sol:ILMToken":{source:"contracts/ILM/ILMToken.sol",name:"ILMToken",constructor:{inputs:[{internalType:"address",name:"_ILM",type:"address"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"ILMContract()":{inputs:[],name:"ILMContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/ILM/NaughtyPriceILM.sol:NaughtyPriceILM":{source:"contracts/ILM/NaughtyPriceILM.sol",name:"NaughtyPriceILM",title:"Naughty Price Initial Liquidity Matching",notice:"Naughty Price timeline: 1 -- 14 -- 5         The first day of each round would be the time for liquidity matching         User           - Select the naughty token           - Provide stablecoins into this contract & Select your price choice           - Change the amountA and amountB of this pair         When reach deadline           - Final price of ILM = Initial price of naughty price pair = amountA/amountB",events:{"Claim(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"}],name:"Claim",type:"event"},"Deposit(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"policyToken",type:"address"},{indexed:!0,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"}],name:"Deposit",type:"event"},"EmergencyWithdraw(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event"},"Harvest(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"reward",type:"uint256"}],name:"Harvest",type:"event"},"ILMFinish(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"policyToken",type:"address"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"}],name:"ILMFinish",type:"event"},"ILMStart(address,address,uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"policyToken",type:"address"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"deadline",type:"uint256"},{indexed:!1,internalType:"address",name:"lptokenAddress",type:"address"}],name:"ILMStart",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Withdraw(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"policyToken",type:"address"},{indexed:!0,internalType:"address",name:"stablecoin",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"FEE_DENOMINATOR()":{inputs:[],name:"FEE_DENOMINATOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MAX_UINT256()":{inputs:[],name:"MAX_UINT256",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MINIMUM_AMOUNT()":{inputs:[],name:"MINIMUM_AMOUNT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"SCALE()":{inputs:[],name:"SCALE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approveStablecoin(address)":{inputs:[{internalType:"address",name:"_stablecoin",type:"address"}],name:"approveStablecoin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_stablecoin:"Stablecoin address"},notice:"Approve stablecoins for naughty price contracts"},"claim(address,address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",details:"You will get back some DEG (depending on how many users deposit after you)      The claim amount is determined by the LP Token balance of you (you can buy from others)      But the DEG reward would only be got once      Your LP token will be burnt and you can not join ILM farming pool again",params:{_amountAMin:"Minimum amount of policy token (slippage)",_amountBMin:"Minimum amount of stablecoin (slippage)",_policyToken:"Policy token address",_stablecoin:"Stablecoin address"},notice:"Claim liquidity back"},"degis()":{inputs:[],name:"degis",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"deposit(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amountA",type:"uint256"},{internalType:"uint256",name:"_amountB",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Deposit only check the pair status not the deadline      There may be a zero ILM and we still need to deposit some asset to make it start      Anyone wants to enter ILM need to pay some DEG as entrance fee      The ratio is 100:1(usd:deg) and your fee is distributed to the users prior to you",params:{_amountA:"Amount of policy token (virtual)",_amountB:"Amount of stablecoin (virtual)",_policyToken:"Policy token address",_stablecoin:"Stablecoin address"},notice:"Deposit stablecoin and choose the price"},"emergencyPool()":{inputs:[],name:"emergencyPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"emergencyRestart(address)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"}],name:"emergencyRestart",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Policy token address to be restarted"},notice:"Emergency restart ILM"},"emergencyStop(address)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"}],name:"emergencyStop",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Policy token address to be stopped"},notice:"Emergency stop ILM"},"emergencyWithdraw(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Token amount",_token:"Token address"},notice:"Emergency withdraw a certain token"},"endPrice(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"endPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"finishILM(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"uint256",name:"_deadlineForSwap",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"finishILM",outputs:[],stateMutability:"nonpayable",type:"function",details:"The swap pool for the protection token will be deployed with inital liquidity\\      The amount of initial liquidity will be the total amount of the pair      Can be called by any address",params:{_deadlineForSwap:"Pool deadline",_feeRate:"Fee rate of the swap pool",_policyToken:"Policy token address"},notice:"Finish a round of ILM"},"getPairTotalAmount(address)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"}],name:"getPairTotalAmount",outputs:[{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function",params:{_policyToken:"Policy token address"},returns:{totalAmount:"Total amount of a pair"},notice:"Get the total amount of a pair"},"getPrice(address)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"}],name:"getPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Price has a scale of 1e12",params:{_policyToken:"Policy token address"},returns:{_0:"price Price of the token pair"},notice:"Get the current price"},"getUserDeposit(address,address)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_policyToken",type:"address"}],name:"getUserDeposit",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"view",type:"function",params:{_policyToken:"Policy token address",_user:"User address"},notice:"Get the amount of user's deposit"},"initialize(address,address,address,address)":{inputs:[{internalType:"address",name:"_degis",type:"address"},{internalType:"address",name:"_policyCore",type:"address"},{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_emergencyPool",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"Called only when deploying proxy contract",params:{_degis:"Degis token address",_emergencyPool:"EmergencyPool contract address",_policyCore:"PolicyCore contract address",_router:"NaughtyRouter contract address"},notice:"Initialze function for proxy"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pairs(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pairs",outputs:[{internalType:"enum NaughtyPriceILM.Status",name:"status",type:"uint8"},{internalType:"address",name:"lptoken",type:"address"},{internalType:"uint256",name:"ILMDeadline",type:"uint256"},{internalType:"address",name:"stablecoin",type:"address"},{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"address",name:"naughtyPairAddress",type:"address"},{internalType:"uint256",name:"degisAmount",type:"uint256"},{internalType:"uint256",name:"accDegisPerShare",type:"uint256"}],stateMutability:"view",type:"function"},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"startILM(address,address,uint256)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_ILMDeadline",type:"uint256"}],name:"startILM",outputs:[],stateMutability:"nonpayable",type:"function",details:"A new lp token will be deployed when starting a new ILM round      It will have a special farming reward pool",params:{_ILMDeadline:"Deadline of ILM period",_policyToken:"Policy token address",_stablecoin:"Stablecoin address"},notice:"Start a new ILM round"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"users(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"degisDebt",type:"uint256"}],stateMutability:"view",type:"function"},"withdraw(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amountA",type:"uint256"},{internalType:"uint256",name:"_amountB",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only checks the status not the deadline",params:{_amountA:"Amount of policy token (virtual)",_amountB:"Amount of stablecoin (virtual)",_policyToken:"Policy token address",_stablecoin:"Stablecoin address"},notice:"Withdraw stablecoins"},"withdrawAll(address,address)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"}],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Policy token address",_stablecoin:"Stablecoin address"},notice:"Withdraw all stablecoins of a certain policy token"}}},"contracts/chainlinkMock/PriceFeedMock.sol:PriceFeedMock":{source:"contracts/chainlinkMock/PriceFeedMock.sol",name:"PriceFeedMock",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"LatestPriceGet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"roundID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"LatestPriceGet",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PriceFeedChanged(string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"tokenName",type:"string"},{indexed:!1,internalType:"address",name:"feedAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"decimals",type:"uint256"}],name:"PriceFeedChanged",type:"event"}},methods:{"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_tokenName:"Address of the token"},returns:{_0:"price The latest price"},notice:"Get latest price of a token"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"priceFeedInfo(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"priceFeedInfo",outputs:[{internalType:"address",name:"priceFeedAddress",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"result()":{inputs:[],name:"result",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"roundId()":{inputs:[],name:"roundId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setResult(uint256)":{inputs:[{internalType:"uint256",name:"_result",type:"uint256"}],name:"setResult",outputs:[],stateMutability:"nonpayable",type:"function",details:"For test, you can set the result you want"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/chainlinkMock/VRFMock.sol:VRFMock":{source:"contracts/chainlinkMock/VRFMock.sol",name:"VRFMock",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DegisLottery()":{inputs:[],name:"DegisLottery",outputs:[{internalType:"contract IDegisLottery",name:"",type:"address"}],stateMutability:"view",type:"function"},"latestLotteryId()":{inputs:[],name:"latestLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"randomResult()":{inputs:[],name:"randomResult",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"requestRandomWords()":{inputs:[],name:"requestRandomWords",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Request randomness from Chainlink VRF"},"seed()":{inputs:[],name:"seed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setLotteryAddress(address)":{inputs:[{internalType:"address",name:"_degisLottery",type:"address"}],name:"setLotteryAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisLottery:"address of the PancakeSwap lottery"},notice:"Set the address for the DegisLottery"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/farming/DoubleRewarder.sol:DoubleRewarder":{source:"contracts/farming/DoubleRewarder.sol",name:"DoubleRewarder",title:"Degis Double Rewarder Contract",notice:'This contract is used to distribute double reward tokens (from other projects)         PoolInfo is stored with the reward token address as the key         E.g. Double reward for TraderJoe         JoeAddress => PoolInfo         Except the "rewardToken" this is also "realRewardToken" for the pool         - RewardToken is used for storing the info         - RealRewardToken is used for transfering the reward         If realRewardToken is set as ZeroAddress, then rewardToken is used for transfering the reward         Reward claiming is only available when that pool is set to be “claimable"         Before claimable, the reward is only calculated but not transfered         Typically, if multiple lp tokens are used for farming the same token reward,         We need a mock address to represent the reward token         E.g.         - IM_CAI_10.0_L_1610 => CLY             Reward token is CLY             Real reward token is ZeroAddress         - CAI_10.0_L_1610 => CLY             Reward token is address(keccak256(abi.encodePacked("IM_CAI_10.0_L_1610", "CLY")))             Real reward token is CLY         - CAI_10.0_L_1612 => CLY             Reward token is address(keccak256(abi.encodePacked("IM_CAI_10.0_L_1610", "CLY")))             Real reward token is CLY',events:{"ClaimReward(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"rewardToken",type:"address"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimReward",type:"event"},"DistributeReward(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DistributeReward",type:"event"},"NewRewardTokenAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"rewardToken",type:"address"}],name:"NewRewardTokenAdded",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RewardClaimable(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"rewardToken",type:"address"}],name:"RewardClaimable",type:"event"},"RewardRateUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRate",type:"uint256"}],name:"RewardRateUpdated",type:"event"}},methods:{"addRewardToken(address,address)":{inputs:[{internalType:"address",name:"_rewardToken",type:"address"},{internalType:"address",name:"_lpToken",type:"address"}],name:"addRewardToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lpToken:"LP token address",_rewardToken:"Reward token address (mock)"},notice:"Add a new reward token"},"addRewardTokenWithMock(address,address)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"address",name:"_realRewardToken",type:"address"}],name:"addRewardTokenWithMock",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lpToken:"LP token address used for double farming",_realRewardToken:"Real reward token address"},notice:"Add a new reward token but with mocked address"},"claim(address)":{inputs:[{internalType:"address",name:"_rewardToken",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",params:{_rewardToken:"Reward token address (mock)"},notice:"Claim pending reward         During IDO protection, the insured token have not been issued yet         So we need to claim the pending reward later (after the farming)"},"claimable(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"claimable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"distributeReward(address,address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"address",name:"_rewardToken",type:"address"},{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_lpAmount",type:"uint256"},{internalType:"uint256",name:"_lpSupply",type:"uint256"}],name:"distributeReward",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lpAmount:"LP amount of user",_lpSupply:"LP token balance of farming pool",_lpToken:"LP token address",_rewardToken:"Reward token address",_user:"User address"},notice:"Distribute reward when user get reward in farming pool         User lpAmount will be updated here"},"emergencyWithdraw(address)":{inputs:[{internalType:"address",name:"_token",type:"address"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Withdraw tokens         When stopping double reward, first set the reward speed, then withdraw tokens"},"farmingPool()":{inputs:[],name:"farmingPool",outputs:[{internalType:"contract IFarmingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"getMockRewardToken(address,address)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"address",name:"_realRewardToken",type:"address"}],name:"getMockRewardToken",outputs:[{internalType:"address",name:"mockRewardToken",type:"address"}],stateMutability:"pure",type:"function",params:{_lpToken:"LP token address",_realRewardToken:"Real reward token address"},returns:{mockRewardToken:"Mock reward token address"},notice:"Get mock reward token address         E.g. lpToken = IM_CAI  realRewardToken = CAI         mockAddress = address(keccak256(abi.encodePacked(IM_CAI_LP, CAI)))"},"initialize(address)":{inputs:[{internalType:"address",name:"_farmingPool",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Constructor         Only need to set farming pool address"},"newUserInfo(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"newUserInfo",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pendingReward(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"pending",type:"uint256"}],stateMutability:"view",type:"function",params:{_token:"Reward token address",_user:"User address"},returns:{pending:"Pending reward"},notice:"Get pending reward"},"pools(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pools",outputs:[{internalType:"address",name:"lpToken",type:"address"},{internalType:"uint256",name:"rewardPerSecond",type:"uint256"},{internalType:"uint256",name:"accTokenPerShare",type:"uint256"},{internalType:"uint256",name:"lastRewardTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},"realRewardToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"realRewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setClaimable(address,address)":{inputs:[{internalType:"address",name:"_rewardToken",type:"address"},{internalType:"address",name:"_realRewardToken",type:"address"}],name:"setClaimable",outputs:[],stateMutability:"nonpayable",type:"function",params:{_realRewardToken:"Real reward token adedress",_rewardToken:"Reward token address (mock)"},notice:"Make a reward token claimable         If the token has been deployed when the farming start,         then the real reward token should be address(0)         Mock reward address should match the real reward address"},"setRewardSpeed(address,address,uint256)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"address",name:"_rewardToken",type:"address"},{internalType:"uint256",name:"_reward",type:"uint256"}],name:"setRewardSpeed",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lpToken:"LP token address",_reward:"Reward per second",_rewardToken:"Reward token address (real)"},notice:"Set reward speed for a pool"},"supportedRewardToken(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedRewardToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userInfo(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},"userPendingReward(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"userPendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/farming/FarmingPoolUpgradeable.sol:FarmingPoolUpgradeable":{source:"contracts/farming/FarmingPoolUpgradeable.sol",name:"FarmingPoolUpgradeable",title:"Farming Pool",details:"Differences from MasterChef:           - The pool id starts from 1 rather than 0.           - The degis reward is calculated by timestamp rather than block number.           - Support double reward together with another token. (one lp => mine two tokens) (related contract is DoubleRewarder.sol)         VeDEG will boost the farming speed by having a extra reward field.         Mining Reward = DEG Basic Reward + DEG Bonus Reward + Double Reward           - DEG Basic Reward = Shared by all users who staked lp tokens inside.           - DEG Bonus Reward = Shared by all users who staked lp tokens inside and have veDEG balance at the same time.           - Double Reward = Shared by all users who staked lp tokens inside.         For DEG bonus reward, every time the veDEG balance changes, the reward will be updated. (called from veDEG contract)         The basic reward depends on the liquidity inside the pool (optional)         Update with a piecewise function         liquidity amount:   |---------------|------------------|----------------                             0           threshold 1        threshold 2          reward speed:            speed1          speed2             speed3         The speed update will be updated one tx after the last tx that triggers the threshold         The reward update will be another one tx later         This piecewise-style reward can be used or not for each pool to decide         Ways to start pools: 1) set the basic reward to >0 2) set the piecewise and threshold to >0                 stop pools: 1) set the basic reward to 0 2) set the piecewise and threshold to 0",notice:"This contract is for LPToken mining on Degis.",events:{"DegisRewardChanged(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"basicDegisPerSecond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bonusDegisPerSecond",type:"uint256"}],name:"DegisRewardChanged",type:"event"},"FarmingPoolStarted(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FarmingPoolStarted",type:"event"},"FarmingPoolStopped(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"FarmingPoolStopped",type:"event"},"Harvest(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"rewardReceiver",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pendingReward",type:"uint256"}],name:"Harvest",type:"event"},"NewPoolAdded(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"lpToken",type:"address"},{indexed:!1,internalType:"uint256",name:"basicDegisPerSecond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"bonusDegisPerSecond",type:"uint256"}],name:"NewPoolAdded",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"PoolUpdated(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"accDegisPerShare",type:"uint256"},{indexed:!1,internalType:"uint256",name:"accDegisPerBonusShare",type:"uint256"}],name:"PoolUpdated",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Stake",type:"event"},"StartTimestampChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startTimestamp",type:"uint256"}],name:"StartTimestampChanged",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},"Withdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"DEG()":{inputs:[],name:"DEG",outputs:[{internalType:"contract IDegisToken",name:"",type:"address"}],stateMutability:"view",type:"function"},"SCALE()":{inputs:[],name:"SCALE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"add(address,uint256,uint256,bool,address)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"uint256",name:"_basicDegisPerSecond",type:"uint256"},{internalType:"uint256",name:"_bonusDegisPerSecond",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"},{internalType:"address",name:"_doubleRewardToken",type:"address"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the owner      The reward speed can be 0 and set later by setDegisReward function      The pool may have a double reward token",params:{_basicDegisPerSecond:"Basic reward speed(per second) for this new pool",_bonusDegisPerSecond:"Bonus reward speed(per second) for this new pool",_doubleRewardToken:"Double reward token address",_lpToken:"LP token address",_withUpdate:"Whether update all pools' status"},notice:"Add a new lp into the pool"},"doubleRewarder(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"doubleRewarder",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"doubleRewarderContract()":{inputs:[],name:"doubleRewarderContract",outputs:[{internalType:"contract IDoubleRewarder",name:"",type:"address"}],stateMutability:"view",type:"function"},"extraClaimable(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"extraClaimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getPoolList()":{inputs:[],name:"getPoolList",outputs:[{components:[{internalType:"address",name:"lpToken",type:"address"},{internalType:"uint256",name:"basicDegisPerSecond",type:"uint256"},{internalType:"uint256",name:"bonusDegisPerSecond",type:"uint256"},{internalType:"uint256",name:"lastRewardTimestamp",type:"uint256"},{internalType:"uint256",name:"accDegisPerShare",type:"uint256"},{internalType:"uint256",name:"accDegisPerBonusShare",type:"uint256"},{internalType:"uint256",name:"totalBonus",type:"uint256"}],internalType:"struct FarmingPoolUpgradeable.PoolInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",returns:{_0:"pooList Total pool list"},notice:"Get the total pool list"},"getUserBalance(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"getUserBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_poolId:"Id of the pool",_user:"User address"},returns:{_0:"balance User's balance (lpToken)"},notice:"Get a user's balance"},"harvest(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Id of the farming pool",_to:"Receiver of degis rewards"},notice:"Harvest the degis reward and can be sent to another address"},"initialize(address)":{inputs:[{internalType:"address",name:"_DEG",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isFarming(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"isFarming",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"massUpdatePools()":{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can be called by anyone      Only update those active pools",notice:"Update all farming pools (except for those stopped ones)"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"nextPoolId()":{inputs:[],name:"nextPoolId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"pendingDegis(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingDegis",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_poolId:"PoolId of this farming pool",_user:"User address"},returns:{_0:"pendingDegisAmount Amount of pending degis"},notice:"Check the amount of pending degis reward"},"pendingDoubleReward(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingDoubleReward",outputs:[{internalType:"address",name:"doubleRewardToken",type:"address"},{internalType:"uint256",name:"pending",type:"uint256"}],stateMutability:"view",type:"function"},"piecewiseBasic(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"piecewiseBasic",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"poolList(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolList",outputs:[{internalType:"address",name:"lpToken",type:"address"},{internalType:"uint256",name:"basicDegisPerSecond",type:"uint256"},{internalType:"uint256",name:"bonusDegisPerSecond",type:"uint256"},{internalType:"uint256",name:"lastRewardTimestamp",type:"uint256"},{internalType:"uint256",name:"accDegisPerShare",type:"uint256"},{internalType:"uint256",name:"accDegisPerBonusShare",type:"uint256"},{internalType:"uint256",name:"totalBonus",type:"uint256"}],stateMutability:"view",type:"function"},"poolMapping(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolMapping",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"poolRewardLevel(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolRewardLevel",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setDegisReward(uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_basicDegisPerSecond",type:"uint256"},{internalType:"uint256",name:"_bonusDegisPerSecond",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"setDegisReward",outputs:[],stateMutability:"nonpayable",type:"function",params:{_basicDegisPerSecond:"New basic reward amount per second",_bonusDegisPerSecond:"New bonus reward amount per second",_poolId:"Id of the farming pool",_withUpdate:"Whether update all pools"},notice:"Update the degisPerSecond for a specific pool (set to 0 to stop farming)"},"setDoubleRewarderContract(address)":{inputs:[{internalType:"address",name:"_rewarder",type:"address"}],name:"setDoubleRewarderContract",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Set double rewarder contract"},"setPiecewise(uint256,uint256[],uint256[])":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256[]",name:"_threshold",type:"uint256[]"},{internalType:"uint256[]",name:"_reward",type:"uint256[]"}],name:"setPiecewise",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Id of the pool",_reward:"Piecewise reward",_threshold:"Piecewise threshold"},notice:"Set piecewise reward and threshold"},"setStartTimestamp(uint256)":{inputs:[{internalType:"uint256",name:"_startTimestamp",type:"uint256"}],name:"setStartTimestamp",outputs:[],stateMutability:"nonpayable",type:"function",params:{_startTimestamp:"New start block timestamp"},notice:"Set the start block timestamp"},"setVeDEG(address)":{inputs:[{internalType:"address",name:"_veDEG",type:"address"}],name:"setVeDEG",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only stake to the pools that are still farming",params:{_amount:"Staking amount",_poolId:"Id of the farming pool"},notice:"Stake LP token into the farming pool"},"startTimestamp()":{inputs:[],name:"startTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"thresholdBasic(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"thresholdBasic",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBonus(address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_newVeDEGBalance",type:"uint256"}],name:"updateBonus",outputs:[],stateMutability:"nonpayable",type:"function",details:"When veDEG has balance change      Only called by veDEG contract",params:{_newVeDEGBalance:"New veDEG balance",_user:"User address"},notice:"Update a user's bonus"},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Id of the farming pool"},notice:"Update the pool's reward status"},"userInfo(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"userInfo",outputs:[{internalType:"uint256",name:"rewardDebt",type:"uint256"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"bonus",type:"uint256"}],stateMutability:"view",type:"function"},"veDEG()":{inputs:[],name:"veDEG",outputs:[{internalType:"contract IVeDEG",name:"",type:"address"}],stateMutability:"view",type:"function"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of lp tokens to withdraw",_poolId:"Id of the farming pool"},notice:"Withdraw lptoken from the pool\\"}}},"contracts/farming/PurchaseIncentiveVault.sol:PurchaseIncentiveVault":{source:"contracts/farming/PurchaseIncentiveVault.sol",name:"PurchaseIncentiveVault",title:"Purchase Incentive Vault",notice:"This is the purchase incentive vault for staking buyer tokens         Users first stake their buyer tokens and wait for distribution         About every 24 hours, the reward will be calculated to users' account         After disrtribution, reward will be updated              but it still need to be manually claimed.         Buyer tokens can only be used once         You can withdraw your buyer token within the same round (current round)         They can not be withdrawed if the round was settled",events:{"DegisRewardChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldRewardPerRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRewardPerRound",type:"uint256"}],name:"DegisRewardChanged",type:"event"},"DistributionIntervalChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newInterval",type:"uint256"}],name:"DistributionIntervalChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"Redeem(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"currentRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Redeem",type:"event"},"RewardClaimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"userReward",type:"uint256"}],name:"RewardClaimed",type:"event"},"RoundSettled(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"RoundSettled",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"currentRound",type:"uint256"},{indexed:!1,internalType:"uint256",name:"actualAmount",type:"uint256"}],name:"Stake",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"MAX_ROUND()":{inputs:[],name:"MAX_ROUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"SCALE()":{inputs:[],name:"SCALE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",notice:"User can claim his own reward"},"currentRound()":{inputs:[],name:"currentRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerRound()":{inputs:[],name:"degisPerRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"distributionInterval()":{inputs:[],name:"distributionInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRewardPerRound()":{inputs:[],name:"getRewardPerRound",outputs:[{internalType:"uint256",name:"rewardPerRound",type:"uint256"}],stateMutability:"view",type:"function",details:"Depends on the total shares in this round",returns:{rewardPerRound:"Degis reward per round"},notice:"Get degis reward per round"},"getTotalUsersInRound(uint256)":{inputs:[{internalType:"uint256",name:"_round",type:"uint256"}],name:"getTotalUsersInRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_round:"Round number to check"},returns:{_0:"totalUsers Total amount of users in _round"},notice:"Get the amount of users in _round, used for distribution"},"getUserPendingRounds(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserPendingRounds",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_user:"User address to check"},returns:{_0:"pendingRounds User's pending rounds"},notice:"Get user's pending rounds"},"getUserShares(address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_round",type:"uint256"}],name:"getUserShares",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_round:"Round number",_user:"Address of the user"},returns:{_0:"userShares User's shares in the current round"},notice:"Get your shares in the current round"},"getUsersInRound(uint256)":{inputs:[{internalType:"uint256",name:"_round",type:"uint256"}],name:"getUsersInRound",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",params:{_round:"Round number to check"},returns:{_0:"users All user addresses in this round"},notice:"Get the user addresses in _round"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_buyerToken",type:"address"},{internalType:"address",name:"_degisToken",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"lastDistribution()":{inputs:[],name:"lastDistribution",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"pendingReward(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"userPendingReward",type:"uint256"}],stateMutability:"view",type:"function",params:{_user:"User address"},returns:{userPendingReward:"User's pending reward"},notice:"Get a user's pending reward"},"redeem(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"redeem",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount to redeem"},notice:"Redeem buyer token from the vault"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rounds(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rounds",outputs:[{internalType:"uint256",name:"shares",type:"uint256"},{internalType:"bool",name:"hasDistributed",type:"bool"},{internalType:"uint256",name:"degisPerShare",type:"uint256"}],stateMutability:"view",type:"function"},"setDegisPerRound(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerRound",type:"uint256"}],name:"setDegisPerRound",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisPerRound:"Degis distribution per round"},notice:"Set degis distribution per round"},"setDistributionInterval(uint256)":{inputs:[{internalType:"uint256",name:"_newInterval",type:"uint256"}],name:"setDistributionInterval",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newInterval:"The new interval"},notice:"Set a new distribution interval"},"setPiecewise(uint256[],uint256[])":{inputs:[{internalType:"uint256[]",name:"_threshold",type:"uint256[]"},{internalType:"uint256[]",name:"_reward",type:"uint256[]"}],name:"setPiecewise",outputs:[],stateMutability:"nonpayable",type:"function",params:{_reward:"The piecewise reward",_threshold:"The threshold"},notice:"Set the threshold and piecewise reward"},"settleCurrentRound()":{inputs:[],name:"settleCurrentRound",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by any address, must pass the distribution interval",notice:"Settle the current round"},"stake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of buyer tokens to stake"},notice:"Stake buyer tokens into this contract"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},"userSharesInRound(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"userSharesInRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"users(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"lastRewardRoundIndex",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/farming/interfaces/IDoubleRewarder.sol:IDoubleRewarder":{source:"contracts/farming/interfaces/IDoubleRewarder.sol",name:"IDoubleRewarder",methods:{"distributeReward(address,address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"lpToken",type:"address"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"userAmount",type:"uint256"},{internalType:"uint256",name:"lpSupply",type:"uint256"}],name:"distributeReward",outputs:[],stateMutability:"nonpayable",type:"function"},"pendingReward(address,address)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardToken()":{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/farming/interfaces/IFarmingPool.sol:IFarmingPool":{source:"contracts/farming/interfaces/IFarmingPool.sol",name:"IFarmingPool",methods:{"add(address,uint256,bool)":{inputs:[{internalType:"address",name:"_lpToken",type:"address"},{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"add",outputs:[],stateMutability:"nonpayable",type:"function"},"harvest(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function"},"massUpdatePools()":{inputs:[],name:"massUpdatePools",outputs:[],stateMutability:"nonpayable",type:"function"},"pendingDegis(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingDegis",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"setDegisReward(uint256,uint256,uint256,bool)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_basicDegisPerBlock",type:"uint256"},{internalType:"uint256",name:"_bonusDegisPerBlock",type:"uint256"},{internalType:"bool",name:"_withUpdate",type:"bool"}],name:"setDegisReward",outputs:[],stateMutability:"nonpayable",type:"function"},"setStartBlock(uint256)":{inputs:[{internalType:"uint256",name:"_startBlock",type:"uint256"}],name:"setStartBlock",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBonus(address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_newBalance",type:"uint256"}],name:"updateBonus",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/governance/TimeLock.sol:TimelockController":{source:"contracts/governance/TimeLock.sol",name:"TimelockController",details:"Contract module which acts as a timelocked controller. When set as the owner of an `Ownable` smart contract, it enforces a timelock on all `onlyOwner` maintenance operations. This gives time for users of the controlled contract to exit before a potentially dangerous maintenance operation is applied. By default, this contract is self administered, meaning administration tasks have to go through the timelock process. The proposer (resp executor) role is in charge of proposing (resp executing) operations. A common use case is to position this {TimelockController} as the owner of a smart contract, with a multisig or a DAO as the sole proposer. _Available since v3.3._",constructor:{inputs:[{internalType:"uint256",name:"minDelay",type:"uint256"},{internalType:"address[]",name:"proposers",type:"address[]"},{internalType:"address[]",name:"executors",type:"address[]"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"CallExecuted(bytes32,uint256,address,uint256,bytes)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"}],name:"CallExecuted",type:"event",details:"Emitted when a call is performed as part of operation `id`."},"CallScheduled(bytes32,uint256,address,uint256,bytes,bytes32,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"uint256",name:"index",type:"uint256"},{indexed:!1,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"bytes32",name:"predecessor",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"delay",type:"uint256"}],name:"CallScheduled",type:"event",details:"Emitted when a call is scheduled as part of operation `id`."},"Cancelled(bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"id",type:"bytes32"}],name:"Cancelled",type:"event",details:"Emitted when operation `id` is cancelled."},"MinDelayChange(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldDuration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDuration",type:"uint256"}],name:"MinDelayChange",type:"event",details:"Emitted when the minimum delay for future operations is modified."},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"EXECUTOR_ROLE()":{inputs:[],name:"EXECUTOR_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PROPOSER_ROLE()":{inputs:[],name:"PROPOSER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"TIMELOCK_ADMIN_ROLE()":{inputs:[],name:"TIMELOCK_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"cancel(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"cancel",outputs:[],stateMutability:"nonpayable",type:"function",details:"Cancel an operation. Requirements: - the caller must have the 'proposer' role."},"execute(address,uint256,bytes,bytes32,bytes32)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes32",name:"predecessor",type:"bytes32"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"execute",outputs:[],stateMutability:"payable",type:"function",details:"Execute an (ready) operation containing a single transaction. Emits a {CallExecuted} event. Requirements: - the caller must have the 'executor' role."},"executeBatch(address[],uint256[],bytes[],bytes32,bytes32)":{inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes[]",name:"datas",type:"bytes[]"},{internalType:"bytes32",name:"predecessor",type:"bytes32"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"executeBatch",outputs:[],stateMutability:"payable",type:"function",details:"Execute an (ready) operation containing a batch of transactions. Emits one {CallExecuted} event per transaction in the batch. Requirements: - the caller must have the 'executor' role."},"getMinDelay()":{inputs:[],name:"getMinDelay",outputs:[{internalType:"uint256",name:"duration",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the minimum delay for an operation to become valid. This value can be changed by executing an operation that calls `updateDelay`."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getTimestamp(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"getTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the timestamp at with an operation becomes ready (0 for unset operations, 1 for done operations)."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hashOperation(address,uint256,bytes,bytes32,bytes32)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes32",name:"predecessor",type:"bytes32"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"hashOperation",outputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],stateMutability:"pure",type:"function",details:"Returns the identifier of an operation containing a single transaction."},"hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)":{inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes[]",name:"datas",type:"bytes[]"},{internalType:"bytes32",name:"predecessor",type:"bytes32"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"hashOperationBatch",outputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],stateMutability:"pure",type:"function",details:"Returns the identifier of an operation containing a batch of transactions."},"isOperation(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"isOperation",outputs:[{internalType:"bool",name:"pending",type:"bool"}],stateMutability:"view",type:"function",details:"Returns whether an id correspond to a registered operation. This includes both Pending, Ready and Done operations."},"isOperationDone(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"isOperationDone",outputs:[{internalType:"bool",name:"done",type:"bool"}],stateMutability:"view",type:"function",details:"Returns whether an operation is done or not."},"isOperationPending(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"isOperationPending",outputs:[{internalType:"bool",name:"pending",type:"bool"}],stateMutability:"view",type:"function",details:"Returns whether an operation is pending or not."},"isOperationReady(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"isOperationReady",outputs:[{internalType:"bool",name:"ready",type:"bool"}],stateMutability:"view",type:"function",details:"Returns whether an operation is ready or not."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"schedule(address,uint256,bytes,bytes32,bytes32,uint256)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes32",name:"predecessor",type:"bytes32"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256",name:"delay",type:"uint256"}],name:"schedule",outputs:[],stateMutability:"nonpayable",type:"function",details:"Schedule an operation containing a single transaction. Emits a {CallScheduled} event. Requirements: - the caller must have the 'proposer' role."},"scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)":{inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes[]",name:"datas",type:"bytes[]"},{internalType:"bytes32",name:"predecessor",type:"bytes32"},{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"uint256",name:"delay",type:"uint256"}],name:"scheduleBatch",outputs:[],stateMutability:"nonpayable",type:"function",details:"Schedule an operation containing a batch of transactions. Emits one {CallScheduled} event per transaction in the batch. Requirements: - the caller must have the 'proposer' role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"updateDelay(uint256)":{inputs:[{internalType:"uint256",name:"newDelay",type:"uint256"}],name:"updateDelay",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the minimum timelock duration for future operations. Emits a {MinDelayChange} event. Requirements: - the caller must be the timelock itself. This can only be achieved by scheduling and later executing an operation where the timelock is the target and the data is the ABI-encoded call to this function."}}},"contracts/governance/VeERC20Upgradeable.sol:VeERC20Upgradeable":{source:"contracts/governance/VeERC20Upgradeable.sol",name:"VeERC20Upgradeable",title:"VeERC20Upgradeable",details:"only minting and burning are allowed. The hook _afterTokenOperation is called after Minting and Burning.",notice:"Modified version of ERC20Upgradeable where transfers and allowances are disabled.",events:{"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Burn",type:"event",details:"Emitted when `value` tokens are burned and minted"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Mint",type:"event"}},methods:{"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."}}},"contracts/governance/VoteEscrowedDegis.sol:VoteEscrowedDegis":{source:"contracts/governance/VoteEscrowedDegis.sol",name:"VoteEscrowedDegis",title:"Vote Escrowed Degis",notice:"The staking contract for DEG -> veDEG         veDEG:            - Boosting the farming reward            - Governance            - Participate in Initial Liquidity Matching (naughty price)            - etc.         If you stake degis, you generate veDEG at the current `generationRate` until you reach `maxCap`         If you unstake any amount of degis, you will lose all of your veDEG tokens         There is also an option that you lock your DEG for the max time         and get the maximum veDEG balance immediately.         !! Attention !!         If you stake DEG for the max time for more than once, the lockUntil timestamp will         be updated to the latest one.",events:{"BoostVeDEG(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"boostType",type:"uint256"}],name:"BoostVeDEG",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Burn",type:"event"},"BurnVeDEG(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"BurnVeDEG",type:"event"},"Claimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"DepositMaxTime(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockUntil",type:"uint256"}],name:"DepositMaxTime",type:"event"},"GenerationRateChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRate",type:"uint256"}],name:"GenerationRateChanged",type:"event"},"LockVeDEG(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LockVeDEG",type:"event"},"MaxCapRatioChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMaxCapRatio",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxCapRatio",type:"uint256"}],name:"MaxCapRatioChanged",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Mint",type:"event"},"NFTStakingChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldNFTStaking",type:"address"},{indexed:!1,internalType:"address",name:"newNFTStaking",type:"address"}],name:"NFTStakingChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"UnBoostVeDEG(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"}],name:"UnBoostVeDEG",type:"event"},"UnlockVeDEG(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UnlockVeDEG",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},"WhiteListAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newWhiteList",type:"address"}],name:"WhiteListAdded",type:"event"},"WhiteListRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldWhiteList",type:"address"}],name:"WhiteListRemoved",type:"event"},"Withdraw(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"SCALE()":{inputs:[],name:"SCALE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"addWhitelist(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addWhitelist",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner",params:{_account:"Address to add"},notice:"Add a new whitelist address"},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"boostVeDEG(address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_type",type:"uint256"}],name:"boostVeDEG",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only called by nftStaking contract",params:{_type:"Boost type (1 = 120%, 2 = 150%)",_user:"User address"},notice:"Boost veDEG"},"boosted(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"boosted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burnVeDEG(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnVeDEG",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only whitelisted contract      For future use, some contracts may need veDEG for entrance",params:{_amount:"Amount to burn",_to:"Address to burn"},notice:"Burn veDEG"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claims accumulated veDEG for flex deposit"},"claimable(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"claimable",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_user:"User address"},returns:{_0:"claimableAmount Claimable amount of the user"},notice:"Calculate the amount of veDEG that can be claimed by user"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"degis()":{inputs:[],name:"degis",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"deposit(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only EOA or whitelisted contract address",params:{_amount:"Amount to deposit"},notice:"Depisit degis for veDEG"},"depositMaxTime(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositMaxTime",outputs:[],stateMutability:"nonpayable",type:"function",details:"Release the max amount one time",notice:"Deposit for the max time"},"farmingPool()":{inputs:[],name:"farmingPool",outputs:[{internalType:"contract IFarmingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"generationRate()":{inputs:[],name:"generationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_degis",type:"address"},{internalType:"address",name:"_farmingPool",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"lockVeDEG(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"lockVeDEG",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only whitelisted contract      Income sharing contract will lock veDEG as entrance",params:{_amount:"Amount to lock",_to:"User address"},notice:"Lock veDEG token"},"locked(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"locked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxCapRatio()":{inputs:[],name:"maxCapRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nftStaking()":{inputs:[],name:"nftStaking",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"removeWhitelist(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeWhitelist",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner",params:{_account:"Address to remove"},notice:"Remove a new whitelist address"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setGenerationRate(uint256)":{inputs:[{internalType:"uint256",name:"_generationRate",type:"uint256"}],name:"setGenerationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_generationRate:"New generation rate"},notice:"Set generationRate"},"setMaxCapRatio(uint256)":{inputs:[{internalType:"uint256",name:"_maxCapRatio",type:"uint256"}],name:"setMaxCapRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxCapRatio:"the new max ratio"},notice:"Set maxCap ratio"},"setNFTStaking(address)":{inputs:[{internalType:"address",name:"_nftStaking",type:"address"}],name:"setNFTStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unBoostVeDEG(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"unBoostVeDEG",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only called by nftStaking contract",params:{_user:"User address"},notice:"UnBoost veDEG"},"unlockVeDEG(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unlockVeDEG",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount to unlock",_to:"User address"},notice:"Unlock veDEG token"},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},"users(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lastRelease",type:"uint256"},{internalType:"uint256",name:"amountLocked",type:"uint256"},{internalType:"uint256",name:"lockUntil",type:"uint256"}],stateMutability:"view",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"User will lose all veDEG once he withdrawed",params:{_amount:"Amount to withdraw"},notice:"Withdraw degis token"},"withdrawLocked()":{inputs:[],name:"withdrawLocked",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Withdraw all the locked veDEG"}}},"contracts/governance/interfaces/IVeDEG.sol:IVeDEG":{source:"contracts/governance/interfaces/IVeDEG.sol",name:"IVeDEG",details:"Interface of the VeDEG",methods:{"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"deposit(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},"depositMaxTime(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositMaxTime",outputs:[],stateMutability:"nonpayable",type:"function"},"lockVeDEG(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"lockVeDEG",outputs:[],stateMutability:"nonpayable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlockVeDEG(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unlockVeDEG",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/governance/interfaces/IVeERC20.sol:IVeERC20":{source:"contracts/governance/interfaces/IVeERC20.sol",name:"IVeERC20",methods:{"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/income/IncomeMaker.sol:IncomeMaker":{source:"contracts/income/IncomeMaker.sol",name:"IncomeMaker",title:"Degis Maker Contract",details:"This contract will receive the transaction fee from swap pool      Then it will transfer",events:{"ConvertIncome(address,address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"policyTokenAddress",type:"address"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"policyTokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"stablecoinAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"stablecoinBackAmount",type:"uint256"}],name:"ConvertIncome",type:"event"},"EmergencyWithdraw(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EmergencyWithdraw",type:"event"},"IncomeToUSD(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"policyTokenAddress",type:"address"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"IncomeToUSD",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"UINT256_MAX()":{inputs:[],name:"UINT256_MAX",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"convertIncome(address,address)":{inputs:[{internalType:"address",name:"_policyToken",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"}],name:"convertIncome",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Address of the policy token",_stablecoin:"Address of the stablecoi"},notice:"Convert the income to stablecoin and transfer to the incomeSharingVault"},"emergencyWithdraw(address,uint256)":{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of the token",_token:"Address of the token"},notice:"Emergency withdraw by the owner"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"contract INaughtyFactory",name:"",type:"address"}],stateMutability:"view",type:"function"},"incomeSharingVault()":{inputs:[],name:"incomeSharingVault",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"initialize(address,address,address)":{inputs:[{internalType:"address",name:"_router",type:"address"},{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_vault",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_factory:"Address of the naughty factory",_router:"Address of the naughty router",_vault:"Address of the income sharing vault"},notice:"Initialize function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"router()":{inputs:[],name:"router",outputs:[{internalType:"contract INaughtyRouter",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/income/IncomeSharingVaultV2.sol:IncomeSharingVaultV2":{source:"contracts/income/IncomeSharingVaultV2.sol",name:"IncomeSharingVaultV2",title:"Degis Income Sharing Contract",notice:"This contract will receive part of the income from Degis products         And the income will be shared by DEG holders (in the form of veDEG)         It is designed to be an ever-lasting reward         This contract will have several pools: one pool for each reward token (e.g. USDC, USDT, etc.)         To enter the income sharing vault, you need to lock some veDEG             - When your veDEG is locked, it can not be withdrawed         The reward is updated each time there is an interaction with the contract.         But the reward amount depends on the token already came to the contract.         It is not a fixed amount of reward per second.          The income will come from (to be updated)             - IncomeMaker: Collect swap fee in naughty price pool             - PolicyCore: Collect deposit/redeem fee in policy core",events:{"Deposit(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"Harvest(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Harvest",type:"event"},"NewRewardPoolStart(uint256,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"address",name:"rewardToken",type:"address"}],name:"NewRewardPoolStart",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"PoolUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"accRewardPerSecond",type:"uint256"}],name:"PoolUpdated",type:"event"},"RewardSpeedSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rewardPerSecond",type:"uint256"}],name:"RewardSpeedSet",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},"Withdraw(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"poolId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event"}},methods:{"SCALE()":{inputs:[],name:"SCALE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"deposit(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to deposit",_poolId:"Pool Id"},notice:"Deposit         Will: update pool, lock veDEG, claim pending reward, update user info "},"harvest(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Pool Id",_to:"Reward receiver address"},notice:"Harvest income reward "},"initialize(address)":{inputs:[{internalType:"address",name:"_veDEG",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"nextPool()":{inputs:[],name:"nextPool",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"pendingReward(uint256,address)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_poolId:"Pool Id",_user:"User address"},returns:{_0:"pendingReward Amount of pending reward"},notice:"Pending reward"},"pools(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"pools",outputs:[{internalType:"bool",name:"available",type:"bool"},{internalType:"address",name:"rewardToken",type:"address"},{internalType:"uint256",name:"totalAmount",type:"uint256"},{internalType:"uint256",name:"accRewardPerShare",type:"uint256"},{internalType:"uint256",name:"lastRewardBalance",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"startPool(address)":{inputs:[{internalType:"address",name:"_rewardToken",type:"address"}],name:"startPool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_rewardToken:"Reward token address"},notice:"Start a new income sharing pool with its reward token"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateLastRewardBalance(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updateLastRewardBalance",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePool(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Pool id"},notice:"Update pool"},"users(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"totalAmount",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},"veDEG()":{inputs:[],name:"veDEG",outputs:[{internalType:"contract IVeDEG",name:"",type:"address"}],stateMutability:"view",type:"function"},"withdraw(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount to withdraw",_poolId:"Pool Id"},notice:"Withdraw veDEG from a pool         Will: update pool, unlock veDEG, harvest reward, update user info "},"withdrawAll(uint256)":{inputs:[{internalType:"uint256",name:"_poolId",type:"uint256"}],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function",params:{_poolId:"Pool Id"},notice:"Withdraw all veDEG from a pool "}}},"contracts/income/interfaces/IIncomeSharingCompensate.sol:IIncomeSharingCompensate":{source:"contracts/income/interfaces/IIncomeSharingCompensate.sol",name:"IIncomeSharingCompensate",methods:{"compensate(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"compensate",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/libraries/FixedPoint.sol:FixedPoint":{source:"contracts/libraries/FixedPoint.sol",name:"FixedPoint"},"contracts/libraries/Math.sol:Math":{source:"contracts/libraries/Math.sol",name:"Math"},"contracts/libraries/PublicLib.sol:PublicLib":{source:"contracts/libraries/PublicLib.sol",name:"PublicLib"},"contracts/libraries/SafeCast.sol:SafeCast":{source:"contracts/libraries/SafeCast.sol",name:"SafeCast",details:"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting."},"contracts/libraries/SafePRBMath.sol:SafePRBMath":{source:"contracts/libraries/SafePRBMath.sol",name:"SafePRBMath",title:"PRBMathUD60x18",author:"Paul Razvan Berg",notice:"Smart contract library for advanced fixed-point math that works with uint256 numbers considered to have 18 trailing decimals. We call this number representation unsigned 60.18-decimal fixed-point, since there can be up to 60 digits in the integer part and up to 18 decimals in the fractional part. The numbers are bound by the minimum and the maximum values permitted by the Solidity type uint256."},"contracts/libraries/SafePRBMathTester.sol:SafePRBMathTester":{source:"contracts/libraries/SafePRBMathTester.sol",name:"SafePRBMathTester",methods:{"avg(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"avg",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"ceil(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"ceil",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"div(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"div",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"e()":{inputs:[],name:"e",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"exp(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"exp",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"exp2(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"exp2",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"floor(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"floor",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"frac(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"frac",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"fromUint(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"fromUint",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"gm(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"gm",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"inv(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"inv",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"ln(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"ln",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"log10(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"log10",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"log2(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"log2",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"mul(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"mul",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"pi()":{inputs:[],name:"pi",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"pow(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"pow",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"powu(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"},{internalType:"uint256",name:"y",type:"uint256"}],name:"powu",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"scale()":{inputs:[],name:"scale",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"sqrt(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"sqrt",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"},"toUint(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"toUint",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/libraries/StablecoinDecimal.sol:StablecoinDecimal":{source:"contracts/libraries/StablecoinDecimal.sol",name:"StablecoinDecimal"},"contracts/libraries/StringsUtils.sol:StringsUtils":{source:"contracts/libraries/StringsUtils.sol",name:"StringsUtils",details:"String operations."},"contracts/libraries/StringsUtilsTester.sol:StringsUtilsTester":{source:"contracts/libraries/StringsUtilsTester.sol",name:"StringsUtilsTester",methods:{"addressToString(address)":{inputs:[{internalType:"address",name:"_addr",type:"address"}],name:"addressToString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"byToString(bytes32)":{inputs:[{internalType:"bytes32",name:"_bytes",type:"bytes32"}],name:"byToString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"uintToHexString(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"uintToHexString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"uintToHexString(uint256,uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"length",type:"uint256"}],name:"uintToHexString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",details:"Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"uintToString(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"uintToString",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",details:"Converts a `uint256` to its ASCII `string` decimal representation."}}},"contracts/libraries/UniswapV2Library.sol:SafeMath":{source:"contracts/libraries/UniswapV2Library.sol",name:"SafeMath"},"contracts/libraries/UniswapV2Library.sol:UniswapV2Library":{source:"contracts/libraries/UniswapV2Library.sol",name:"UniswapV2Library"},"contracts/libraries/UniswapV2OracleLibrary.sol:UniswapV2OracleLibrary":{source:"contracts/libraries/UniswapV2OracleLibrary.sol",name:"UniswapV2OracleLibrary"},"contracts/lucky-box/DegisLotteryV2.sol:DegisLotteryV2":{source:"contracts/lucky-box/DegisLotteryV2.sol",name:"DegisLotteryV2",title:"DegisLotteryV2",details:"This lottery uses DEG as tickets and DEG as rewards also      Users can pay 10 DEG to buy one ticket and choose four digits for each ticket      After the lottery was closed, it will draw a final random number through Chainlink VRF      Users get rewards according to the how many numbers they matched with the final number      Reward distribution:      80% of each round prize pool will be distributed to the winners (breakdowns for different levels)      20% of each round prize pool will be rolled to next round (except for treasury fee)",events:{"AdminTokenRecovery(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"AdminTokenRecovery",type:"event"},"LotteryClose(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"}],name:"LotteryClose",type:"event"},"LotteryInjection(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"injectedAmount",type:"uint256"}],name:"LotteryInjection",type:"event"},"LotteryNumberDrawn(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"finalNumber",type:"uint256"},{indexed:!1,internalType:"uint256",name:"countWinningTickets",type:"uint256"}],name:"LotteryNumberDrawn",type:"event"},"LotteryOpen(uint256,uint256,uint256,uint256,uint256[4],uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"roundLength",type:"uint256"},{indexed:!1,internalType:"uint256",name:"priceTicketInDegis",type:"uint256"},{indexed:!1,internalType:"uint256[4]",name:"rewardsBreakdown",type:"uint256[4]"},{indexed:!1,internalType:"uint256",name:"injectedAmount",type:"uint256"}],name:"LotteryOpen",type:"event"},"MaxNumberTicketsEachTimeChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMaxNumber",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxNumber",type:"uint256"}],name:"MaxNumberTicketsEachTimeChanged",type:"event"},"NewRandomGenerator(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"randomGenerator",type:"address"}],name:"NewRandomGenerator",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RoundLengthChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldRoundLength",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRoundLength",type:"uint256"}],name:"RoundLengthChanged",type:"event"},"TicketsClaim(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"}],name:"TicketsClaim",type:"event"},"TicketsPurchased(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"buyer",type:"address"},{indexed:!0,internalType:"uint256",name:"lotteryId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"number",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalPrice",type:"uint256"}],name:"TicketsPurchased",type:"event"},"TreasuryChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldTreasury",type:"address"},{indexed:!1,internalType:"address",name:"newTreasury",type:"address"}],name:"TreasuryChanged",type:"event"}},methods:{"DEFAULT_PRICE()":{inputs:[],name:"DEFAULT_PRICE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DISCOUNT_DIVISOR()":{inputs:[],name:"DISCOUNT_DIVISOR",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DegisToken()":{inputs:[],name:"DegisToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"MAX_TICKET_NUMBER()":{inputs:[],name:"MAX_TICKET_NUMBER",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},"MAX_TREASURY_FEE()":{inputs:[],name:"MAX_TREASURY_FEE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MIN_TICKET_NUMBER()":{inputs:[],name:"MIN_TICKET_NUMBER",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},"_bracketCalculator(uint32)":{inputs:[{internalType:"uint32",name:"",type:"uint32"}],name:"_bracketCalculator",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},"_numberTicketsPerLotteryId(uint256,uint32)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"_numberTicketsPerLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"_reverseTicketNumber(uint256)":{inputs:[{internalType:"uint256",name:"_number",type:"uint256"}],name:"_reverseTicketNumber",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"pure",type:"function",params:{_number:"Input ticket number"},returns:{_0:"reversedNumber Reversed number + 10000"},notice:'Reverse the ticket number         E.g. User want to buy "1234"              The input number will be 11234              The reversed output will be 14321'},"_userTicketIds(address,uint256,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"_userTicketIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"buyTickets(uint32[])":{inputs:[{internalType:"uint32[]",name:"_ticketNumbers",type:"uint32[]"}],name:"buyTickets",outputs:[],stateMutability:"nonpayable",type:"function",details:'Need to transfer the 4-digit number to a 5-digit number to be used here (+10000)      Can not be called by a smart contract      Can only purchase in the current round      E.g. You are selecting the number of 1-2-3-4 (lowest to highest)           You will need to pass a number "14321"',params:{_ticketNumbers:"Array of ticket numbers between 10,000 and 19,999"},notice:"Buy tickets for the current lottery round"},"changeRandomGenerator(address)":{inputs:[{internalType:"address",name:"_randomGeneratorAddress",type:"address"}],name:"changeRandomGenerator",outputs:[],stateMutability:"nonpayable",type:"function",details:"The calls to functions are used to verify the new generator implements them properly.      It is necessary to wait for the VRF response before starting a round.",params:{_randomGeneratorAddress:"address of the random generator"},notice:"Change the random generator contract address"},"claimAllTickets(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"claimAllTickets",outputs:[],stateMutability:"nonpayable",type:"function",details:'Callable by users only, not contract      Gas cost may be oversized, recommended to get brackets offchain first      Get brackets offchain and call function "claimTickets"',params:{_lotteryId:"Lottery id"},notice:"Claim all winning tickets for a lottery round"},"claimTickets(uint256,uint256[],uint32[])":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"},{internalType:"uint256[]",name:"_ticketIds",type:"uint256[]"},{internalType:"uint32[]",name:"_brackets",type:"uint32[]"}],name:"claimTickets",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by users only, not contract",params:{_brackets:"Bracket / prize level of each ticket",_lotteryId:"Lottery id",_ticketIds:"Array of ticket ids"},notice:"Claim winning tickets"},"closeLottery(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"closeLottery",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lotteryId:"Lottery round"},notice:"Close a lottery"},"currentLotteryId()":{inputs:[],name:"currentLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentTicketId()":{inputs:[],name:"currentTicketId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"drawFinalNumberAndMakeLotteryClaimable(uint256,bool)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"},{internalType:"bool",name:"_autoInjection",type:"bool"}],name:"drawFinalNumberAndMakeLotteryClaimable",outputs:[],stateMutability:"nonpayable",type:"function",params:{_autoInjection:"Auto inject funds into next lottery",_lotteryId:"Lottery round"},notice:"Draw the final number, calculate reward in Degis for each group, and make this lottery claimable (need to wait for the random generator)"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_degis",type:"address"},{internalType:"address",name:"_randomGenerator",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"RandomNumberGenerator must be deployed prior to this contract",params:{_degis:"Address of DEG",_randomGenerator:"Address of the RandomGenerator contract used to work with ChainLink VRF"},notice:"Initialize function"},"injectFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"injectFunds",outputs:[],stateMutability:"nonpayable",type:"function",details:"Those DEG transferred to this contract but not by this function      will not be counted for prize pools",params:{_amount:"DEG amount to inject"},notice:"Inject funds"},"lotteries(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"lotteries",outputs:[{internalType:"enum DegisLotteryV2.Status",name:"status",type:"uint8"},{internalType:"uint32",name:"treasuryFee",type:"uint32"},{internalType:"uint32",name:"startTime",type:"uint32"},{internalType:"uint32",name:"endTime",type:"uint32"},{internalType:"uint32",name:"finalNumber",type:"uint32"},{internalType:"uint256",name:"ticketPrice",type:"uint256"},{internalType:"uint256",name:"firstTicketId",type:"uint256"},{internalType:"uint256",name:"firstTicketIdNextRound",type:"uint256"},{internalType:"uint256",name:"amountCollected",type:"uint256"},{internalType:"uint256",name:"pendingRewards",type:"uint256"}],stateMutability:"view",type:"function"},"maxNumberTicketsEachTime()":{inputs:[],name:"maxNumberTicketsEachTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pendingInjectionNextLottery()":{inputs:[],name:"pendingInjectionNextLottery",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"randomGenerator()":{inputs:[],name:"randomGenerator",outputs:[{internalType:"contract IRandomNumberGenerator",name:"",type:"address"}],stateMutability:"view",type:"function"},"recoverWrongTokens(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_tokenAmount",type:"uint256"}],name:"recoverWrongTokens",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenAddress:"Address of the token to withdraw",_tokenAmount:"Token amount to withdraw"},notice:"Recover wrong tokens sent to the contract, only by the owner          All tokens except Degis are wrong tokens"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardsBreakdown(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardsBreakdown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"roundLength()":{inputs:[],name:"roundLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setMaxNumberTicketsEachTime(uint256)":{inputs:[{internalType:"uint256",name:"_maxNumber",type:"uint256"}],name:"setMaxNumberTicketsEachTime",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxNumber:"Max number each time"},notice:"Set max number can buy/claim each time"},"setRoundLength(uint256)":{inputs:[{internalType:"uint256",name:"_length",type:"uint256"}],name:"setRoundLength",outputs:[],stateMutability:"nonpayable",type:"function",params:{_length:"New round length"},notice:"Set round length"},"setTreasury(address)":{inputs:[{internalType:"address",name:"_treasury",type:"address"}],name:"setTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_treasury:"Treasury address"},notice:"Set treasury wallet address"},"startLottery()":{inputs:[],name:"startLottery",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Start a new lottery round"},"tickets(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tickets",outputs:[{internalType:"uint32",name:"number",type:"uint32"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryFee()":{inputs:[],name:"treasuryFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"userClaimed(address,uint256)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"userClaimed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"viewAllLottery(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_startId",type:"uint256"},{internalType:"uint256",name:"_endId",type:"uint256"}],name:"viewAllLottery",outputs:[{components:[{internalType:"enum DegisLotteryV2.Status",name:"status",type:"uint8"},{internalType:"uint32",name:"treasuryFee",type:"uint32"},{internalType:"uint32",name:"startTime",type:"uint32"},{internalType:"uint32",name:"endTime",type:"uint32"},{internalType:"uint32",name:"finalNumber",type:"uint32"},{internalType:"uint256",name:"ticketPrice",type:"uint256"},{internalType:"uint256[4]",name:"rewardsBreakdown",type:"uint256[4]"},{internalType:"uint256[4]",name:"rewardPerTicketInBracket",type:"uint256[4]"},{internalType:"uint256[4]",name:"countWinnersPerBracket",type:"uint256[4]"},{internalType:"uint256",name:"firstTicketId",type:"uint256"},{internalType:"uint256",name:"firstTicketIdNextRound",type:"uint256"},{internalType:"uint256",name:"amountCollected",type:"uint256"},{internalType:"uint256",name:"pendingRewards",type:"uint256"}],internalType:"struct DegisLotteryV2.Lottery[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",params:{_endId:"End lottery id",_startId:"Start lottery id"},returns:{_0:"allLottery Array of lottery information"},notice:"View lottery information"},"viewNumbersPerTicketId(uint256[])":{inputs:[{internalType:"uint256[]",name:"_ticketIds",type:"uint256[]"}],name:"viewNumbersPerTicketId",outputs:[{internalType:"uint32[]",name:"",type:"uint32[]"}],stateMutability:"view",type:"function",params:{_ticketIds:"Array of ticketId"},returns:{_0:"ticketNumbers Array of ticket numbers"},notice:"View ticker numbers for an array of ticket ids"},"viewRewardPerTicketInBracket(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"viewRewardPerTicketInBracket",outputs:[{internalType:"uint256[4]",name:"",type:"uint256[4]"}],stateMutability:"view",type:"function",returns:{_0:"rewardPerTicketInBracket  Reward per ticket in a given round"},notice:"View reward per ticket in a given round"},"viewRewardsBreakdown(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"viewRewardsBreakdown",outputs:[{internalType:"uint256[4]",name:"",type:"uint256[4]"}],stateMutability:"view",type:"function",notice:"View rewards breakdown for a given lottery round"},"viewRewardsForTicketId(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"},{internalType:"uint256",name:"_ticketId",type:"uint256"}],name:"viewRewardsForTicketId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:'This function will help to find the highest prize bracket      But this computation is encouraged to be done off-chain      Better to get bracket first and then call "_calculateRewardsForTicketId()"',params:{_lotteryId:"Lottery round",_ticketId:"Ticket id"},returns:{_0:"reward Ticket reward"},notice:"View rewards for a given ticket in a given lottery round"},"viewUserRewards(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"uint256",name:"_startRound",type:"uint256"},{internalType:"uint256",name:"_endRound",type:"uint256"}],name:"viewUserRewards",outputs:[{internalType:"uint256[]",name:"userRewards",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_endRound:"End lottery id",_startRound:"Start lottery id",_user:"User address"},returns:{userRewards:"Array of user rewards (round as index)"},notice:"View user rewards between rounds"},"viewWalletTicketIds(address,uint256)":{inputs:[{internalType:"address",name:"_wallet",type:"address"},{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"viewWalletTicketIds",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_lotteryId:"Lottery id to check",_wallet:"Address to check owned tickets"},returns:{_0:"ticketIds Ticket ids this user has in this round"},notice:"Get a user's ticekts in a given lottery round"},"viewWinnerAmount(uint256)":{inputs:[{internalType:"uint256",name:"_lotteryId",type:"uint256"}],name:"viewWinnerAmount",outputs:[{internalType:"uint256[4]",name:"",type:"uint256[4]"}],stateMutability:"view",type:"function",returns:{_0:"countWinnersPerBracket Array of winner ticket amount for each bracket"},notice:"View winner ticket amount for a given lottery round, for each bracket"}}},"contracts/lucky-box/MathLib.sol:MathLib":{source:"contracts/lucky-box/MathLib.sol",name:"MathLib"},"contracts/lucky-box/RandomNumberGeneratorV2.sol:RandomNumberGeneratorV2":{source:"contracts/lucky-box/RandomNumberGeneratorV2.sol",name:"RandomNumberGeneratorV2",constructor:{inputs:[{internalType:"address",name:"_vrfCoordinator",type:"address"},{internalType:"bytes32",name:"_keyHash",type:"bytes32"},{internalType:"uint64",name:"_subscriptionId",type:"uint64"}],stateMutability:"nonpayable",type:"constructor"},events:{"RequestRandomWords(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"requestId",type:"uint256"}],name:"RequestRandomWords",type:"event"}},methods:{"callbackGasLimit()":{inputs:[],name:"callbackGasLimit",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},"coordinator()":{inputs:[],name:"coordinator",outputs:[{internalType:"contract VRFCoordinatorV2Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"degisLottery()":{inputs:[],name:"degisLottery",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"keyHash()":{inputs:[],name:"keyHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"latestLotteryId()":{inputs:[],name:"latestLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"randomResult()":{inputs:[],name:"randomResult",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rawFulfillRandomWords(uint256,uint256[])":{inputs:[{internalType:"uint256",name:"requestId",type:"uint256"},{internalType:"uint256[]",name:"randomWords",type:"uint256[]"}],name:"rawFulfillRandomWords",outputs:[],stateMutability:"nonpayable",type:"function"},"requestConfirmations()":{inputs:[],name:"requestConfirmations",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},"requestRandomWords()":{inputs:[],name:"requestRandomWords",outputs:[],stateMutability:"nonpayable",type:"function"},"s_requestId()":{inputs:[],name:"s_requestId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setCoordinator(address)":{inputs:[{internalType:"address",name:"_coordinator",type:"address"}],name:"setCoordinator",outputs:[],stateMutability:"nonpayable",type:"function"},"setDegisLottery(address)":{inputs:[{internalType:"address",name:"_lottery",type:"address"}],name:"setDegisLottery",outputs:[],stateMutability:"nonpayable",type:"function"},"setKeyHash(bytes32)":{inputs:[{internalType:"bytes32",name:"_keyHash",type:"bytes32"}],name:"setKeyHash",outputs:[],stateMutability:"nonpayable",type:"function"},"setRequestConfirmations(uint16)":{inputs:[{internalType:"uint16",name:"_requestConfirmations",type:"uint16"}],name:"setRequestConfirmations",outputs:[],stateMutability:"nonpayable",type:"function"},"setSubscriptionId(uint64)":{inputs:[{internalType:"uint64",name:"_subscriptionId",type:"uint64"}],name:"setSubscriptionId",outputs:[],stateMutability:"nonpayable",type:"function"},"setWordsPerTime(uint32)":{inputs:[{internalType:"uint32",name:"_wordsPerTime",type:"uint32"}],name:"setWordsPerTime",outputs:[],stateMutability:"nonpayable",type:"function"},"subscriptionId()":{inputs:[],name:"subscriptionId",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"},"wordsPerTime()":{inputs:[],name:"wordsPerTime",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"}}},"contracts/lucky-box/interfaces/IDegisLottery.sol:IDegisLottery":{source:"contracts/lucky-box/interfaces/IDegisLottery.sol",name:"IDegisLottery",methods:{"currentLotteryId()":{inputs:[],name:"currentLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"View current lottery id"},"injectFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"injectFunds",outputs:[],stateMutability:"nonpayable",type:"function",details:"Callable by operator",params:{_amount:"amount to inject in USD"},notice:"Inject funds"}}},"contracts/lucky-box/interfaces/IRandomNumberGenerator.sol:IRandomNumberGenerator":{source:"contracts/lucky-box/interfaces/IRandomNumberGenerator.sol",name:"IRandomNumberGenerator",methods:{"getRandomNumber()":{inputs:[],name:"getRandomNumber",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Views random result"},"latestLotteryId()":{inputs:[],name:"latestLotteryId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"randomResult()":{inputs:[],name:"randomResult",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"requestRandomWords()":{inputs:[],name:"requestRandomWords",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/MockERC20.sol:MockERC20":{source:"contracts/mocks/MockERC20.sol",name:"MockERC20",details:"MockUSD has 6 decimals, this contract is 18 decimals",notice:"MockERC20 for test",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/mocks/MockPTP.sol:MockPTP":{source:"contracts/mocks/MockPTP.sol",name:"MockPTP",methods:{"swap(address,address,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"fromToken",type:"address"},{internalType:"address",name:"toToken",type:"address"},{internalType:"uint256",name:"fromAmount",type:"uint256"},{internalType:"uint256",name:"minimumToAmount",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"actualToAmount",type:"uint256"},{internalType:"uint256",name:"haircut",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/MockUSD.sol:MockUSD":{source:"contracts/mocks/MockUSD.sol",name:"MockUSD",notice:"This is the MockUSD used in testnet         Maximum mint amount is 500k for each user.         Maximum mint amount for every single tx is 100k.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"INITIAL_SUPPLY()":{inputs:[],name:"INITIAL_SUPPLY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/naughty-price/ArbitraryPriceGetter.sol:ArbitraryPriceGetter":{source:"contracts/naughty-price/ArbitraryPriceGetter.sol",name:"ArbitraryPriceGetter",title:"Price Getter for arbitrary contract",notice:'This is the contract for getting price feed from arbitrary contract.         A special case of PriceGetter, not a normal "token price" and usually just a variable from another contract.          E.g. A state variable p inside a contract A should be the settlement price of an option token.              Then get latest price = A.p',events:{"NewPair(string,address,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"policyToken",type:"string"},{indexed:!1,internalType:"address",name:"contractAddress",type:"address"},{indexed:!1,internalType:"string",name:"functionSignature",type:"string"}],name:"NewPair",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SamplePrice(string,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"policyToken",type:"string"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"SamplePrice",type:"event"}},methods:{"addPair(string,address,string,bytes)":{inputs:[{internalType:"string",name:"_baseToken",type:"string"},{internalType:"address",name:"_contractAddress",type:"address"},{internalType:"string",name:"_functionSignature",type:"string"},{internalType:"bytes",name:"_calldata",type:"bytes"}],name:"addPair",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseToken:'Base toke name (e.g. "RoboVault")',_calldata:"Calldata to call the function and get price",_contractAddress:"Target contract address to get price",_functionSignature:'Target function signature (e.g. "getPrice() returns(uint256)")'},notice:"Add a new pair "},"baseTokens(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"baseTokens",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_policyToken",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Policy token name"},returns:{price:"USD price of the base token (1e18 decimal)"},notice:"Get latest price"},"initialize(address)":{inputs:[{internalType:"address",name:"_policyCore",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"contract IPolicyCore",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceFeeds(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"priceFeeds",outputs:[{internalType:"address",name:"contractAddress",type:"address"},{internalType:"string",name:"functionSignature",type:"string"},{internalType:"bytes",name:"callData",type:"bytes"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setBaseToken(string,string)":{inputs:[{internalType:"string",name:"_policyToken",type:"string"},{internalType:"string",name:"_baseToken",type:"string"}],name:"setBaseToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseToken:"Base token name ",_policyToken:"Policy token name "},notice:"Set base token for a policy token         E.g. RoboVault <=> RoboVault_1.2_L_0505          (This is to keep the same interface with other price getters) "},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/naughty-price/IDOPriceGetter.sol:IDOPriceGetter":{source:"contracts/naughty-price/IDOPriceGetter.sol",name:"IDOPriceGetter",title:"Price Getter for IDO Protection",notice:'This is the contract for getting price feed from DEX         IDO projects does not have Chainlink feeds so we use DEX TWAP price as oracle         Workflow:         1. Deploy naughty token for the IDO project and set its type as "IDO"         2. Add ido price feed info by calling "addIDOPair" function         3. Set auto tasks start within PERIOD to endTime to sample prices from DEX         4. Call "settleFinalResult" function in core to settle the final price',events:{"NewIDOPair(string,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"policyToken",type:"string"},{indexed:!1,internalType:"address",name:"pair",type:"address"},{indexed:!1,internalType:"uint256",name:"decimals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"sampleInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"isToken0",type:"uint256"}],name:"NewIDOPair",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SamplePrice(string,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"policyToken",type:"string"},{indexed:!1,internalType:"uint256",name:"priceAverage",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"SamplePrice",type:"event"}},methods:{"PERIOD()":{inputs:[],name:"PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"WAVAX()":{inputs:[],name:"WAVAX",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"addIDOPair(string,address,uint256,uint256,uint256)":{inputs:[{internalType:"string",name:"_policyToken",type:"string"},{internalType:"address",name:"_pair",type:"address"},{internalType:"uint256",name:"_decimals",type:"uint256"},{internalType:"uint256",name:"_interval",type:"uint256"},{internalType:"uint256",name:"_startTime",type:"uint256"}],name:"addIDOPair",outputs:[],stateMutability:"nonpayable",type:"function"},"basePriceGetter()":{inputs:[],name:"basePriceGetter",outputs:[{internalType:"contract IPriceGetter",name:"",type:"address"}],stateMutability:"view",type:"function"},"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_policyToken",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"price",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Policy token name"},returns:{price:"USD price of the base token"},notice:"Get latest price"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_priceGetter",type:"address"},{internalType:"address",name:"_policyCore",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"contract IPolicyCore",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceFeeds(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"priceFeeds",outputs:[{internalType:"address",name:"pair",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"},{internalType:"uint256",name:"sampleInterval",type:"uint256"},{internalType:"uint256",name:"isToken0",type:"uint256"},{internalType:"uint256",name:"priceAverage",type:"uint256"},{internalType:"uint256",name:"priceCumulativeLast",type:"uint256"},{internalType:"uint256",name:"lastTimestamp",type:"uint256"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"samplePrice(string)":{inputs:[{internalType:"string",name:"_policyToken",type:"string"}],name:"samplePrice",outputs:[],stateMutability:"nonpayable",type:"function"},"setPrice(string,uint256)":{inputs:[{internalType:"string",name:"_policyToken",type:"string"},{internalType:"uint256",name:"_price",type:"uint256"}],name:"setPrice",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyToken:"Policy token name",_price:"Price in avax"},notice:"Set price in avax         Price in avax should be in 1e18"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/naughty-price/NPPolicyToken.sol:NPPolicyToken":{source:"contracts/naughty-price/NPPolicyToken.sol",name:"NPPolicyToken",title:"Policy Token for Naughty Price",details:"It is different from the flight delay token.         That is an ERC721 NFT and this is an ERC20 token.",notice:"This is the contract for token price policy token.         It is a ERC20 token with an owner and a minter.         The owner should be the deployer at first.         The minter should be the policyCore contract.",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"address",name:"_minter",type:"address"},{internalType:"uint256",name:"_decimals",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address to burn tokens",_amount:"Amount to be burned"},notice:"Burn some policy tokens"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"It should be the same as its paired stablecoin",notice:"Get the decimals of this token"},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Address to receive the tokens",_amount:"Amount to be minted"},notice:"Mint some policy tokens"},"minter()":{inputs:[],name:"minter",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/naughty-price/NaughtyFactory.sol:NaughtyFactory":{source:"contracts/naughty-price/NaughtyFactory.sol",name:"NaughtyFactory",title:"Naughty Factory",notice:"Factory contract to deploy new price proteciton pools.         Each pool(product) will have a unique naughtyId         Each pool will have its pool token         PolicyToken - Stablecoin         Token 0 may change but Token 1 is always stablecoin.",events:{"IncomeMakerAddressChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldIncomeMaker",type:"address"},{indexed:!1,internalType:"address",name:"newIncomeMaker",type:"address"}],name:"IncomeMakerAddressChanged",type:"event"},"IncomeMakerProportionChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProportion",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newProportion",type:"uint256"}],name:"IncomeMakerProportionChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyCoreAddressChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPolicyCore",type:"address"},{indexed:!1,internalType:"address",name:"newPolicyCore",type:"address"}],name:"PolicyCoreAddressChanged",type:"event"}},methods:{"PAIR_INIT_CODE_HASH()":{inputs:[],name:"PAIR_INIT_CODE_HASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"_nextId()":{inputs:[],name:"_nextId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allPairs(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allPairs",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"allTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allTokens",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"deployPolicyToken(string,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"deployPolicyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",params:{_decimals:"Decimals of the policyToken ",_policyTokenName:"Name of the policyToken"},returns:{_0:"tokenAddress PolicyToken address"},notice:"Deploy a new policy token.         Detail info is included inside the token name and handled inside policyCore.        "},"deployPool(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",params:{_deadline:"Deadline of the pool",_feeRate:"Fee rate given to LP holders ",_policyTokenAddress:"Address of policy token",_stablecoin:"Address of the stable coin"},returns:{_0:"poolAddress Address of the pool"},notice:"After deploy the policytoken and get the address,         we deploy the policyToken - stablecoin pool contract. "},"getAllTokens()":{inputs:[],name:"getAllTokens",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",returns:{_0:"tokens All tokens"},notice:"Get the all tokens that have been deployed"},"getInitCodeHashForPolicyToken(string,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"getInitCodeHashForPolicyToken",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"For test/task convinience, pre-compute the address      Ethers.js:      Address = ethers.utils.getCreate2Address(factory address, salt, INIT_CODE_HASH)      salt = keccak256(abi.encodePacked(_policyTokenName))",params:{_decimals:"Token decimals of this policy token",_tokenName:"Name of the policy token to be deployed"},notice:"Get the INIT_CODE_HASH for policy tokens with parameters"},"getPairAddress(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress1",type:"address"},{internalType:"address",name:"_tokenAddress2",type:"address"}],name:"getPairAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_tokenAddress1:"Address of token1",_tokenAddress2:"Address of toekn2"},returns:{_0:"Pool address of the two tokens"},notice:"Get the pair address deployed by the factory         PolicyToken address first, and then stablecoin address         The order of the tokens will be sorted inside the function"},"incomeMaker()":{inputs:[],name:"incomeMaker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"incomeMakerProportion()":{inputs:[],name:"incomeMakerProportion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize()":{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setIncomeMakerAddress(address)":{inputs:[{internalType:"address",name:"_incomeMaker",type:"address"}],name:"setIncomeMakerAddress",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner",params:{_incomeMaker:"New income maker address"},notice:"Set income maker address"},"setIncomeMakerProportion(uint256)":{inputs:[{internalType:"uint256",name:"_proportion",type:"uint256"}],name:"setIncomeMakerProportion",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner",params:{_proportion:"New proportion to income maker contract"},notice:"Set income maker proportion"},"setPolicyCoreAddress(address)":{inputs:[{internalType:"address",name:"_policyCore",type:"address"}],name:"setPolicyCoreAddress",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner         < PolicyCore should be the minter of policyToken >         < This process is done inside constructor >",params:{_policyCore:"Address of policyCore contract"},notice:"Remember to call this function to set the policyCore address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/naughty-price/NaughtyPair.sol:NaughtyPair":{source:"contracts/naughty-price/NaughtyPair.sol",name:"NaughtyPair",title:"Naughty Pair",notice:"This is the contract for the naughtyPrice swapping pair.         Every time a new naughtyPrice product is online you need to deploy this contract.         The contract will be initialized with two tokens and a deadline.         Token0 will be policy tokens and token1 will be stablecoins.         The swaps are only availale before the deadline.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},"Mint(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"}],name:"Mint",type:"event"},"ReserveUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"reserve0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reserve1",type:"uint256"}],name:"ReserveUpdated",type:"event"},"Swap(address,uint256,uint256,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amountAIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountBIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountAOut",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountBOut",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"MINIMUM_LIQUIDITY()":{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address)":{inputs:[{internalType:"address",name:"_to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_to:"User address"},returns:{amount0:"Amount of token0 to be sent back",amount1:"Amount of token1 to be sent back"},notice:"Burn LP tokens give back the original tokens"},"deadline()":{inputs:[],name:"deadline",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeRate()":{inputs:[],name:"feeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"}],stateMutability:"view",type:"function",details:"This function always put policy token at the first place!",returns:{_reserve0:"Reserve of token0",_reserve1:"Reserve of token1"},notice:"Get reserve0 (Policy token) and reserve1 (stablecoin)."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"initialize(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_deadline:"Deadline for this pool",_feeRate:"Fee rate to LP holders (1000 <=> 100%)",_token0:"Token0 address (policy token address)",_token1:"Token1 address (stablecoin address)"},notice:"Initialize the contract status after the deployment by factory"},"kLast()":{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"mint(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{to:"The user address"},returns:{liquidity:"The LP token amount"},notice:"Mint LP Token to liquidity providers         Called when adding liquidity."},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"swap(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"_amount0Out",type:"uint256"},{internalType:"uint256",name:"_amount1Out",type:"uint256"},{internalType:"address",name:"_to",type:"address"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount0Out:"Amount of token0 to be given out (may be 0)",_amount1Out:"Amount of token1 to be given out (may be 0)",_to:"Address to receive the swap result"},notice:"Finish the swap process"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Syncrinize the status of this pool"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"unlocked()":{inputs:[],name:"unlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/NaughtyRouter.sol:NaughtyRouter":{source:"contracts/naughty-price/NaughtyRouter.sol",name:"NaughtyRouter",title:"NaughtyRouter",notice:"Router for the pool, you can add/remove liquidity or swap A for B.         Swapping fee rate is 2% and all of them are given to LP.         Very similar logic with Uniswap V2.",events:{"BuyerTokenChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBuyerToken",type:"address"},{indexed:!1,internalType:"address",name:"newBuyerToken",type:"address"}],name:"BuyerTokenChanged",type:"event"},"LiquidityAdded(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pairAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidity",type:"uint256"}],name:"LiquidityAdded",type:"event"},"LiquidityRemoved(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pairAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountA",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountB",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidity",type:"uint256"}],name:"LiquidityRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyCoreChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPolicyCore",type:"address"},{indexed:!1,internalType:"address",name:"newPolicyCore",type:"address"}],name:"PolicyCoreChanged",type:"event"}},methods:{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_amountADesired",type:"uint256"},{internalType:"uint256",name:"_amountBDesired",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountADesired:"Amount of policyToken desired",_amountAMin:"Minimum amoutn of policy token",_amountBDesired:"Amount of stablecoin desired",_amountBMin:"Minimum amount of stablecoin",_deadline:"Transaction will revert after this deadline",_to:"Address that receive the lp token, normally the user himself",_tokenA:"Address of policyToken",_tokenB:"Address of stablecoin"},returns:{amountA:"Amount of tokenA to be input",amountB:"Amount of tokenB to be input",liquidity:"LP token to be mint"},notice:"Add liquidity function"},"addLiquidityWithUSD(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_amountADesired",type:"uint256"},{internalType:"uint256",name:"_amountBDesired",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"addLiquidityWithUSD",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Only difference with addLiquidity is that mintPolicyTokenForUser",params:{_amountADesired:"Amount of policyToken desired",_amountAMin:"Minimum amount of policy token",_amountBDesired:"Amount of stablecoin desired",_amountBMin:"Minimum amount of stablecoin",_deadline:"Transaction will revert after this deadline",_to:"Address that receive the lp token, normally the user himself",_tokenA:"Address of policyToken",_tokenB:"Address of stablecoin"},notice:"Add liquidity but only provide stablecoins"},"buyerToken()":{inputs:[],name:"buyerToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_buyerToken",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"policyCore()":{inputs:[],name:"policyCore",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_liquidity",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountAMin:"Minimum amount of tokenA given out",_amountBMin:"Minimum amount of tokenB given out",_deadline:"Deadline of this transaction",_liquidity:"The lptoken amount to be removed",_to:"User address",_tokenA:"Address of policy token",_tokenB:"Address of stablecoin"},returns:{amountA:"Amount of token0 given out",amountB:"Amount of token1 given out"},notice:"Remove liquidity from the pool"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setBuyerToken(address)":{inputs:[{internalType:"address",name:"_buyerToken",type:"address"}],name:"setBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_buyerToken:"Address of new buyer token"},notice:"Set the address of buyer token"},"setNaughtyFactory(address)":{inputs:[{internalType:"address",name:"_naughtyFactory",type:"address"}],name:"setNaughtyFactory",outputs:[],stateMutability:"nonpayable",type:"function",params:{_naughtyFactory:"Address of new naughty factory"},notice:"Set the address of factory"},"setPolicyCore(address)":{inputs:[{internalType:"address",name:"_coreAddress",type:"address"}],name:"setPolicyCore",outputs:[],stateMutability:"nonpayable",type:"function",params:{_coreAddress:"Address of new policyCore"},notice:"Set the address of policyCore"},"swapExactTokensforTokens(uint256,uint256,address,address,address,uint256)":{inputs:[{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"swapExactTokensforTokens",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountIn:"Fixed token input",_amountOutMin:"Minimum token output",_deadline:"Deadline for this specific swap",_to:"User address",_tokenIn:"Address of input token",_tokenOut:"Address of output token"},returns:{amountOut:"Amounts to be really given out"},notice:"Amount in is fixed"},"swapTokensforExactTokens(uint256,uint256,address,address,address,uint256)":{inputs:[{internalType:"uint256",name:"_amountInMax",type:"uint256"},{internalType:"uint256",name:"_amountOut",type:"uint256"},{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"swapTokensforExactTokens",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_amountInMax:"Maximum token input",_amountOut:"Fixed token output",_deadline:"Deadline for this specific swap",_to:"User address",_tokenIn:"Address of input token",_tokenOut:"Address of output token"},returns:{amountIn:"Amounts to be really put in"},notice:"Amount out is fixed"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/naughty-price/PolicyCore.sol:PolicyCore":{source:"contracts/naughty-price/PolicyCore.sol",name:"PolicyCore",title:"PolicyCore",details:"Most of the functions to be called from outside will use the name of policyToken         rather than the address (easy to read).         Other variables or functions still use address to index.         The rule of policyToken naming is:              Original Token Name(with decimals) + Strike Price + Lower or Higher + Date         E.g.  AVAX_30.0_L_2101, BTC_30000.0_L_2102, ETH_8000.0_H_2109         (the original name need to be the same as in the chainlink oracle)         There are three decimals for a policy token:              1. Name decimals: Only for generating the name of policyToken              2. Token decimals: The decimals of the policyToken                 (should be the same as the paired stablecoin)              3. Price decimals: Always 18. The oracle result will be transferred for settlement",notice:"Core logic of Naughty Price Product         Preset:              (Done in the naughtyFactory contract)              1. Deploy policyToken contract              2. Deploy policyToken-Stablecoin pool contract         User Interaction:              1. Deposit Stablecoin and mint PolicyTokens              2. Redeem their Stablecoin and burn the PolicyTokens (before settlement)              3. Claim for payout with PolicyTokens (after settlement)         PolicyTokens are minted with the ratio 1:1 to Stablecoin         The PolicyTokens are traded in the pool with CFMM (xy=k)         When the event happens, a PolicyToken can be burned for claiming 1 Stablecoin.         When the event does not happen, the PolicyToken depositors can         redeem their 1 deposited Stablecoin",events:{"ArbitraryPriceGetterChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldArbitraryPriceGetter",type:"address"},{indexed:!1,internalType:"address",name:"newArbitraryPriceGetter",type:"address"}],name:"ArbitraryPriceGetterChanged",type:"event"},"DelegateDeposit(address,address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"payerAddress",type:"address"},{indexed:!1,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DelegateDeposit",type:"event"},"Deposit(address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!0,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!0,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposit",type:"event"},"FinalResultSettled(string,uint256,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"_policyTokenName",type:"string"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"bool",name:"isHappened",type:"bool"}],name:"FinalResultSettled",type:"event"},"IDOPriceGetterChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPriceGetter",type:"address"},{indexed:!1,internalType:"address",name:"newPriceGetter",type:"address"}],name:"IDOPriceGetterChanged",type:"event"},"ILMChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldILM",type:"address"},{indexed:!1,internalType:"address",name:"newILM",type:"address"}],name:"ILMChanged",type:"event"},"IncomeSharingChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldIncomeSharing",type:"address"},{indexed:!1,internalType:"address",name:"newIncomeSharing",type:"address"}],name:"IncomeSharingChanged",type:"event"},"IncomeToLotteryChanged(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldToLottery",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newToLottery",type:"uint256"}],name:"IncomeToLotteryChanged",type:"event"},"LotteryChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldLotteryAddress",type:"address"},{indexed:!1,internalType:"address",name:"newLotteryAddress",type:"address"}],name:"LotteryChanged",type:"event"},"NaughtyRouterChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldRouter",type:"address"},{indexed:!1,internalType:"address",name:"newRouter",type:"address"}],name:"NaughtyRouterChanged",type:"event"},"NewStablecoinAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_newStablecoin",type:"address"}],name:"NewStablecoinAdded",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PolicyTokenDeployed(string,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"tokenName",type:"string"},{indexed:!1,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenDecimals",type:"uint256"},{indexed:!1,internalType:"uint256",name:"deadline",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settleTimestamp",type:"uint256"}],name:"PolicyTokenDeployed",type:"event"},"PoolDeployed(address,address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"address",name:"policyTokenAddress",type:"address"},{indexed:!1,internalType:"address",name:"stablecoin",type:"address"}],name:"PoolDeployed",type:"event"},"Redeem(address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!0,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!0,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Redeem",type:"event"},"RedeemAfterSettlement(address,string,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!0,internalType:"string",name:"policyTokenName",type:"string"},{indexed:!0,internalType:"address",name:"stablecoin",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RedeemAfterSettlement",type:"event"},"UpdateUserQuota(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"address",name:"policyTokenAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UpdateUserQuota",type:"event"}},methods:{"ILMContract()":{inputs:[],name:"ILMContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"_generateName(string,uint256,uint256,bool,string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"uint256",name:"_decimals",type:"uint256"},{internalType:"uint256",name:"_strikePrice",type:"uint256"},{internalType:"bool",name:"_isCall",type:"bool"},{internalType:"string",name:"_round",type:"string"}],name:"_generateName",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function",params:{_decimals:"Decimals of the name generation (0,1=>1, 2=>2)",_isCall:"The policy's payoff is triggered when higher(true) or lower(false)",_round:"Round of the policy, named by <month><day> (e.g. 0320, 1215)",_strikePrice:"Strike price of the policy (18 decimals)",_tokenName:"Name of the stike token (BTC, ETH, AVAX...)"},notice:"Generate the policy token name"},"_returnZeroes(uint256)":{inputs:[{internalType:"uint256",name:"num",type:"uint256"}],name:"_returnZeroes",outputs:[{internalType:"string",name:"zeroString",type:"string"}],stateMutability:"pure",type:"function"},"addStablecoin(address)":{inputs:[{internalType:"address",name:"_newStablecoin",type:"address"}],name:"addStablecoin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newStablecoin:"Address of the new stablecoin"},notice:"Add a new supported stablecoin"},"allPolicyTokens(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"allPolicyTokens",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"arbitraryPriceGetter()":{inputs:[],name:"arbitraryPriceGetter",outputs:[{internalType:"contract IPriceGetter",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",details:"It is done after result settlement and only if the result is true",params:{_amount:"Amount of stablecoin",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stable coin"},notice:"Claim a payoff based on policy tokens"},"collectIncome(address)":{inputs:[{internalType:"address",name:"_stablecoin",type:"address"}],name:"collectIncome",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can be done by anyone, only when there is some income to be distributed      For each stablecoin, this function need to called separately",params:{_stablecoin:"Address of stablecoin"},notice:"Collect the income"},"delegateDeposit(string,address,uint256,address)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"delegateDeposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only called by the router contract",params:{_amount:"Amount of stablecoin",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the sable coin",_user:"Address to receive the policy tokens"},notice:"Delegate deposit (deposit and mint for other addresses)"},"deployPolicyToken(string,address,bool,uint256,uint256,uint256,string,uint256,uint256,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"bool",name:"_isCall",type:"bool"},{internalType:"uint256",name:"_nameDecimals",type:"uint256"},{internalType:"uint256",name:"_tokenDecimals",type:"uint256"},{internalType:"uint256",name:"_strikePrice",type:"uint256"},{internalType:"string",name:"_round",type:"string"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_settleTimestamp",type:"uint256"},{internalType:"uint256",name:"_poolType",type:"uint256"}],name:"deployPolicyToken",outputs:[],stateMutability:"nonpayable",type:"function",details:'Only the owner can deploy new policy tokens.      The name form is like "Token_Price_Direction_Date" ("AVAX_50_L_2203") and is built inside the contract.      Name decimals and token decimals are different here.      Token decimals = Stablecoin decimals      For normal tokens: The original token name should be the same in Chainlink PriceFeeds.                         Those tokens that are not listed on Chainlink are not supported.      For DEX tokens:    The original token should have a valid DEX pair and be manually set in IDOPriceGetter.      For arbitrary tokens: The original token\'s price source should be manually set in ArbitraryPriceGetter.',params:{_deadline:"Deadline of this policy token (deposit / redeem / swap)",_isCall:"The policy is for higher or lower than the strike price (call / put)",_nameDecimals:"Decimals of this token's name (0~18)",_poolType:"_poolType: 0 normal 1 IDO 2 arbitrary",_round:"Round of the token (e.g. 2203 -> expired at 22 March)",_settleTimestamp:"Can settle after this timestamp (for oracle)",_stablecoin:"Address of the stablecoin (check decimals here, should be the same stablecoin when deploying pools)",_strikePrice:"Strike price of the policy (have already been transferred with 1e18)",_tokenDecimals:"Decimals of this token's value (0~18) (same as paired stablecoin)",_tokenName:"Name of the original token (e.g. AVAX, BTC, ETH...)"},notice:"Deploy a new policy token and return the token address."},"deployPool(string,address,uint256,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_poolDeadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function",params:{_feeRate:"Fee rate given to LP holders.",_policyTokenName:"Name of the policy token.",_poolDeadline:"Swapping deadline of the pool (normally the same as the token's deadline).",_stablecoin:"Address of the stable coin."},notice:"Deploy a new pair (pool).         The policy token should be already deployed.         Caller can be the owner or ILM contract."},"deposit(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of stablecoin",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stable coin"},notice:"Deposit stablecoins and get policy tokens"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"contract INaughtyFactory",name:"",type:"address"}],stateMutability:"view",type:"function"},"findAddressbyName(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"findAddressbyName",outputs:[{internalType:"address",name:"policyTokenAddress",type:"address"}],stateMutability:"view",type:"function",params:{_policyTokenName:'Name of the policy token (e.g. "AVAX_30_L_2103")'},returns:{policyTokenAddress:"Address of the policy token"},notice:"Find the token address by its name"},"findNamebyAddress(address)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"findNamebyAddress",outputs:[{internalType:"string",name:"policyTokenName",type:"string"}],stateMutability:"view",type:"function",params:{_policyTokenAddress:"Address of the policy token"},returns:{policyTokenName:"Name of the policy token"},notice:"Find the token name by its address"},"getAllTokens()":{inputs:[],name:"getAllTokens",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"nameDecimals",type:"uint256"},{internalType:"uint256",name:"tokenDecimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct PolicyCore.PolicyTokenInfo[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",details:"Include all active&expired tokens",returns:{_0:"tokensInfo Token information list"},notice:"Get the information about all the tokens"},"getPolicyTokenInfo(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"getPolicyTokenInfo",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"nameDecimals",type:"uint256"},{internalType:"uint256",name:"tokenDecimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct PolicyCore.PolicyTokenInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function",params:{_policyTokenName:'Name of the policy token (e.g. "AVAX30L202103")'},returns:{_0:"policyTokenInfo PolicyToken detail information"},notice:"Find the token information by its name"},"getUserQuota(address,address)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"getUserQuota",outputs:[{internalType:"uint256",name:"_quota",type:"uint256"}],stateMutability:"view",type:"function",params:{_policyTokenAddress:"Address of the policy token",_user:"Address of the user to be checked"},returns:{_quota:"User's quota result"},notice:"Get a user's quota for a certain policy token"},"idoPriceGetter()":{inputs:[],name:"idoPriceGetter",outputs:[{internalType:"contract IPriceGetter",name:"",type:"address"}],stateMutability:"view",type:"function"},"incomeSharing()":{inputs:[],name:"incomeSharing",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_factory",type:"address"},{internalType:"address",name:"_priceGetter",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_factory:"Address of naughty factory",_priceGetter:"Address of the oracle contract"},notice:"Constructor, for some addresses"},"isArbitraryPool(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"isArbitraryPool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isIDOPool(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"isIDOPool",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lottery()":{inputs:[],name:"lottery",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"naughtyRouter()":{inputs:[],name:"naughtyRouter",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pendingIncomeToLottery(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pendingIncomeToLottery",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"pendingIncomeToSharing(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pendingIncomeToSharing",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"policyTokenAddressToName(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"policyTokenAddressToName",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"policyTokenInfoMapping(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"policyTokenInfoMapping",outputs:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"nameDecimals",type:"uint256"},{internalType:"uint256",name:"tokenDecimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],stateMutability:"view",type:"function"},"priceGetter()":{inputs:[],name:"priceGetter",outputs:[{internalType:"contract IPriceGetter",name:"",type:"address"}],stateMutability:"view",type:"function"},"redeem(string,address,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"redeem",outputs:[],stateMutability:"nonpayable",type:"function",details:"Redeem happens before the deadline and is different from claim/settle",params:{_amount:"Amount to redeem",_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stablecoin"},notice:"Burn policy tokens and redeem stablecoins"},"redeemAfterSettlement(string,address)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"}],name:"redeemAfterSettlement",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyTokenName:"Name of the policy token",_stablecoin:"Address of the stablecoin"},notice:"Redeem policy tokens and get stablecoins by the user himeself"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setArbitraryPriceGetter(address)":{inputs:[{internalType:"address",name:"_arbitraryPriceGetter",type:"address"}],name:"setArbitraryPriceGetter",outputs:[],stateMutability:"nonpayable",type:"function"},"setIDOPriceGetter(address)":{inputs:[{internalType:"address",name:"_idoPriceGetter",type:"address"}],name:"setIDOPriceGetter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_idoPriceGetter:"Address of the new IDO price getter contract"},notice:"Set IDO price getter contract"},"setILMContract(address)":{inputs:[{internalType:"address",name:"_ILM",type:"address"}],name:"setILMContract",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ILM:"Address of the new ILM"},notice:"Change the address of ILM"},"setIncomeSharing(address)":{inputs:[{internalType:"address",name:"_incomeSharing",type:"address"}],name:"setIncomeSharing",outputs:[],stateMutability:"nonpayable",type:"function",params:{_incomeSharing:"Address of the new incomeSharing"},notice:"Change the address of emergency pool"},"setIncomeToLottery(uint256)":{inputs:[{internalType:"uint256",name:"_toLottery",type:"uint256"}],name:"setIncomeToLottery",outputs:[],stateMutability:"nonpayable",type:"function",details:"The remaining part will be distributed to incomeSharing",params:{_toLottery:"Proportion to lottery"},notice:"Change the income part to lottery"},"setLottery(address)":{inputs:[{internalType:"address",name:"_lotteryAddress",type:"address"}],name:"setLottery",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lotteryAddress:"Address of the new lottery"},notice:"Change the address of lottery"},"setNaughtyRouter(address)":{inputs:[{internalType:"address",name:"_router",type:"address"}],name:"setNaughtyRouter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_router:"Address of the new naughty router"},notice:"Change the address of naughty router"},"settleFinalResult(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"settleFinalResult",outputs:[],stateMutability:"nonpayable",type:"function",params:{_policyTokenName:"Name of the policy token"},notice:"Get the final price from the PriceGetter contract"},"settleResult(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"settleResult",outputs:[{internalType:"uint256",name:"price",type:"uint256"},{internalType:"bool",name:"isHappened",type:"bool"},{internalType:"bool",name:"alreadySettled",type:"bool"},{internalType:"uint256",name:"currentDistributionIndex",type:"uint256"}],stateMutability:"view",type:"function"},"supportedStablecoin(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"supportedStablecoin",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"toLotteryPart()":{inputs:[],name:"toLotteryPart",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateUserQuota(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_policyToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"updateUserQuota",outputs:[],stateMutability:"nonpayable",type:"function",details:"When you claim your liquidity from ILM, you will get normal quota as you are using policyCore",params:{_amount:"Quota amount",_policyToken:"PolicyToken address",_user:"User address"},notice:"Update user quota from ILM when claim"},"whichStablecoin(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"whichStablecoin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/PriceGetter.sol:PriceGetter":{source:"contracts/naughty-price/PriceGetter.sol",name:"PriceGetter",title:"Price Getter",details:"The price from chainlink priceFeed has different decimals, be careful.",notice:"This is the contract for getting price feed from chainlink.         The contract will keep a record from tokenName => priceFeed Address.         Got the sponsorship and collaboration with Chainlink.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"LatestPriceGet(uint80,int256,uint256,uint256,uint80)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint80",name:"roundID",type:"uint80"},{indexed:!1,internalType:"int256",name:"price",type:"int256"},{indexed:!1,internalType:"uint256",name:"startedAt",type:"uint256"},{indexed:!1,internalType:"uint256",name:"timeStamp",type:"uint256"},{indexed:!1,internalType:"uint80",name:"answeredInRound",type:"uint80"}],name:"LatestPriceGet",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PriceFeedChanged(string,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"tokenName",type:"string"},{indexed:!1,internalType:"address",name:"feedAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"decimals",type:"uint256"}],name:"PriceFeedChanged",type:"event"}},methods:{"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_tokenName:"Address of the token"},returns:{_0:"price The latest price"},notice:"Get latest price of a token"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"priceFeedInfo(string)":{inputs:[{internalType:"string",name:"",type:"string"}],name:"priceFeedInfo",outputs:[{internalType:"address",name:"priceFeedAddress",type:"address"},{internalType:"uint256",name:"decimals",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setPriceFeed(string,address,uint256)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"address",name:"_feedAddress",type:"address"},{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only callable by the owner      The price result decimal should be less than 18",params:{_decimals:"Decimals of this price feed service",_feedAddress:"Price feed oracle address",_tokenName:"Address of the token"},notice:"Set a price feed oracle address for a token"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/naughty-price/interfaces/INPPolicyToken.sol:INPPolicyToken":{source:"contracts/naughty-price/interfaces/INPPolicyToken.sol",name:"INPPolicyToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/naughty-price/interfaces/INaughtyFactory.sol:INaughtyFactory":{source:"contracts/naughty-price/interfaces/INaughtyFactory.sol",name:"INaughtyFactory",methods:{"deployPolicyToken(string,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"uint256",name:"_decimals",type:"uint256"}],name:"deployPolicyToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"deployPool(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"getPairAddress(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress1",type:"address"},{internalType:"address",name:"_tokenAddress2",type:"address"}],name:"getPairAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"incomeMaker()":{inputs:[],name:"incomeMaker",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"incomeMakerProportion()":{inputs:[],name:"incomeMakerProportion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/naughty-price/interfaces/INaughtyPair.sol:INaughtyPair":{source:"contracts/naughty-price/interfaces/INaughtyPair.sol",name:"INaughtyPair",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"deadline()":{inputs:[],name:"deadline",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"feeRate()":{inputs:[],name:"feeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"}],stateMutability:"view",type:"function"},"initialize(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swap(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/naughty-price/interfaces/INaughtyRouter.sol:INaughtyRouter":{source:"contracts/naughty-price/interfaces/INaughtyRouter.sol",name:"INaughtyRouter",methods:{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_amountADesired",type:"uint256"},{internalType:"uint256",name:"_amountBDesired",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"addLiquidityWithUSD(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_amountADesired",type:"uint256"},{internalType:"uint256",name:"_amountBDesired",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"addLiquidityWithUSD",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_tokenA",type:"address"},{internalType:"address",name:"_tokenB",type:"address"},{internalType:"uint256",name:"_liquidity",type:"uint256"},{internalType:"uint256",name:"_amountAMin",type:"uint256"},{internalType:"uint256",name:"_amountBMin",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensforTokens(uint256,uint256,address,address,address,uint256)":{inputs:[{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"address",name:"_tokenIn",type:"address"},{internalType:"address",name:"_tokenOut",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"swapExactTokensforTokens",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/naughty-price/interfaces/IPolicyCore.sol:IPolicyCore":{source:"contracts/naughty-price/interfaces/IPolicyCore.sol",name:"IPolicyCore",methods:{"delegateDeposit(string,address,uint256,address)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_user",type:"address"}],name:"delegateDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},"deployPool(string,address,uint256,uint256)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"},{internalType:"address",name:"_stablecoin",type:"address"},{internalType:"uint256",name:"_poolDeadline",type:"uint256"},{internalType:"uint256",name:"_feeRate",type:"uint256"}],name:"deployPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"findAddressbyName(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"findAddressbyName",outputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"}],stateMutability:"view",type:"function",notice:"Find the address by its name"},"findNamebyAddress(address)":{inputs:[{internalType:"address",name:"_policyTokenAddress",type:"address"}],name:"findNamebyAddress",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"Find the name by address"},"getPolicyTokenInfo(string)":{inputs:[{internalType:"string",name:"_policyTokenName",type:"string"}],name:"getPolicyTokenInfo",outputs:[{components:[{internalType:"address",name:"policyTokenAddress",type:"address"},{internalType:"bool",name:"isCall",type:"bool"},{internalType:"uint256",name:"nameDecimals",type:"uint256"},{internalType:"uint256",name:"tokenDecimals",type:"uint256"},{internalType:"uint256",name:"strikePrice",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"settleTimestamp",type:"uint256"}],internalType:"struct IPolicyCore.PolicyTokenInfo",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"supportedStablecoin(address)":{inputs:[{internalType:"address",name:"_coinAddress",type:"address"}],name:"supportedStablecoin",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"Check whether the stablecoin is supported"},"updateUserQuota(address,address,uint256)":{inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_policyToken",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"updateUserQuota",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/naughty-price/interfaces/IPriceGetter.sol:IPriceGetter":{source:"contracts/naughty-price/interfaces/IPriceGetter.sol",name:"IPriceGetter",methods:{"getLatestPrice(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getLatestPrice",outputs:[{internalType:"uint256",name:"_price",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getPriceFeedAddress(string)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"}],name:"getPriceFeedAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setPriceFeed(string,address)":{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"address",name:"_feedAddress",type:"address"}],name:"setPriceFeed",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/naughty-price/interfaces/IUniswapV2Pair.sol:IUniswapV2Pair":{source:"contracts/naughty-price/interfaces/IUniswapV2Pair.sol",name:"IUniswapV2Pair",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},"Mint(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},"Swap(address,uint256,uint256,uint256,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},"Sync(uint112,uint112)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:!1,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"MINIMUM_LIQUIDITY()":{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"PERMIT_TYPEHASH()":{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burn(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getReserves()":{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"reserve0",type:"uint112"},{internalType:"uint112",name:"reserve1",type:"uint112"},{internalType:"uint32",name:"blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"kLast()":{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"mint(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},"price0CumulativeLast()":{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"price1CumulativeLast()":{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"skim(address)":{inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],stateMutability:"nonpayable",type:"function"},"swap(uint256,uint256,address,bytes)":{inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},"sync()":{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},"token0()":{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"token1()":{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/proxy/Initializable.sol:Initializable":{source:"contracts/proxy/Initializable.sol",name:"Initializable",details:"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```"},"contracts/proxy/OwnableUpgradeable.sol:OwnableUpgradeable":{source:"contracts/proxy/OwnableUpgradeable.sol",name:"OwnableUpgradeable",details:"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/proxy/ProxyAdmin.sol:ProxyAdmin":{source:"contracts/proxy/ProxyAdmin.sol",name:"ProxyAdmin",details:"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"changeProxyAdmin(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"newAdmin",type:"address"}],name:"changeProxyAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"upgrade(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"}],name:"upgrade",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}}},"contracts/proxy/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy":{source:"contracts/proxy/TransparentUpgradeableProxy.sol",name:"TransparentUpgradeableProxy",details:"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"admin_",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],stateMutability:"payable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/staking/CoreStakingPool.sol:CoreStakingPool":{source:"contracts/staking/CoreStakingPool.sol",name:"CoreStakingPool",constructor:{inputs:[{internalType:"address",name:"_degisToken",type:"address"},{internalType:"address",name:"_poolToken",type:"address"},{internalType:"address",name:"_factory",type:"address"},{internalType:"uint256",name:"_startTimestamp",type:"uint256"},{internalType:"uint256",name:"_degisPerSecond",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Harvest(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Harvest",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockUntil",type:"uint256"}],name:"Stake",type:"event"},"Unstake(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstake",type:"event"}},methods:{"FEE_RATE()":{inputs:[],name:"FEE_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"accDegisPerWeight()":{inputs:[],name:"accDegisPerWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerSecond()":{inputs:[],name:"degisPerSecond",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getUserDeposits(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserDeposits",outputs:[{components:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"lockedFrom",type:"uint256"},{internalType:"uint256",name:"lockedUntil",type:"uint256"}],internalType:"struct IPool.Deposit[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",params:{_user:"User address"},returns:{_0:"deposits[] User's deposit info"},notice:"Get a user's deposit info"},"harvest()":{inputs:[],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Harvest your staking rewards"},"lastRewardTimestamp()":{inputs:[],name:"lastRewardTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"pendingReward(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_user:"User address"},returns:{_0:"pendingReward User's pending rewards"},notice:"Get pending rewards"},"poolToken()":{inputs:[],name:"poolToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"rewardToWeight(uint256,uint256)":{inputs:[{internalType:"uint256",name:"reward",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"rewardToWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"setDegisPerSecond(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerSecond",type:"uint256"}],name:"setDegisPerSecond",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_lockUntil",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to stake",_lockUntil:"Lock until timestamp"},notice:"Stake tokens"},"startTimestamp()":{inputs:[],name:"startTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"timeToWeight(uint256)":{inputs:[{internalType:"uint256",name:"_length",type:"uint256"}],name:"timeToWeight",outputs:[{internalType:"uint256",name:"_weight",type:"uint256"}],stateMutability:"pure",type:"function",details:"1 year = 2e6      1 week = 1e6      2 weeks = 1e6 * ( 1 + 1 / 365)",notice:"Lock time => Lock weight"},"totalWeight()":{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."},"unstake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_depositId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to unstake",_depositId:"Deposit id to be unstaked"},notice:"Unstake tokens"},"updatePool()":{inputs:[],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Update the pool without fee"},"users(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"totalWeight",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},"weightToReward(uint256,uint256)":{inputs:[{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"weightToReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/staking/StakingPoolFactory.sol:StakingPoolFactory":{source:"contracts/staking/StakingPoolFactory.sol",name:"StakingPoolFactory",constructor:{inputs:[{internalType:"address",name:"_degisToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"DegisPerSecondChanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"pool",type:"address"},{indexed:!1,internalType:"uint256",name:"degisPerSecond",type:"uint256"}],name:"DegisPerSecondChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PoolRegistered(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"by",type:"address"},{indexed:!0,internalType:"address",name:"poolToken",type:"address"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"degisPerSecond",type:"uint256"}],name:"PoolRegistered",type:"event"}},methods:{"createPool(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_poolToken",type:"address"},{internalType:"uint256",name:"_startTimestamp",type:"uint256"},{internalType:"uint256",name:"_degisPerSecond",type:"uint256"}],name:"createPool",outputs:[],stateMutability:"nonpayable",type:"function",details:"Only called by the owner",params:{_degisPerSecond:"Reward speed",_poolToken:"Pool token address",_startTimestamp:"Start timestamp for reward"},notice:"Creates a staking pool and registers it within the factory"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPoolAddress(address)":{inputs:[{internalType:"address",name:"_poolToken",type:"address"}],name:"getPoolAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_poolToken:"Pool token address"},notice:"Get the pool address from pool token address"},"getPoolData(address)":{inputs:[{internalType:"address",name:"_poolToken",type:"address"}],name:"getPoolData",outputs:[{components:[{internalType:"address",name:"poolToken",type:"address"},{internalType:"address",name:"poolAddress",type:"address"},{internalType:"uint256",name:"startTimestamp",type:"uint256"},{internalType:"uint256",name:"degisPerSecond",type:"uint256"}],internalType:"struct StakingPoolFactory.PoolData",name:"",type:"tuple"}],stateMutability:"view",type:"function",params:{_poolToken:"Pool token address"},returns:{_0:"poolData Pool data struct"},notice:"Get pool data from pool token address"},"mintReward(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintReward",outputs:[],stateMutability:"nonpayable",type:"function",details:"With this function, we only need to add factory contract into minterList",params:{_amount:"Amount of degis tokens to mint",_to:"The address to mint tokens to"},notice:"Mint degis tokens as reward"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"poolExists(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"poolExists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"pools(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"pools",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"setDegisPerSecond(address,uint256)":{inputs:[{internalType:"address",name:"_pool",type:"address"},{internalType:"uint256",name:"_degisPerSecond",type:"uint256"}],name:"setDegisPerSecond",outputs:[],stateMutability:"nonpayable",type:"function",params:{_degisPerSecond:"Degis reward per second",_pool:"Address of the staking pool"},notice:"Set degis per second for a pool"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/staking/abstracts/BasePool.sol:BasePool":{source:"contracts/staking/abstracts/BasePool.sol",name:"BasePool",events:{"Harvest(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Harvest",type:"event"},"Stake(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockUntil",type:"uint256"}],name:"Stake",type:"event"},"Unstake(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstake",type:"event"}},methods:{"FEE_RATE()":{inputs:[],name:"FEE_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"accDegisPerWeight()":{inputs:[],name:"accDegisPerWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerSecond()":{inputs:[],name:"degisPerSecond",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getUserDeposits(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"getUserDeposits",outputs:[{components:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"lockedFrom",type:"uint256"},{internalType:"uint256",name:"lockedUntil",type:"uint256"}],internalType:"struct IPool.Deposit[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function",params:{_user:"User address"},returns:{_0:"deposits[] User's deposit info"},notice:"Get a user's deposit info"},"harvest()":{inputs:[],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Harvest your staking rewards"},"lastRewardTimestamp()":{inputs:[],name:"lastRewardTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"pendingReward(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_user:"User address"},returns:{_0:"pendingReward User's pending rewards"},notice:"Get pending rewards"},"poolToken()":{inputs:[],name:"poolToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardToWeight(uint256,uint256)":{inputs:[{internalType:"uint256",name:"reward",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"rewardToWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"setDegisPerSecond(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerSecond",type:"uint256"}],name:"setDegisPerSecond",outputs:[],stateMutability:"nonpayable",type:"function"},"stake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_lockUntil",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to stake",_lockUntil:"Lock until timestamp"},notice:"Stake tokens"},"startTimestamp()":{inputs:[],name:"startTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"timeToWeight(uint256)":{inputs:[{internalType:"uint256",name:"_length",type:"uint256"}],name:"timeToWeight",outputs:[{internalType:"uint256",name:"_weight",type:"uint256"}],stateMutability:"pure",type:"function",details:"1 year = 2e6      1 week = 1e6      2 weeks = 1e6 * ( 1 + 1 / 365)",notice:"Lock time => Lock weight"},"totalWeight()":{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unstake(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_depositId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to unstake",_depositId:"Deposit id to be unstaked"},notice:"Unstake tokens"},"updatePool()":{inputs:[],name:"updatePool",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Update the pool without fee"},"users(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"users",outputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"},{internalType:"uint256",name:"totalWeight",type:"uint256"},{internalType:"uint256",name:"rewardDebt",type:"uint256"}],stateMutability:"view",type:"function"},"weightToReward(uint256,uint256)":{inputs:[{internalType:"uint256",name:"weight",type:"uint256"},{internalType:"uint256",name:"rewardPerWeight",type:"uint256"}],name:"weightToReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/staking/interfaces/IPool.sol:IPool":{source:"contracts/staking/interfaces/IPool.sol",name:"IPool",title:"Illuvium Pool",author:"Pedro Bergamini, reviewed by Basil Gorin",notice:"An abstraction representing a pool, see IlluviumPoolBase for details",methods:{"accDegisPerWeight()":{inputs:[],name:"accDegisPerWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisPerSecond()":{inputs:[],name:"degisPerSecond",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"degisToken()":{inputs:[],name:"degisToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"pendingReward(address)":{inputs:[{internalType:"address",name:"_user",type:"address"}],name:"pendingReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"poolToken()":{inputs:[],name:"poolToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setDegisPerSecond(uint256)":{inputs:[{internalType:"uint256",name:"_degisPerSecond",type:"uint256"}],name:"setDegisPerSecond",outputs:[],stateMutability:"nonpayable",type:"function"},"startTimestamp()":{inputs:[],name:"startTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalWeight()":{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/staking/interfaces/IStakingPoolFactory.sol:IStakingPoolFactory":{source:"contracts/staking/interfaces/IStakingPoolFactory.sol",name:"IStakingPoolFactory",methods:{"createPool(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_poolToken",type:"address"},{internalType:"uint256",name:"_startBlock",type:"uint256"},{internalType:"uint256",name:"_degisPerBlock",type:"uint256"}],name:"createPool",outputs:[],stateMutability:"nonpayable",type:"function"},"mintReward(address,uint256)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintReward",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/BuyerToken.sol:BuyerToken":{source:"contracts/tokens/BuyerToken.sol",name:"BuyerToken",title:"Buyer Token",details:"Need to set the correct minters and burners when reploying this contract.",notice:"Buyer tokens are distributed to buyers corresponding to the usd value they spend.         Users can deposit their buyer tokens into PurchaseIncentiveVault.         Periodical reward will be given to the participants in PurchaseIncentiveVault.         When distributing purchase incentive reward, the buyer tokens will be burned.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"BurnerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newBurner",type:"address"}],name:"BurnerAdded",type:"event"},"BurnerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBurner",type:"address"}],name:"BurnerRemoved",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newMinter",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldMinter",type:"address"}],name:"MinterRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burnBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn buyer tokens"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBurner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"mintBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint buyer tokens"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/tokens/DegisToken.sol:DegisToken":{source:"contracts/tokens/DegisToken.sol",name:"DegisToken",title:"Degis Token",notice:"DegisToken inherits from ERC20 Permit which contains the basic ERC20 implementation.         DegisToken can use the permit function rather than approve + transferFrom.         DegisToken has an owner, a minterList and a burnerList.         When lauched on mainnet, the owner may be removed or tranferred to a multisig.         By default, the owner & the first minter will be the one that deploys the contract.         The minterList should contain FarmingPool and PurchaseIncentiveVault.         The burnerList should contain EmergencyPool.",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"BurnerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newBurner",type:"address"}],name:"BurnerAdded",type:"event"},"BurnerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBurner",type:"address"}],name:"BurnerRemoved",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newMinter",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldMinter",type:"address"}],name:"MinterRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"CAP()":{inputs:[],name:"CAP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burnDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn degis tokens"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBurner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"mintDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint degis tokens"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/tokens/interfaces/IBuyerToken.sol:IBuyerToken":{source:"contracts/tokens/interfaces/IBuyerToken.sol",name:"IBuyerToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burnBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn buyer tokens"},"mintBuyerToken(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintBuyerToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint buyer tokens"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/tokens/interfaces/ICurvePool.sol:ICurvePool":{source:"contracts/tokens/interfaces/ICurvePool.sol",name:"ICurvePool",methods:{"N_COINS()":{inputs:[],name:"N_COINS",outputs:[{internalType:"int128",name:"",type:"int128"}],stateMutability:"view",type:"function"},"coins(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"coins",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"exchange(int128,int128,uint256,uint256)":{inputs:[{internalType:"int128",name:"_indexForInToken",type:"int128"},{internalType:"int128",name:"_indexForOutToken",type:"int128"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minAmountOut",type:"uint256"}],name:"exchange",outputs:[{internalType:"uint256",name:"actualAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/tokens/interfaces/IDegisToken.sol:IDegisToken":{source:"contracts/tokens/interfaces/IDegisToken.sol",name:"IDegisToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"CAP()":{inputs:[],name:"CAP",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burnDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burnDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be burned"},notice:"Burn degis tokens"},"mintDegis(address,uint256)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mintDegis",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"Receiver's address",_amount:"Amount to be minted"},notice:"Mint degis tokens"},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}},"contracts/tokens/interfaces/IPlatypusPool.sol:IPlatypusPool":{source:"contracts/tokens/interfaces/IPlatypusPool.sol",name:"IPlatypusPool",methods:{"swap(address,address,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"_fromToken",type:"address"},{internalType:"address",name:"_toToken",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_minAmountOut",type:"uint256"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"actualAmount",type:"uint256"},{internalType:"uint256",name:"haircut",type:"uint256"}],stateMutability:"nonpayable",type:"function"}}},"contracts/utils/Context.sol:Context":{source:"contracts/utils/Context.sol",name:"Context",details:"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts."},"contracts/utils/ERC20PermitWithMultipleMinters.sol:ERC20PermitWithMultipleMinters":{source:"contracts/utils/ERC20PermitWithMultipleMinters.sol",name:"ERC20PermitWithMultipleMinters",title:"ERC20 with Multiple Minters and Burners",details:"The minters and burners are some contracts in Degis that need to issue DEG.         It has basic implementations for ERC20 and also the owner control.         Even if the owner is renounced to zero address, the token can still be minted/burned.         DegisToken and BuyerToken are both this kind ERC20 token.",notice:"This is contract used for ERC20 tokens that has multiple minters and burners.",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"BurnerAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newBurner",type:"address"}],name:"BurnerAdded",type:"event"},"BurnerRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldBurner",type:"address"}],name:"BurnerRemoved",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newMinter",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldMinter",type:"address"}],name:"MinterRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-DOMAIN_SEPARATOR}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurner(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isBurner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isMinter(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/utils/Ownable.sol:Ownable":{source:"contracts/utils/Ownable.sol",name:"Ownable",details:"The owner can be set during deployment, not default to be msg.sender",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/utils/OwnableWithoutContext.sol:OwnableWithoutContext":{source:"contracts/utils/OwnableWithoutContext.sol",name:"OwnableWithoutContext",details:"The owner can be set during deployment, not default to be msg.sender",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.",notice:"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Can only be called by the current owner.",params:{newOwner:"Address of the new owner"},notice:"Transfers ownership of the contract to a new account (`newOwner`)."}}},"contracts/utils/Pausable.sol:Pausable":{source:"contracts/utils/Pausable.sol",name:"Pausable",details:"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",events:{"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event",details:"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event",details:"Emitted when the pause is lifted by `account`."}},methods:{"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."}}},"contracts/utils/ReentrancyGuard.sol:ReentrancyGuard":{source:"contracts/utils/ReentrancyGuard.sol",name:"ReentrancyGuard",details:"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"contracts/utils/interfaces/IERC20Decimals.sol:IERC20Decimals":{source:"contracts/utils/interfaces/IERC20Decimals.sol",name:"IERC20Decimals",methods:{"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"}}},"contracts/utils/interfaces/IERC20PermitWithMultipleMinters.sol:IERC20PermitWithMultipleMinters":{source:"contracts/utils/interfaces/IERC20PermitWithMultipleMinters.sol",name:"IERC20PermitWithMultipleMinters",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"addBurner(address)":{inputs:[{internalType:"address",name:"_newBurner",type:"address"}],name:"addBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newBurner:"Address of the new burner"},notice:"Add a new burner into the burnerList"},"addMinter(address)":{inputs:[{internalType:"address",name:"_newMinter",type:"address"}],name:"addMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinter:"Address of the new minter"},notice:"Add a new minter into the minterList"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"nonces(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."},"removeBurner(address)":{inputs:[{internalType:"address",name:"_oldBurner",type:"address"}],name:"removeBurner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldBurner:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"removeMinter(address)":{inputs:[{internalType:"address",name:"_oldMinter",type:"address"}],name:"removeMinter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_oldMinter:"Address of the minter to be removed"},notice:"Remove a minter from the minterList"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}}}};new To({el:"#app",router:new od({routes:[{path:"/",component:Dd,props:()=>({json:Ld})},{path:"*",component:Id,props:e=>({json:Ld[e.path.slice(1)]})}]}),mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(ld)})},387:(e,t,n)=>{var a=n(268);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,n(346).Z)("0b345cf4",a,!1,{})},346:(e,t,n)=>{"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var r=t[i],s=r[0],o={id:e+":"+i,css:r[1],media:r[2],sourceMap:r[3]};a[s]?a[s].parts.push(o):n.push(a[s]={id:s,parts:[o]})}return n}n.d(t,{Z:()=>m});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},s=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,u=0,d=!1,p=function(){},l=null,y="data-vue-ssr-id",c="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(e,t,n,i){d=n,l=i||{};var s=a(e,t);return f(s),function(t){for(var n=[],i=0;i<s.length;i++){var o=s[i];(u=r[o.id]).refs--,n.push(u)}for(t?f(s=a(e,t)):s=[],i=0;i<n.length;i++){var u;if(0===(u=n[i]).refs){for(var d=0;d<u.parts.length;d++)u.parts[d]();delete r[u.id]}}}}function f(e){for(var t=0;t<e.length;t++){var n=e[t],a=r[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(b(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var s=[];for(i=0;i<n.parts.length;i++)s.push(b(n.parts[i]));r[n.id]={id:n.id,refs:1,parts:s}}}}function h(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function b(e){var t,n,a=document.querySelector("style["+y+'~="'+e.id+'"]');if(a){if(d)return p;a.parentNode.removeChild(a)}if(c){var i=u++;a=o||(o=h()),t=w.bind(null,a,i,!1),n=w.bind(null,a,i,!0)}else a=h(),t=g.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var T,v=(T=[],function(e,t){return T[e]=t,T.filter(Boolean).join("\n")});function w(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=v(t,i);else{var r=document.createTextNode(i),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(r,s[t]):e.appendChild(r)}}function g(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute(y,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(267)})();