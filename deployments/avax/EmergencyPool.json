{
  "address": "0xDC6446Afe79de533BcA4DE28872E8Fd9F0762835",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa8a8fce90ed9708d16b16da4756875adcfed33268a8d8f0fecc3d1055c3e41fe",
  "receipt": {
    "to": null,
    "from": "0xeB496257B64Cc2D39c291B209F465f3cfADE0873",
    "contractAddress": "0xDC6446Afe79de533BcA4DE28872E8Fd9F0762835",
    "transactionIndex": 9,
    "gasUsed": "709929",
    "logsBloom": "0x
    "blockHash": "0xf34e06a0b09b42d8b1de7f266d5486d82d92d9dc08564bbf30eb9fb2ed36e59e",
    "transactionHash": "0xa8a8fce90ed9708d16b16da4756875adcfed33268a8d8f0fecc3d1055c3e41fe",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 11529079,
        "transactionHash": "0xa8a8fce90ed9708d16b16da4756875adcfed33268a8d8f0fecc3d1055c3e41fe",
        "address": "0xDC6446Afe79de533BcA4DE28872E8Fd9F0762835",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000eb496257b64cc2d39c291b209f465f3cfade0873"
        ],
        "data": "0x",
        "logIndex": 61,
        "blockHash": "0xf34e06a0b09b42d8b1de7f266d5486d82d92d9dc08564bbf30eb9fb2ed36e59e"
      }
    ],
    "blockNumber": 11529079,
    "cumulativeGasUsed": "2918777",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8d54052dd6ff531ba200587187db4baa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"_amount\":\"The amount that the user want to stake\",\"_tokenAddress\":\"Address of the ERC20 token\"}},\"emergencyWithdraw(address,uint256)\":{\"details\":\"The ownership need to be transferred to another contract in the future\",\"params\":{\"_amount\":\"The amount that the user want to unstake\",\"_tokenAddress\":\"Address of the ERC20 token\"}},\"renounceOwnership()\":{\"details\":\"Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Can only be called by the current owner.\",\"params\":{\"newOwner\":\"Address of the new owner\"}}},\"title\":\"Emergency Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"Manually stake into the pool\"},\"emergencyWithdraw(address,uint256)\":{\"notice\":\"Withdraw the asset when emergency (only by the owner)\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`).\"}},\"notice\":\"Emergency pool in degis will keep a reserve vault for emergency usage.         The asset comes from part of the product's income (currently 10%).         Users can also stake funds into this contract manually.         The owner has the right to withdraw funds from emergency pool and it would be passed to community governance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EmergencyPool.sol\":\"EmergencyPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x671741933530f343f023a40e58e61bc09d62494b96c6f3e39e647f315facd519\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\"},\"contracts/EmergencyPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./utils/Ownable.sol\\\";\\n\\n/**\\n * @title  Emergency Pool\\n * @notice Emergency pool in degis will keep a reserve vault for emergency usage.\\n *         The asset comes from part of the product's income (currently 10%).\\n *         Users can also stake funds into this contract manually.\\n *         The owner has the right to withdraw funds from emergency pool and it would be passed to community governance.\\n */\\ncontract EmergencyPool is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************* Variables **************************************** //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    string public name = \\\"Degis Emergency Pool\\\";\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // *************************************** Events ***************************************** //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    event Deposit(\\n        address indexed tokenAddress,\\n        address indexed userAddress,\\n        uint256 amount\\n    );\\n    event Withdraw(\\n        address indexed tokenAddress,\\n        address indexed userAddress,\\n        uint256 amount\\n    );\\n\\n    // ---------------------------------------------------------------------------------------- //\\n    // ************************************ Main Functions ************************************ //\\n    // ---------------------------------------------------------------------------------------- //\\n\\n    /**\\n     * @notice Manually stake into the pool\\n     * @param _tokenAddress Address of the ERC20 token\\n     * @param _amount The amount that the user want to stake\\n     */\\n    function deposit(address _tokenAddress, uint256 _amount) external {\\n        require(_amount > 0, \\\"Please deposit some funds\\\");\\n\\n        IERC20(_tokenAddress).safeTransferFrom(\\n            _msgSender(),\\n            address(this),\\n            _amount\\n        );\\n\\n        emit Deposit(_tokenAddress, _msgSender(), _amount);\\n    }\\n\\n    /**\\n     * @notice Withdraw the asset when emergency (only by the owner)\\n     * @dev The ownership need to be transferred to another contract in the future\\n     * @param _tokenAddress Address of the ERC20 token\\n     * @param _amount The amount that the user want to unstake\\n     */\\n    function emergencyWithdraw(address _tokenAddress, uint256 _amount)\\n        external\\n        onlyOwner\\n    {\\n        uint256 balance = IERC20(_tokenAddress).balanceOf(address(this));\\n        require(_amount <= balance, \\\"Not enough balance to withdraw\\\");\\n\\n        IERC20(_tokenAddress).safeTransfer(owner(), _amount);\\n        emit Withdraw(_tokenAddress, owner(), _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x543928467f65e72715983d3c46c50bf3ca5a9c3769f12c17db1d041a699141d8\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.10;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x6fe5115c43db85920e7325c78060272343284628b8367ea986dab63747553dde\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.10;\\n\\nimport \\\"./Context.sol\\\";\\n\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @notice Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Leaves the contract without owner. It will not be possible to call\\n     *         `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * @dev    Renouncing ownership will leave the contract without an owner,\\n     *         thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n     * @dev    Can only be called by the current owner.\\n     * @param  newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n     * @dev    Internal function without access restriction.\\n     * @param  newOwner Address of the new owner\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x7a9dd5901ac4df2345331de62e90d1a71ac38d037b91458741c25f24f16ff508\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60c0604052601460808190527f446567697320456d657267656e637920506f6f6c00000000000000000000000060a0908152620000409160019190620000b0565b503480156200004e57600080fd5b506200005a3362000060565b6200019d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000be906200016c565b90600052602060002090601f016020900481019282620000e257600085556200012d565b82601f10620000fd57805160ff19168380011785556200012d565b828001600101855582156200012d579182015b828111156200012d57825182559160200191906001019062000110565b506200013b9291506200013f565b5090565b5b808211156200013b576000815560010162000140565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806200018157607f821691505b6020821081141562000197576200019762000156565b50919050565b610af080620001ad6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806347e7ef2414610085578063715018a61461009a5780638da5cb5b146100a257806395ccea67146100bb578063f2fde38b146100ce575b600080fd5b61006f6100e1565b60405161007c91906106c4565b60405180910390f35b610098610093366004610718565b61016f565b005b6100986101fc565b6000546001600160a01b031660405161007c9190610764565b6100986100c9366004610718565b610241565b6100986100dc366004610772565b61038d565b600180546100ee906107a9565b80601f016020809104026020016040519081016040528092919081815260200182805461011a906107a9565b80156101675780601f1061013c57610100808354040283529160200191610167565b820191906000526020600020905b81548152906001019060200180831161014a57829003601f168201915b505050505081565b600081116101985760405162461bcd60e51b815260040161018f9061080a565b60405180910390fd5b6101ad6001600160a01b0383163330846103f8565b336001600160a01b0316826001600160a01b03167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62836040516101f09190610820565b60405180910390a35050565b3361020f6000546001600160a01b031690565b6001600160a01b0316146102355760405162461bcd60e51b815260040161018f9061085e565b61023f6000610456565b565b336102546000546001600160a01b031690565b6001600160a01b03161461027a5760405162461bcd60e51b815260040161018f9061085e565b6040516370a0823160e01b81526000906001600160a01b038416906370a08231906102a9903090600401610764565b602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190610879565b90508082111561030c5760405162461bcd60e51b815260040161018f906108cc565b6103326103216000546001600160a01b031690565b6001600160a01b03851690846104a6565b6000546001600160a01b03166001600160a01b0316836001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb846040516103809190610820565b60405180910390a3505050565b336103a06000546001600160a01b031690565b6001600160a01b0316146103c65760405162461bcd60e51b815260040161018f9061085e565b6001600160a01b0381166103ec5760405162461bcd60e51b815260040161018f9061091f565b6103f581610456565b50565b610450846323b872dd60e01b8585856040516024016104199392919061092f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526104ca565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104c58363a9059cbb60e01b8484604051602401610419929190610957565b505050565b600061051f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105599092919063ffffffff16565b8051909150156104c5578080602001905181019061053d9190610985565b6104c55760405162461bcd60e51b815260040161018f906109eb565b60606105688484600085610572565b90505b9392505050565b6060824710156105945760405162461bcd60e51b815260040161018f90610a3c565b843b6105b25760405162461bcd60e51b815260040161018f90610a7e565b600080866001600160a01b031685876040516105ce9190610ab0565b60006040518083038185875af1925050503d806000811461060b576040519150601f19603f3d011682016040523d82523d6000602084013e610610565b606091505b509150915061062082828661062d565b925050505b949350505050565b6060831561063c57508161056b565b82511561064c5782518084602001fd5b8160405162461bcd60e51b815260040161018f91906106c4565b60005b83811015610681578181015183820152602001610669565b838111156104505750506000910152565b600061069c825190565b8084526020840193506106b3818560208601610666565b601f01601f19169290920192915050565b6020808252810161056b8184610692565b60006001600160a01b0382165b92915050565b6106f1816106d5565b81146103f557600080fd5b80356106e2816106e8565b806106f1565b80356106e281610707565b6000806040838503121561072e5761072e600080fd5b600061073a85856106fc565b925050602061074b8582860161070d565b9150509250929050565b61075e816106d5565b82525050565b602081016106e28284610755565b60006020828403121561078757610787600080fd5b600061062584846106fc565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806107bd57607f821691505b602082108114156107d0576107d0610793565b50919050565b60198152602081017f506c65617365206465706f73697420736f6d652066756e647300000000000000815290505b60200190565b602080825281016106e2816107d6565b8061075e565b602081016106e2828461081a565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610804565b602080825281016106e28161082e565b80516106e281610707565b60006020828403121561088e5761088e600080fd5b6000610625848461086e565b601e8152602081017f4e6f7420656e6f7567682062616c616e636520746f207769746864726177000081529050610804565b602080825281016106e28161089a565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015290505b60400190565b602080825281016106e2816108dc565b6060810161093d8286610755565b61094a6020830185610755565b610625604083018461081a565b604081016109658285610755565b61056b602083018461081a565b8015156106f1565b80516106e281610972565b60006020828403121561099a5761099a600080fd5b6000610625848461097a565b602a8152602081017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529050610919565b602080825281016106e2816109a6565b60268152602081017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529050610919565b602080825281016106e2816109fb565b601d8152602081017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529050610804565b602080825281016106e281610a4c565b6000610a98825190565b610aa6818560208601610666565b9290920192915050565b6106e28183610a8e56fea264697066735822122085e3821212c62a3c74382ebae8e2923e88d2af88cf5fd630f329e47f189c709064736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806347e7ef2414610085578063715018a61461009a5780638da5cb5b146100a257806395ccea67146100bb578063f2fde38b146100ce575b600080fd5b61006f6100e1565b60405161007c91906106c4565b60405180910390f35b610098610093366004610718565b61016f565b005b6100986101fc565b6000546001600160a01b031660405161007c9190610764565b6100986100c9366004610718565b610241565b6100986100dc366004610772565b61038d565b600180546100ee906107a9565b80601f016020809104026020016040519081016040528092919081815260200182805461011a906107a9565b80156101675780601f1061013c57610100808354040283529160200191610167565b820191906000526020600020905b81548152906001019060200180831161014a57829003601f168201915b505050505081565b600081116101985760405162461bcd60e51b815260040161018f9061080a565b60405180910390fd5b6101ad6001600160a01b0383163330846103f8565b336001600160a01b0316826001600160a01b03167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62836040516101f09190610820565b60405180910390a35050565b3361020f6000546001600160a01b031690565b6001600160a01b0316146102355760405162461bcd60e51b815260040161018f9061085e565b61023f6000610456565b565b336102546000546001600160a01b031690565b6001600160a01b03161461027a5760405162461bcd60e51b815260040161018f9061085e565b6040516370a0823160e01b81526000906001600160a01b038416906370a08231906102a9903090600401610764565b602060405180830381865afa1580156102c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ea9190610879565b90508082111561030c5760405162461bcd60e51b815260040161018f906108cc565b6103326103216000546001600160a01b031690565b6001600160a01b03851690846104a6565b6000546001600160a01b03166001600160a01b0316836001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb846040516103809190610820565b60405180910390a3505050565b336103a06000546001600160a01b031690565b6001600160a01b0316146103c65760405162461bcd60e51b815260040161018f9061085e565b6001600160a01b0381166103ec5760405162461bcd60e51b815260040161018f9061091f565b6103f581610456565b50565b610450846323b872dd60e01b8585856040516024016104199392919061092f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526104ca565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104c58363a9059cbb60e01b8484604051602401610419929190610957565b505050565b600061051f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105599092919063ffffffff16565b8051909150156104c5578080602001905181019061053d9190610985565b6104c55760405162461bcd60e51b815260040161018f906109eb565b60606105688484600085610572565b90505b9392505050565b6060824710156105945760405162461bcd60e51b815260040161018f90610a3c565b843b6105b25760405162461bcd60e51b815260040161018f90610a7e565b600080866001600160a01b031685876040516105ce9190610ab0565b60006040518083038185875af1925050503d806000811461060b576040519150601f19603f3d011682016040523d82523d6000602084013e610610565b606091505b509150915061062082828661062d565b925050505b949350505050565b6060831561063c57508161056b565b82511561064c5782518084602001fd5b8160405162461bcd60e51b815260040161018f91906106c4565b60005b83811015610681578181015183820152602001610669565b838111156104505750506000910152565b600061069c825190565b8084526020840193506106b3818560208601610666565b601f01601f19169290920192915050565b6020808252810161056b8184610692565b60006001600160a01b0382165b92915050565b6106f1816106d5565b81146103f557600080fd5b80356106e2816106e8565b806106f1565b80356106e281610707565b6000806040838503121561072e5761072e600080fd5b600061073a85856106fc565b925050602061074b8582860161070d565b9150509250929050565b61075e816106d5565b82525050565b602081016106e28284610755565b60006020828403121561078757610787600080fd5b600061062584846106fc565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806107bd57607f821691505b602082108114156107d0576107d0610793565b50919050565b60198152602081017f506c65617365206465706f73697420736f6d652066756e647300000000000000815290505b60200190565b602080825281016106e2816107d6565b8061075e565b602081016106e2828461081a565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610804565b602080825281016106e28161082e565b80516106e281610707565b60006020828403121561088e5761088e600080fd5b6000610625848461086e565b601e8152602081017f4e6f7420656e6f7567682062616c616e636520746f207769746864726177000081529050610804565b602080825281016106e28161089a565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015290505b60400190565b602080825281016106e2816108dc565b6060810161093d8286610755565b61094a6020830185610755565b610625604083018461081a565b604081016109658285610755565b61056b602083018461081a565b8015156106f1565b80516106e281610972565b60006020828403121561099a5761099a600080fd5b6000610625848461097a565b602a8152602081017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529050610919565b602080825281016106e2816109a6565b60268152602081017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529050610919565b602080825281016106e2816109fb565b601d8152602081017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529050610804565b602080825281016106e281610a4c565b6000610a98825190565b610aa6818560208601610666565b9290920192915050565b6106e28183610a8e56fea264697066735822122085e3821212c62a3c74382ebae8e2923e88d2af88cf5fd630f329e47f189c709064736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(address,uint256)": {
        "params": {
          "_amount": "The amount that the user want to stake",
          "_tokenAddress": "Address of the ERC20 token"
        }
      },
      "emergencyWithdraw(address,uint256)": {
        "details": "The ownership need to be transferred to another contract in the future",
        "params": {
          "_amount": "The amount that the user want to unstake",
          "_tokenAddress": "Address of the ERC20 token"
        }
      },
      "renounceOwnership()": {
        "details": "Renouncing ownership will leave the contract without an owner,         thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Can only be called by the current owner.",
        "params": {
          "newOwner": "Address of the new owner"
        }
      }
    },
    "title": "Emergency Pool",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(address,uint256)": {
        "notice": "Manually stake into the pool"
      },
      "emergencyWithdraw(address,uint256)": {
        "notice": "Withdraw the asset when emergency (only by the owner)"
      },
      "owner()": {
        "notice": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "notice": "Leaves the contract without owner. It will not be possible to call         `onlyOwner` functions anymore. Can only be called by the current owner."
      },
      "transferOwnership(address)": {
        "notice": "Transfers ownership of the contract to a new account (`newOwner`)."
      }
    },
    "notice": "Emergency pool in degis will keep a reserve vault for emergency usage.         The asset comes from part of the product's income (currently 10%).         Users can also stake funds into this contract manually.         The owner has the right to withdraw funds from emergency pool and it would be passed to community governance.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 21502,
        "contract": "contracts/EmergencyPool.sol:EmergencyPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6061,
        "contract": "contracts/EmergencyPool.sol:EmergencyPool",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}